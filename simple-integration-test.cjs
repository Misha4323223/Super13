/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏
 */

async function testSemanticIntegration() {
  console.log('üß™ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–û–ô –ü–ê–ú–Ø–¢–ò\n');

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å –Ω–∞–ø—Ä—è–º—É—é
    const semanticMemory = require('./server/semantic-memory/index.cjs');
    const intelligentProcessor = require('./server/intelligent-chat-processor.cjs');
    
    console.log('‚úÖ –ú–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    
    // –¢–µ—Å—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏
    console.log('\nüìù –¢–µ—Å—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏');
    const sessionId = 'test-session-' + Date.now();
    
    await semanticMemory.processUserInput(sessionId, '–°–æ–∑–¥–∞—é –ø—Ä–æ–µ–∫—Ç –ª–æ–≥–æ—Ç–∏–ø–∞ –¥–ª—è –∫–æ—Ñ–µ–π–Ω–∏');
    console.log('‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–º—è—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    
    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüìù –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö');
    const semanticData = await semanticMemory.getEnhancedContext(sessionId);
    
    console.log('–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:');
    console.log('- –ü—Ä–æ–µ–∫—Ç–æ–≤:', semanticData.projects?.length || 0);
    console.log('- –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π:', semanticData.predictions?.length || 0);
    console.log('- –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç:', semanticData.enhanced_prompt ? '–µ—Å—Ç—å' : '–Ω–µ—Ç');
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º
    console.log('\nüìù –¢–µ—Å—Ç 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º');
    
    const testOptions = {
      sessionId: sessionId,
      semanticData: semanticData,
      isDirectRequest: true
    };
    
    const result = await intelligentProcessor.analyzeUserIntent(
      '–°–æ–∑–¥–∞–π –ª–æ–≥–æ—Ç–∏–ø —Å —á–∞—à–∫–æ–π –∫–æ—Ñ–µ',
      testOptions
    );
    
    if (result && result.category) {
      console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç! –ö–∞—Ç–µ–≥–æ—Ä–∏—è:', result.category);
      console.log('‚úÖ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:', result.confidence);
      
      if (result.semanticEnhancement) {
        console.log('‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ');
      }
    } else {
      console.log('‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–ø–æ–ª–Ω—ã–π');
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('‚ú® –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–º—è—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:', error.message);
    console.error('Stack:', error.stack);
  }
}

testSemanticIntegration();