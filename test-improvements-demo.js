/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –¥–æ –∏ –ø–æ—Å–ª–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
 */

import { createRequire } from 'module';
const require = createRequire(import.meta.url);

async function demonstrateImprovements() {
  console.log('üéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏\n');

  try {
    const intelligentProcessor = require('./server/intelligent-chat-processor.cjs');
    const semanticMemory = require('./server/semantic-memory/index.cjs');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
    const sessionId = 'demo-' + Date.now();

    console.log('üìã –°–¶–ï–ù–ê–†–ò–ô: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–µ—Ç –¥–∏–∑–∞–π–Ω –ª–æ–≥–æ—Ç–∏–ø–∞ –∏ —Ö–æ—á–µ—Ç –µ–≥–æ –≤–µ–∫—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å\n');

    // –®–∞–≥ 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞
    console.log('üîπ –®–∞–≥ 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç "–°–æ–∑–¥–∞–π –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è –ø–µ–∫–∞—Ä–Ω–∏"');
    
    const result1 = await intelligentProcessor.analyzeUserIntent(
      '–°–æ–∑–¥–∞–π –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è –ø–µ–∫–∞—Ä–Ω–∏',
      { sessionId: sessionId }
    );

    console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑: ${result1.category} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${result1.confidence.toFixed(1)}%)`);
    console.log(`üß† –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: ${result1.semanticContext ? '–î–ê' : '–ù–ï–¢'}`);
    
    if (result1.semanticContext?.project) {
      console.log(`üìÅ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω: "${result1.semanticContext.project.title}"`);
      console.log(`üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: ${result1.semanticContext.predictions.length}`);
      console.log(`üí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏: ${result1.semanticContext.predictions.map(p => p.action).join(', ')}`);
    }

    // –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    await semanticMemory.addArtifactWithContext(sessionId, {
      type: 'image',
      url: 'https://example.com/bakery-logo.png',
      description: '–õ–æ–≥–æ—Ç–∏–ø –ø–µ–∫–∞—Ä–Ω–∏ —Å —Ö–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–º–∏ –∏–∑–¥–µ–ª–∏—è–º–∏',
      style: 'artistic',
      metadata: { demo: true }
    });

    console.log('\nüîπ –®–∞–≥ 2: –ß–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç "–≤–µ–∫—Ç–æ—Ä–∏–∑—É–π"');
    
    // –®–∞–≥ 2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –≤–µ–∫—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å
    const result2 = await intelligentProcessor.analyzeUserIntent(
      '–≤–µ–∫—Ç–æ—Ä–∏–∑—É–π',
      { sessionId: sessionId }
    );

    console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑: ${result2.category} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${result2.confidence.toFixed(1)}%)`);
    console.log(`üß† –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: ${result2.semanticContext ? '–î–ê' : '–ù–ï–¢'}`);
    
    if (result2.semanticContext) {
      console.log(`üîó –°–≤—è–∑—å —Å –ø—Ä–æ–µ–∫—Ç–æ–º: ${result2.semanticContext.project ? '–û–ë–ù–ê–†–£–ñ–ï–ù–ê' : '–ù–ï –ù–ê–ô–î–ï–ù–ê'}`);
      console.log(`üìà –û–±–æ–≥–∞—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: ${result2.enhancedQuery ? '–î–ê' : '–ù–ï–¢'}`);
      
      if (result2.enhancedQuery) {
        console.log(`üí¨ –ë—ã–ª–æ: "–≤–µ–∫—Ç–æ—Ä–∏–∑—É–π"`);
        console.log(`üí¨ –°—Ç–∞–ª–æ: "${result2.enhancedQuery}"`);
      }
    }

    // –®–∞–≥ 3: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    console.log('\nüîπ –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π');
    
    const suggestions = await semanticMemory.getProactiveSuggestions(sessionId, {
      hasRecentImages: true,
      lastAction: 'vectorization'
    });

    console.log(`üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ–ª—É—á–µ–Ω–æ: ${suggestions.length}`);
    suggestions.forEach((suggestion, index) => {
      console.log(`   ${index + 1}. ${suggestion.message}`);
    });

    // –®–∞–≥ 4: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    console.log('\nüîπ –®–∞–≥ 4: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã');
    
    const stats = semanticMemory.getSystemStatistics();
    console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${stats.queriesProcessed}`);
    console.log(`üìÅ –ü—Ä–æ–µ–∫—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: ${stats.projectsCreated}`);
    console.log(`üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${stats.predictionsGenerated}`);
    console.log(`üóÇÔ∏è –£–∑–ª–æ–≤ –≤ –≥—Ä–∞—Ñ–µ –∑–Ω–∞–Ω–∏–π: ${stats.knowledge_graph?.totalNodes || 0}`);

    // –®–∞–≥ 5: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    console.log('\nüîπ –®–∞–≥ 5: –¢–µ—Å—Ç –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ - "—Å–¥–µ–ª–∞–π –µ–≥–æ –≤ —Å–∏–Ω–∏—Ö —Ç–æ–Ω–∞—Ö"');
    
    const result3 = await intelligentProcessor.analyzeUserIntent(
      '—Å–¥–µ–ª–∞–π –µ–≥–æ –≤ —Å–∏–Ω–∏—Ö —Ç–æ–Ω–∞—Ö',
      { sessionId: sessionId }
    );

    console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑: ${result3.category} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${result3.confidence.toFixed(1)}%)`);
    console.log(`üîó –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: ${result3.semanticContext?.project ? '–î–ê - –∑–Ω–∞–µ—Ç —á—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' : '–ù–ï–¢'}`);

    console.log('\nüéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!\n');

    console.log('üìà –ö–õ–Æ–ß–ï–í–´–ï –£–õ–£–ß–®–ï–ù–ò–Ø:');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–º–Ω–∏—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –ª–æ–≥–æ—Ç–∏–ø–æ–º –ø–µ–∫–∞—Ä–Ω–∏');
    console.log('‚úÖ –ü–æ–Ω–∏–º–∞–µ—Ç –Ω–µ—Ç–æ—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ("–≤–µ–∫—Ç–æ—Ä–∏–∑—É–π" ‚Üí "–≤–µ–∫—Ç–æ—Ä–∏–∑—É–π –ª–æ–≥–æ—Ç–∏–ø –ø–µ–∫–∞—Ä–Ω–∏")');
    console.log('‚úÖ –ü—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('‚úÖ –î–∞–µ—Ç –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è');
    console.log('‚úÖ –ü–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏ ("–µ–≥–æ" = –ª–æ–≥–æ—Ç–∏–ø –ø–µ–∫–∞—Ä–Ω–∏)');
    console.log('‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–æ–≤ –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏');

    return true;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error.message);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
demonstrateImprovements()
  .then(success => {
    if (success) {
      console.log('\nüöÄ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–º—è—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!');
      console.log('üí° –¢–µ–ø–µ—Ä—å –≤–∞—à —á–∞—Ç –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –ø–æ–º–Ω–∏—Ç –ø—Ä–æ–µ–∫—Ç—ã');
    } else {
      console.log('\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ');
    }
    process.exit(success ? 0 : 1);
  })
  .catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });