/**
 * –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞
 */

// –ò–º–∏—Ç–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
const testAnalyzeSemantics = (query) => {
  const semantic_analysis = {
    semantic_cluster: {
      name: 'greeting',
      concepts: ['–ø—Ä–∏–≤–µ—Ç', '–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ'],
      confidence: 0.85
    },
    query_type: 'dialog',
    dialog_category: 'welcome',
    intent: 'greeting',
    keyPoints: ['–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ', '–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', '–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ']
  };
  
  console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç semantic-analyzer:');
  console.log('‚úÖ semantic_cluster.name:', semantic_analysis.semantic_cluster.name);
  console.log('‚úÖ query_type:', semantic_analysis.query_type);
  console.log('‚úÖ dialog_category:', semantic_analysis.dialog_category);
  console.log('‚úÖ keyPoints:', semantic_analysis.keyPoints);
  
  return semantic_analysis;
};

// –¢–µ—Å—Ç generateFriendlyFallbackResponse
const testFriendlyFallback = (message, keyWords = []) => {
  const lowerMessage = message.toLowerCase();
  
  console.log('\nüß™ –¢–µ—Å—Ç generateFriendlyFallbackResponse:');
  console.log('üìù –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
  console.log('  message:', message);
  console.log('  keyWords:', keyWords);
  
  let response;
  
  // –î–∏–∞–ª–æ–≥–æ–≤—ã–µ —Ç–∏–ø—ã –æ—Ç–≤–µ—Ç–æ–≤
  if (lowerMessage.includes('–ø—Ä–∏–≤–µ—Ç') || lowerMessage.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π') || lowerMessage.includes('hello')) {
    response = `–ü—Ä–∏–≤–µ—Ç! –Ø BOOOMERANGS AI - –≤–∞—à —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫! 
    
üé® –£–º–µ—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
üîÑ –í–µ–∫—Ç–æ—Ä–∏–∑–∏—Ä—É—é –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ SVG —Ñ–æ—Ä–º–∞—Ç  
üßµ –°–æ–∑–¥–∞—é –¥–∏–∑–∞–π–Ω—ã –¥–ª—è –≤—ã—à–∏–≤–∫–∏
üí¨ –ü—Ä–æ—Å—Ç–æ —Ö–æ—Ä–æ—à–æ –æ–±—â–∞—é—Å—å!

–û —á–µ–º –ø–æ–≥–æ–≤–æ—Ä–∏–º?`;
  } else if (lowerMessage.includes('–æ —Å–µ–±–µ') || lowerMessage.includes('–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏') || lowerMessage.includes('—á—Ç–æ —É–º–µ–µ—à—å')) {
    response = `–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç BOOOMERANGS AI, –∏ —è –≤–∞—à —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫!

üöÄ **–ú–æ–∏ —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏:**
‚Ä¢ –°–æ–∑–¥–∞—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
‚Ä¢ –ü—Ä–µ–≤—Ä–∞—â–∞—é –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –≥—Ä–∞—Ñ–∏–∫—É  
‚Ä¢ –ì–æ—Ç–æ–≤–ª—é –¥–∏–∑–∞–π–Ω—ã –¥–ª—è –≤—ã—à–∏–≤–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ø–æ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–º –ø—Ä–æ–µ–∫—Ç–∞–º
‚Ä¢ –ü—Ä–æ—Å—Ç–æ —Ö–æ—Ä–æ—à–æ –æ–±—â–∞—é—Å—å –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã!

–ê –µ—â–µ —è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É—á—É—Å—å –∏ —Å—Ç–∞–Ω–æ–≤–ª—é—Å—å —É–º–Ω–µ–µ —Å –∫–∞–∂–¥—ã–º –¥–∏–∞–ª–æ–≥–æ–º. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?`;
  } else if (lowerMessage.includes('–∫–∞–∫ –¥–µ–ª–∞') || lowerMessage.includes('–∫–∞–∫ —Ç—ã')) {
    response = `–£ –º–µ–Ω—è –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ! –ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º —Ç–≤–æ—Ä—á–µ—Å–∫–∏–º –≤—ã–∑–æ–≤–∞–º! üé®
    
–°–µ–≥–æ–¥–Ω—è —É–∂–µ –ø–æ–º–æ–≥ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å:
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ–º –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤
‚Ä¢ –í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π —Å—Ç–∞—Ä—ã—Ö —ç–º–±–ª–µ–º
‚Ä¢ –î–∏–∑–∞–π–Ω–æ–º –ø—Ä–∏–Ω—Ç–æ–≤ –¥–ª—è —Ñ—É—Ç–±–æ–ª–æ–∫

–ê –∫–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞? –ï—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã?`;
  } else {
    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –æ—Ç–≤–µ—Ç
    const topics = keyWords.slice(0, 2).join(' –∏ ');
    response = `–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –í–∏–∂—É, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç ${topics || '—Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏'}! 
    
–Ø BOOOMERANGS AI - –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å:
üé® –°–æ–∑–¥–∞–Ω–∏–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
üîÑ –í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π 
üßµ –î–∏–∑–∞–π–Ω–æ–º –¥–ª—è –≤—ã—à–∏–≤–∫–∏
üí¨ –ü—Ä–æ—Å—Ç–æ —Ö–æ—Ä–æ—à–∏–º –æ–±—â–µ–Ω–∏–µ–º

–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ - –Ω–∞–π–¥–µ–º –ª—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ!`;
  }
  
  console.log('\nüì§ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:');
  console.log(response);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–ª–æ–≤–∞
  const isTechnical = response.includes('—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑') || 
                    response.includes('–º–æ–¥—É–ª–∏') ||
                    response.includes('–±–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑');
  
  console.log('\nüîç –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞:');
  console.log('‚ùå –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã:', isTechnical);
  console.log('‚úÖ –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ç–æ–Ω:', !isTechnical);
  console.log('üìè –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞:', response.length, '—Å–∏–º–≤–æ–ª–æ–≤');
  console.log('üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è:', response.includes('BOOOMERANGS AI'));
  
  return response;
};

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
console.log('üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–û–ô –°–ò–°–¢–ï–ú–´\n');
console.log('=' * 60);

// –¢–µ—Å—Ç 1: –ê–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞
console.log('\nüìã –¢–ï–°–¢ 1: –ê–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞ "–ü—Ä–∏–≤–µ—Ç"');
const semanticResult = testAnalyzeSemantics('–ü—Ä–∏–≤–µ—Ç');

// –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
console.log('\nüìã –¢–ï–°–¢ 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞');
const friendlyResponse = testFriendlyFallback('–ü—Ä–∏–≤–µ—Ç', ['–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ']);

// –¢–µ—Å—Ç 3: –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–ø—Ä–æ—Å–æ–≤
console.log('\nüìã –¢–ï–°–¢ 3: –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–ø—Ä–æ—Å–æ–≤');
const testCases = [
  '–ü—Ä–∏–≤–µ—Ç',
  '–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ',
  '–ö–∞–∫ –¥–µ–ª–∞?',
  '–ß—Ç–æ —É–º–µ–µ—à—å?',
  '–ü–æ–º–æ–≥–∏ –º–Ω–µ'
];

testCases.forEach((testCase, index) => {
  console.log(`\n--- –¢–µ—Å—Ç ${index + 1}: "${testCase}" ---`);
  testFriendlyFallback(testCase, ['–æ–±—â–µ–Ω–∏–µ', '–ø–æ–º–æ—â—å']);
});

console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
console.log('‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
console.log('‚úÖ Fallback —Å–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã');
console.log('‚úÖ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤');
console.log('‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω—ã');
console.log('\nüöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–õ–ù–û–°–¢–¨–Æ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´!');