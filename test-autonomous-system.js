/**
 * –¢–µ—Å—Ç –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã BOOOMERANGS
 * –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
 */

const express = require('express');
const cors = require('cors');
const app = express();
const port = 5000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.static('public'));

// –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
function generateAutonomousResponse(message, options = {}) {
  const lowerMessage = message.toLowerCase();
  
  // –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞
  if (lowerMessage.includes('booomerangs')) {
    return {
      response: `BOOOMERANGS - —ç—Ç–æ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è AI-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å 46+ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ –º–æ–¥—É–ª—è–º–∏, –≤–∫–ª—é—á–∞—è –∫–≤–∞–Ω—Ç–æ–≤–æ-—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É, –º–µ—Ç–∞-—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ. –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç ChatGPT –±–ª–∞–≥–æ–¥–∞—Ä—è –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤.`,
      type: 'about'
    };
  }
  
  if (lowerMessage.includes('–ø—Ä–∏–≤–µ—Ç') || lowerMessage.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π') || lowerMessage.includes('hello')) {
    return {
      response: `–ü—Ä–∏–≤–µ—Ç! –Ø –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è AI-—Å–∏—Å—Ç–µ–º–∞ BOOOMERANGS —Å –∫–≤–∞–Ω—Ç–æ–≤–æ-—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏. –£ –º–µ–Ω—è –µ—Å—Ç—å 46+ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?`,
      type: 'greeting'
    };
  }
  
  if (lowerMessage.includes('–∫–∞–∫ –¥–µ–ª–∞') || lowerMessage.includes('–∫–∞–∫ —Ç—ã')) {
    return {
      response: `–û—Ç–ª–∏—á–Ω–æ! –ú–æ—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ 100% –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤. –ú–µ—Ç–∞-—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–µ–Ω, –∫–≤–∞–Ω—Ç–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –∑–∞–ø—Ä–æ—Å—ã, —Å–∏—Å—Ç–µ–º–∞ –æ–±—É—á–µ–Ω–∏—è –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è. –ì–æ—Ç–æ–≤ –∫ —Å–ª–æ–∂–Ω—ã–º –∑–∞–¥–∞—á–∞–º!`,
      type: 'status'
    };
  }
  
  // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
  if (lowerMessage.match(/–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ|–∫–æ–¥|–∞–ª–≥–æ—Ä–∏—Ç–º|javascript|python|—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞/)) {
    return {
      response: `–Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º –∞–Ω–∞–ª–∏–∑–µ –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤. –ú–æ–≥—É –ø–æ–º–æ—á—å —Å –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏ –∏ –ª–æ–≥–∏–∫–æ–π –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤. –ú–æ—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.`,
      type: 'technical'
    };
  }
  
  // –í–æ–ø—Ä–æ—Å—ã –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
  if (lowerMessage.includes('—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å') || lowerMessage.includes('–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏')) {
    return {
      response: `–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–∫–ª—é—á–∞—é—Ç: —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å 46+ –º–æ–¥—É–ª—è–º–∏, –∫–≤–∞–Ω—Ç–æ–≤–æ-—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É, –º–µ—Ç–∞-–∞–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–æ–≤, –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é –æ—Ç–≤–µ—Ç–æ–≤, –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ, —Ä–∞–±–æ—Ç—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ –ø–æ–ª–Ω—É—é –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö API.`,
      type: 'capabilities'
    };
  }
  
  // –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã - —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
  const words = message.toLowerCase().split(' ');
  const keyWords = words.filter(word => word.length > 3);
  
  // –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
  const positiveWords = ['—Ö–æ—Ä–æ—à–æ', '–æ—Ç–ª–∏—á–Ω–æ', '—Å—É–ø–µ—Ä', '–∫–ª–∞—Å—Å–Ω–æ', '–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ', '–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ'];
  const questionWords = ['—á—Ç–æ', '–∫–∞–∫', '–∫–æ–≥–¥–∞', '–≥–¥–µ', '–ø–æ—á–µ–º—É', '–∑–∞—á–µ–º', '–∫–∞–∫–æ–π'];
  
  const isQuestion = questionWords.some(q => message.toLowerCase().includes(q)) || message.includes('?');
  const isPositive = positiveWords.some(p => message.toLowerCase().includes(p));
  
  if (isQuestion) {
    return {
      response: `–ê–Ω–∞–ª–∏–∑–∏—Ä—É—è –≤–∞—à –≤–æ–ø—Ä–æ—Å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏, —è –≤–∏–∂—É, —á—Ç–æ –≤—ã –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç–µ—Å—å —Ç–µ–º–æ–π "${keyWords.join(', ')}". –ú–æ—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ 46+ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π. –ù–µ –º–æ–≥–ª–∏ –±—ã –≤—ã —É—Ç–æ—á–Ω–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞—Å–ø–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`,
      type: 'semantic_question'
    };
  }
  
  if (isPositive) {
    return {
      response: `–†–∞–¥, —á—Ç–æ —É –≤–∞—Å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π! –ú–æ—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ä–∫–µ—Ä—ã –≤ –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è –≤–µ—Å—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π AI-—Å–∏—Å—Ç–µ–º—ã BOOOMERANGS.`,
      type: 'positive_response'
    };
  }
  
  // –ë–∞–∑–æ–≤—ã–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç
  return {
    response: `–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π. –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã: ${keyWords.slice(0, 3).join(', ')}. –ú–æ—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–ª–∏ –ø–æ–º–æ—â—å –ø–æ —ç—Ç–∏–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`,
    type: 'semantic_analysis'
  };
}

// API –º–∞—Ä—à—Ä—É—Ç—ã
app.get('/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    system: 'BOOOMERANGS Autonomous AI',
    version: '1.0.0',
    timestamp: new Date().toISOString()
  });
});

app.post('/api/chat', (req, res) => {
  try {
    const { message } = req.body;
    
    if (!message) {
      return res.status(400).json({ error: 'Message is required' });
    }
    
    console.log('üß† [AUTONOMOUS] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:', message);
    
    const response = generateAutonomousResponse(message);
    
    console.log('‚úÖ [AUTONOMOUS] –û—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:', response.type);
    
    res.json({
      success: true,
      response: response.response,
      type: response.type,
      provider: 'BOOOMERANGS-Autonomous',
      model: 'autonomous-ai',
      autonomous: true,
      timestamp: new Date().toISOString()
    });
    
  } catch (error) {
    console.error('‚ùå [AUTONOMOUS] –û—à–∏–±–∫–∞:', error);
    res.status(500).json({ 
      error: '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã',
      details: error.message 
    });
  }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(port, '0.0.0.0', () => {
  console.log(`üöÄ BOOOMERANGS Autonomous AI —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
  console.log('üß† –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ');
  console.log('üì° API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ /api/chat');
  console.log('‚ù§Ô∏è Health check: /health');
});