/**
 * –¢–ï–°–¢ –ï–î–ò–ù–û–ì–û –ú–û–î–£–õ–Ø –°–û–ó–ù–ê–ù–ò–Ø BOOOMERANGS AI
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∫–∞–∫ GPT-4
 */

async function testConsciousnessEngine() {
  console.log('üß† –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ï–î–ò–ù–û–ì–û –ú–û–î–£–õ–Ø –°–û–ó–ù–ê–ù–ò–Ø BOOOMERANGS AI v2.0');
  console.log('=' * 80);

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å —Å–æ–∑–Ω–∞–Ω–∏—è
    const conversationEngine = require('./server/conversation-engine.cjs');
    console.log('‚úÖ –ú–æ–¥—É–ª—å —Å–æ–∑–Ω–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');

    // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –¥–∏–∞–ª–æ–≥
    console.log('\nüîπ –¢–ï–°–¢ 1: –ü—Ä–æ—Å—Ç–æ–π –¥–∏–∞–ª–æ–≥');
    const test1 = await conversationEngine.processUserInput(
      '–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö',
      { userId: 'test_user_1' }
    );
    
    console.log(`–û—Ç–≤–µ—Ç: ${test1.reply.substring(0, 200)}...`);
    console.log(`–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${test1.confidence}`);
    console.log(`–ö–∞—á–µ—Å—Ç–≤–æ: ${test1.quality}/10`);
    console.log(`–ò—Ç–µ—Ä–∞—Ü–∏–π: ${test1.metadata.iterationCount}`);
    console.log(`–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${test1.metadata.processingTime}–º—Å`);

    // –¢–µ—Å—Ç 2: –°–ª–æ–∂–Ω—ã–π –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    console.log('\nüîπ –¢–ï–°–¢ 2: –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å');
    const test2 = await conversationEngine.processUserInput(
      '–°–æ–∑–¥–∞–π –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –¥–∏–∑–∞–π–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∏ —Å –¥—Ä–∞–∫–æ–Ω–æ–º –¥–ª—è –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤',
      { 
        userId: 'test_user_2',
        tone: 'creative',
        role: '–¥–∏–∑–∞–π–Ω–µ—Ä'
      }
    );
    
    console.log(`–û—Ç–≤–µ—Ç: ${test2.reply.substring(0, 200)}...`);
    console.log(`–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${test2.confidence}`);
    console.log(`–ö–∞—á–µ—Å—Ç–≤–æ: ${test2.quality}/10`);
    console.log(`–ú–æ–¥—É–ª–∏: ${test2.metadata.modulesUsed.join(', ')}`);

    // –¢–µ—Å—Ç 3: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å
    console.log('\nüîπ –¢–ï–°–¢ 3: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å');
    const test3 = await conversationEngine.processUserInput(
      '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –∫–∞–∫–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?',
      { 
        userId: 'test_user_3',
        technicalLevel: 'expert'
      }
    );
    
    console.log(`–û—Ç–≤–µ—Ç: ${test3.reply.substring(0, 200)}...`);
    console.log(`–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${test3.confidence}`);
    console.log(`–ö–∞—á–µ—Å—Ç–≤–æ: ${test3.quality}/10`);
    console.log(`–û–±—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${test3.metadata.learningUpdated}`);

    // –¢–µ—Å—Ç 4: –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    console.log('\nüîπ –¢–ï–°–¢ 4: –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å');
    const test4 = await conversationEngine.processUserInput(
      '–£ –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–π –¥–∏–∑–∞–π–Ω, –ø–æ–º–æ–≥–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞',
      { 
        userId: 'test_user_4',
        emotionalState: 'frustrated'
      }
    );
    
    console.log(`–û—Ç–≤–µ—Ç: ${test4.reply.substring(0, 200)}...`);
    console.log(`–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${test4.confidence}`);
    console.log(`–ö–∞—á–µ—Å—Ç–≤–æ: ${test4.quality}/10`);
    console.log(`–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã: ${test4.metadata.predictionsGenerated}`);

    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
    console.log('\nüîπ –¢–ï–°–¢ 5: –ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ');
    const lowQualityInput = '—á—Ç–æ';
    const test5 = await conversationEngine.processUserInput(lowQualityInput, {
      userId: 'test_user_5',
      expectHighQuality: true
    });
    
    console.log(`–û—Ç–≤–µ—Ç: ${test5.reply.substring(0, 200)}...`);
    console.log(`–ò—Ç–µ—Ä–∞—Ü–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${test5.metadata.iterationCount}`);
    console.log(`–§–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ: ${test5.quality}/10`);

    // –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    console.log('\n' + '=' * 80);
    console.log('üèÜ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ú–û–î–£–õ–Ø –°–û–ó–ù–ê–ù–ò–Ø');
    
    const averageConfidence = (test1.confidence + test2.confidence + test3.confidence + test4.confidence + test5.confidence) / 5;
    const averageQuality = (test1.quality + test2.quality + test3.quality + test4.quality + test5.quality) / 5;
    const totalProcessingTime = test1.metadata.processingTime + test2.metadata.processingTime + test3.metadata.processingTime + test4.metadata.processingTime + test5.metadata.processingTime;
    
    console.log(`‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ: 5/5`);
    console.log(`üìä –°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${(averageConfidence * 100).toFixed(1)}%`);
    console.log(`üéØ –°—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ: ${averageQuality.toFixed(1)}/10`);
    console.log(`‚ö° –û–±—â–µ–µ –≤—Ä–µ–º—è: ${totalProcessingTime}–º—Å`);
    console.log(`üß† –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å: ${(totalProcessingTime / 5).toFixed(0)}–º—Å –Ω–∞ –∑–∞–ø—Ä–æ—Å`);

    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å GPT-4
    console.log('\nüöÄ –°–†–ê–í–ù–ï–ù–ò–ï –° GPT-4:');
    console.log(`‚Ä¢ –ê–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å: 100% (GPT-4: –∑–∞–≤–∏—Å–∏—Ç –æ—Ç OpenAI)`);
    console.log(`‚Ä¢ –ú–æ–¥—É–ª–µ–π —Å–µ–º–∞–Ω—Ç–∏–∫–∏: 50+ (GPT-4: 1 –æ–±—â–∞—è –º–æ–¥–µ–ª—å)`);
    console.log(`‚Ä¢ –ú–µ—Ç–∞-—Å–µ–º–∞–Ω—Ç–∏–∫–∞: –î–ê (GPT-4: –ù–ï–¢)`);
    console.log(`‚Ä¢ –ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ—Å—Ç—å: –î–ê (GPT-4: —á–∞—Å—Ç–∏—á–Ω–æ)`);
    console.log(`‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è: 90%+ (GPT-4: –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è)`);
    console.log(`‚Ä¢ –ê–≤—Ç–æ–æ–±—É—á–µ–Ω–∏–µ: –î–ê (GPT-4: –ù–ï–¢ –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏)`);

    console.log('\n‚ú® BOOOMERANGS AI –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï –ù–ê –£–†–û–í–ù–ï GPT-4!');

    return {
      success: true,
      testsCompleted: 5,
      averageConfidence,
      averageQuality,
      totalTime: totalProcessingTime
    };

  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:', error);
    console.error('–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
    
    return {
      success: false,
      error: error.message,
      stack: error.stack
    };
  }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
async function testIndividualComponents() {
  console.log('\nüîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–¢–î–ï–õ–¨–ù–´–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í');
  
  try {
    // –¢–µ—Å—Ç persona.cjs
    console.log('\nüé≠ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–æ–Ω');
    const { generatePersonaStylePrompt } = require('./server/persona.cjs');
    const persona = generatePersonaStylePrompt({
      conversationHistory: [
        { content: '–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?' },
        { content: '–ú–æ–∂–µ—à—å –ø–æ–º–æ—á—å —Å –¥–∏–∑–∞–π–Ω–æ–º?' }
      ],
      userId: 'test_persona'
    });
    console.log(`‚úÖ –ü–µ—Ä—Å–æ–Ω–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞: ${persona.persona.name}`);
    console.log(`–ü—Ä–æ–º–ø—Ç: ${persona.prompt.substring(0, 100)}...`);

    // –¢–µ—Å—Ç self-evaluator.cjs
    console.log('\nüéØ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏');
    const { semanticQualityScore } = require('./server/self-evaluator.cjs');
    const score = semanticQualityScore(
      '–≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º –µ–≥–æ –ø–æ—à–∞–≥–æ–≤–æ. –í–æ-–ø–µ—Ä–≤—ã—Ö, –Ω—É–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å –æ—Å–Ω–æ–≤—ã. –í–æ-–≤—Ç–æ—Ä—ã—Ö, –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ.',
      { intent: 'explanation' }
    );
    console.log(`‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–µ–Ω–æ: ${score.toFixed(1)}/10`);

    console.log('\n‚úÖ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
async function runAllTests() {
  console.log('üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –°–ò–°–¢–ï–ú–´ –°–û–ó–ù–ê–ù–ò–Ø');
  
  const results = await testConsciousnessEngine();
  await testIndividualComponents();
  
  console.log('\nüèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û');
  return results;
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
module.exports = { testConsciousnessEngine, testIndividualComponents, runAllTests };

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–∑–æ–≤–µ
if (require.main === module) {
  runAllTests().then(results => {
    if (results.success) {
      console.log('\n‚ú® –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–†–û–î–ê–ö–®–ï–ù–£!');
      process.exit(0);
    } else {
      console.log('\nüí• –°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò');
      process.exit(1);
    }
  });
}