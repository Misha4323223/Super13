/**
 * –¢–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –≤–µ–±-—Å–∞–π—Ç–æ–≤
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–æ–≤ —á–µ—Ä–µ–∑ —Ä–µ–∞–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */

const fetch = require('node-fetch');

const SmartLogger = {
  analyze: (message, data) => {
    const timestamp = new Date().toISOString();
    console.log(`üîç [${timestamp}] WEBSITE ANALYZER: ${message}`, data ? JSON.stringify(data, null, 2) : '');
  },
  error: (message, data) => {
    const timestamp = new Date().toISOString();
    console.log(`‚ùå [${timestamp}] ANALYZER ERROR: ${message}`, data ? JSON.stringify(data, null, 2) : '');
  }
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ URL
 */
function isValidUrl(string) {
  try {
    new URL(string);
    return true;
  } catch (_) {
    return false;
  }
}

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç URL –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
 */
function extractUrlFromQuery(query) {
  SmartLogger.analyze(`–ò–∑–≤–ª–µ–∫–∞—é URL –∏–∑ –∑–∞–ø—Ä–æ—Å–∞: "${query}"`);
  
  // –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ URL
  const urlPatterns = [
    // –ü—Ä—è–º—ã–µ URL
    /(https?:\/\/[^\s]+)/gi,
    // URL –±–µ–∑ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
    /([a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}(?:\/[^\s]*)?)/gi
  ];

  for (const pattern of urlPatterns) {
    const matches = query.match(pattern);
    if (matches) {
      let url = matches[0];
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if (!url.startsWith('http')) {
        url = 'https://' + url;
      }
      
      // –û—á–∏—â–∞–µ–º –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ –∫–æ–Ω—Ü–µ
      url = url.replace(/[.,;!?]+$/, '');
      
      if (isValidUrl(url)) {
        SmartLogger.analyze(`–ù–∞–π–¥–µ–Ω URL: ${url}`);
        return url;
      }
    }
  }

  SmartLogger.analyze('URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–ø—Ä–æ—Å–µ');
  return null;
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞
 */
function detectWebsiteAnalysisIntent(query) {
  const lowerQuery = query.toLowerCase();
  
  // –ö–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–æ–≤
  const analysisKeywords = [
    '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–∞–π—Ç',
    '–∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞', 
    '–∏–∑—É—á–∏ —Å–∞–π—Ç',
    '—á—Ç–æ –Ω–∞ —Å–∞–π—Ç–µ',
    '–æ–ø–∏—à–∏ —Å–∞–π—Ç',
    '—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–∞–π—Ç–µ',
    '–∫–∞–∫–æ–π —Å–∞–π—Ç',
    '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–π—Ç–µ',
    '—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∞–π—Ç–∞',
    'analyze website',
    'website analysis',
    'site analysis'
  ];

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ URL
  const hasUrl = extractUrlFromQuery(query) !== null;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
  const hasAnalysisKeywords = analysisKeywords.some(keyword => 
    lowerQuery.includes(keyword)
  );

  const confidence = (hasUrl ? 60 : 0) + (hasAnalysisKeywords ? 40 : 0);
  
  SmartLogger.analyze(`–î–µ—Ç–µ–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞ - URL: ${hasUrl}, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${hasAnalysisKeywords}, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${confidence}%`);
  
  return {
    isWebsiteAnalysis: confidence >= 60,
    confidence,
    hasUrl,
    hasAnalysisKeywords
  };
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
async function fetchWebsiteContent(url) {
  SmartLogger.analyze(`–ó–∞–≥—Ä—É–∂–∞—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∞–π—Ç–∞: ${url}`);
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º web_fetch —Ñ—É–Ω–∫—Ü–∏—é —á–µ—Ä–µ–∑ require –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
    let webFetch;
    try {
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ web_fetch –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö
      const fs = require('fs');
      const path = require('path');
      
      // –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π fetch
      webFetch = fetch;
    } catch (err) {
      webFetch = fetch;
    }

    const response = await webFetch(url, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
        'Accept-Encoding': 'gzip, deflate, br',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1'
      },
      timeout: 10000
    });

    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }

    const html = await response.text();
    SmartLogger.analyze(`–£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${html.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    return {
      success: true,
      html,
      url,
      statusCode: response.status
    };

  } catch (error) {
    SmartLogger.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${url}:`, error.message);
    return {
      success: false,
      error: error.message,
      url
    };
  }
}

/**
 * –ü–∞—Ä—Å–∏—Ç HTML –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
 */
function parseWebsiteStructure(html, url) {
  SmartLogger.analyze(`–ü–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–∞–π—Ç–∞: ${url}`);
  
  try {
    // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    const structure = {
      title: '',
      description: '',
      navigation: [],
      mainContent: '',
      products: [],
      prices: [],
      categories: [],
      contactInfo: {},
      technicalInfo: {}
    };

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const titleMatch = html.match(/<title[^>]*>([^<]+)<\/title>/i);
    if (titleMatch) {
      structure.title = titleMatch[1].trim();
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ
    const descMatch = html.match(/<meta[^>]*name=["\']description["\'][^>]*content=["\']([^"']+)["\'][^>]*>/i);
    if (descMatch) {
      structure.description = descMatch[1].trim();
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏
    const navLinks = html.match(/<a[^>]*href=["\']([^"']+)["\'][^>]*>([^<]+)<\/a>/gi) || [];
    structure.navigation = navLinks
      .slice(0, 20) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      .map(link => {
        const hrefMatch = link.match(/href=["\']([^"']+)["\']/i);
        const textMatch = link.match(/>([^<]+)</);
        return {
          url: hrefMatch ? hrefMatch[1] : '',
          text: textMatch ? textMatch[1].trim() : ''
        };
      })
      .filter(link => link.text.length > 0 && link.text.length < 50);

    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ü–µ–Ω—ã - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Tilda CMS
    const pricePatterns = [
      // –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –ü–ê–¢–¢–ï–†–ù–´ –î–õ–Ø TILDA CMS
      /class="t754__price"[^>]*>(\d{1,5})<\/div>/gi,                     // Tilda —Ü–µ–Ω—ã
      /field="li_price__[^"]*">(\d{1,5})<\/div>/gi,                      // Tilda –ø–æ–ª—è —Ü–µ–Ω
      /"price"[^>]*>(\d{1,5})<\/[^>]*>/gi,                               // –û–±—â–∏–µ price –∫–ª–∞—Å—Å—ã
      
      // –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã
      /(\d{1,5})\s*—Ä(?:\.|\b)/gi,                    // "5990 —Ä" –∏–ª–∏ "5990 —Ä."
      /(\d{1,5})\s*—Ä—É–±(?:–ª–µ–π|–ª—è|–ª—å)?\b/gi,          // "5990 —Ä—É–±", "5990 —Ä—É–±–ª–µ–π"
      /(\d{1,5})\s*‚ÇΩ/gi,                             // "5990 ‚ÇΩ"
      
      // –§–æ—Ä–º–∞—Ç—ã —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏
      /(\d{1,3}(?:\s\d{3})+)\s*—Ä(?:\.|\b)/gi,       // "5 990 —Ä"
      /(\d{1,3}(?:\s\d{3})+)\s*—Ä—É–±/gi,              // "5 990 —Ä—É–±"
      /(\d{1,3}(?:\s\d{3})+)\s*‚ÇΩ/gi,                // "5 990 ‚ÇΩ"
      
      // –§–æ—Ä–º–∞—Ç—ã —Å –∑–∞–ø—è—Ç—ã–º–∏ –∏ —Ç–æ—á–∫–∞–º–∏
      /(\d{1,3}(?:[.,]\d{3})*(?:[.,]\d{2})?)\s*(?:—Ä—É–±|—Ä—É–±–ª–µ–π|‚ÇΩ|—Ä\.)/gi,
      
      // –í–∞–ª—é—Ç–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
      /(\d{1,3}(?:[.,]\d{3})*(?:[.,]\d{2})?)\s*(?:\$|–¥–æ–ª–ª–∞—Ä–æ–≤|usd)/gi,
      /(\d{1,3}(?:[.,]\d{3})*(?:[.,]\d{2})?)\s*(?:‚Ç¨|–µ–≤—Ä–æ|eur)/gi,
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
      /—Ü–µ–Ω–∞[:\s]*(\d{1,5})\s*—Ä/gi,                  // "—Ü–µ–Ω–∞: 5990 —Ä"
      /—Å—Ç–æ–∏–º–æ—Å—Ç—å[:\s]*(\d{1,5})\s*—Ä/gi,             // "—Å—Ç–æ–∏–º–æ—Å—Ç—å: 5990 —Ä"
      
      // JSON/DATA –∞—Ç—Ä–∏–±—É—Ç—ã (—á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö CMS)
      /"price":\s*"?(\d{1,5})"?/gi,                 // JSON —Ü–µ–Ω—ã
      /data-price="(\d{1,5})"/gi                    // Data –∞—Ç—Ä–∏–±—É—Ç—ã
    ];

    pricePatterns.forEach((pattern, index) => {
      const matches = html.match(pattern) || [];
      if (matches.length > 0) {
        SmartLogger.analyze(`–ü–∞—Ç—Ç–µ—Ä–Ω ${index + 1} –Ω–∞—à–µ–ª ${matches.length} —Ü–µ–Ω: ${matches.slice(0, 5).join(', ')}`);
      }
      structure.prices.push(...matches.slice(0, 10));
    });
    
    SmartLogger.analyze(`–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω: ${structure.prices.length}`);

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)
    const textContent = html
      .replace(/<script[^>]*>[\s\S]*?<\/script>/gi, '')
      .replace(/<style[^>]*>[\s\S]*?<\/style>/gi, '')
      .replace(/<[^>]+>/g, ' ')
      .replace(/\s+/g, ' ')
      .trim();

    structure.mainContent = textContent.substring(0, 1000);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    structure.technicalInfo = {
      hasJavaScript: html.includes('<script'),
      hasCSS: html.includes('<style') || html.includes('.css'),
      responsive: html.includes('viewport') || html.includes('responsive'),
      platform: detectPlatform(html)
    };

    SmartLogger.analyze(`–ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω - –∑–∞–≥–æ–ª–æ–≤–æ–∫: "${structure.title}"`);
    return structure;

  } catch (error) {
    SmartLogger.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML:', error.message);
    return null;
  }
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—É —Å–∞–π—Ç–∞
 */
function detectPlatform(html) {
  const platforms = [
    { name: 'Tilda', patterns: ['tilda', 'tildacdn'] },
    { name: 'WordPress', patterns: ['wp-content', 'wordpress', 'wp-includes'] },
    { name: 'Shopify', patterns: ['shopify', 'cdn.shopify'] },
    { name: 'Wix', patterns: ['wix.com', 'wixstatic'] },
    { name: 'React', patterns: ['react', 'react-dom'] },
    { name: 'Vue', patterns: ['vue.js', 'vue.min.js'] },
    { name: 'Angular', patterns: ['angular', 'ng-'] }
  ];

  for (const platform of platforms) {
    if (platform.patterns.some(pattern => html.toLowerCase().includes(pattern))) {
      return platform.name;
    }
  }

  return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞ –∏ —Ç–µ–º–∞—Ç–∏–∫—É —Å–∞–π—Ç–∞
 */
function analyzeBusinessType(structure) {
  SmartLogger.analyze('–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞ –∏ —Ç–µ–º–∞—Ç–∏–∫—É —Å–∞–π—Ç–∞');
  
  const content = (structure.title + ' ' + structure.description + ' ' + structure.mainContent).toLowerCase();
  const navigation = structure.navigation.map(nav => nav.text.toLowerCase()).join(' ');
  const fullContent = content + ' ' + navigation;

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞
  const businessTypes = {
    '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω': ['–∫–∞—Ç–∞–ª–æ–≥', '—Ç–æ–≤–∞—Ä—ã', '–∫—É–ø–∏—Ç—å', '—Ü–µ–Ω–∞', '–∫–æ—Ä–∑–∏–Ω–∞', '–¥–æ—Å—Ç–∞–≤–∫–∞', '–æ–ø–ª–∞—Ç–∞', '–∑–∞–∫–∞–∑'],
    '–†–µ—Å—Ç–æ—Ä–∞–Ω/–ö–∞—Ñ–µ': ['–º–µ–Ω—é', '–∫—É—Ö–Ω—è', '–±–ª—é–¥–∞', '–¥–æ—Å—Ç–∞–≤–∫–∞ –µ–¥—ã', '—Ä–µ—Å—Ç–æ—Ä–∞–Ω', '–∫–∞—Ñ–µ', '–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'],
    '–£—Å–ª—É–≥–∏': ['—É—Å–ª—É–≥–∏', '—Å–µ—Ä–≤–∏—Å', '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', '–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ', '—Ä–µ–º–æ–Ω—Ç', '—É—Å—Ç–∞–Ω–æ–≤–∫–∞'],
    '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ': ['–∫—É—Ä—Å—ã', '–æ–±—É—á–µ–Ω–∏–µ', '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '—à–∫–æ–ª–∞', '—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç', '–ª–µ–∫—Ü–∏–∏'],
    '–ú–µ–¥–∏—Ü–∏–Ω–∞': ['–∫–ª–∏–Ω–∏–∫–∞', '–≤—Ä–∞—á', '–ª–µ—á–µ–Ω–∏–µ', '–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', '–º–µ–¥–∏—Ü–∏–Ω–∞', '–∑–¥–æ—Ä–æ–≤—å–µ'],
    '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å': ['–∫–≤–∞—Ä—Ç–∏—Ä—ã', '–¥–æ–º–∞', '–∞—Ä–µ–Ω–¥–∞', '–ø—Ä–æ–¥–∞–∂–∞', '–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', '–∂–∏–ª—å–µ'],
    'IT/–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏': ['—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '—Å–∞–π—Ç—ã', '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', 'it', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'],
    '–ú–æ–¥–∞/–û–¥–µ–∂–¥–∞': ['–æ–¥–µ–∂–¥–∞', '–º–æ–¥–∞', '—Å—Ç–∏–ª—å', '–∫–æ–ª–ª–µ–∫—Ü–∏—è', '–±—Ä–µ–Ω–¥', '—Ñ—É—Ç–±–æ–ª–∫–∏', '–±—Ä—é–∫–∏', '—Ö—É–¥–∏']
  };

  let detectedType = '–î—Ä—É–≥–æ–µ';
  let maxScore = 0;

  for (const [type, keywords] of Object.entries(businessTypes)) {
    const score = keywords.filter(keyword => fullContent.includes(keyword)).length;
    if (score > maxScore) {
      maxScore = score;
      detectedType = type;
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é
  const audienceKeywords = {
    'B2B': ['–¥–ª—è –±–∏–∑–Ω–µ—Å–∞', '–ø–∞—Ä—Ç–Ω–µ—Ä—ã', '–æ–ø—Ç–æ–º', '–∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ', 'b2b'],
    'B2C': ['—á–∞—Å—Ç–Ω—ã–µ –ª–∏—Ü–∞', '–ø–æ–∫—É–ø–∞—Ç–µ–ª–∏', '–∫–ª–∏–µ–Ω—Ç—ã', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'],
    '–ú–æ–ª–æ–¥–µ–∂—å': ['–º–æ–ª–æ–¥–æ–π', '—Å—Ç—É–¥–µ–Ω—Ç—ã', '—Ç—Ä–µ–Ω–¥—ã', '—Å—Ç–∏–ª—å', '–∏–Ω—Å—Ç–∞–≥—Ä–∞–º'],
    '–°–µ–º—å–∏': ['—Å–µ–º—å—è', '–¥–µ—Ç–∏', '—Ä–æ–¥–∏—Ç–µ–ª–∏', '—Å–µ–º–µ–π–Ω—ã–µ']
  };

  let targetAudience = '–û–±—â–∞—è';
  for (const [audience, keywords] of Object.entries(audienceKeywords)) {
    if (keywords.some(keyword => fullContent.includes(keyword))) {
      targetAudience = audience;
      break;
    }
  }

  return {
    businessType: detectedType,
    confidence: maxScore * 10,
    targetAudience,
    features: analyzeFeatures(fullContent)
  };
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞
 */
function analyzeFeatures(content) {
  const features = [];
  
  const featurePatterns = {
    '–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫': ['–∫–æ—Ä–∑–∏–Ω–∞', 'cart', 'basket'],
    '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è': ['—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', 'signup', 'register'],
    '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç': ['–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', 'account', 'profile'],
    '–ü–æ–∏—Å–∫': ['–ø–æ–∏—Å–∫', 'search'],
    '–§–∏–ª—å—Ç—Ä—ã': ['—Ñ–∏–ª—å—Ç—Ä', 'filter', '—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞'],
    '–û—Ç–∑—ã–≤—ã': ['–æ—Ç–∑—ã–≤—ã', 'reviews', '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏'],
    '–ë–ª–æ–≥': ['–±–ª–æ–≥', 'blog', '—Å—Ç–∞—Ç—å–∏', '–Ω–æ–≤–æ—Å—Ç–∏'],
    '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å': ['–∫–æ–Ω—Ç–∞–∫—Ç—ã', '—Å–≤—è–∑—å', 'contact'],
    '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏': ['instagram', 'facebook', 'vk', 'telegram'],
    '–ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å': ['en', 'english', '—è–∑—ã–∫', 'language']
  };

  for (const [feature, keywords] of Object.entries(featurePatterns)) {
    if (keywords.some(keyword => content.includes(keyword))) {
      features.push(feature);
    }
  }

  return features;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ–± –∞–Ω–∞–ª–∏–∑–µ —Å–∞–π—Ç–∞
 */
function generateAnalysisReport(structure, businessAnalysis, url) {
  SmartLogger.analyze('–ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞');

  const domain = new URL(url).hostname;
  
  let report = `## –ê–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞ ${domain}\n\n`;

  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  report += `### üìå –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n`;
  report += `- **–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞:** ${structure.title || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
  report += `- **–¢–∏–ø –±–∏–∑–Ω–µ—Å–∞:** ${businessAnalysis.businessType}\n`;
  report += `- **–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:** ${businessAnalysis.targetAudience}\n`;
  if (structure.description) {
    report += `- **–û–ø–∏—Å–∞–Ω–∏–µ:** ${structure.description}\n`;
  }
  report += `\n`;

  // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è
  if (structure.navigation.length > 0) {
    report += `### üóÇÔ∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∞–π—Ç–∞:\n`;
    const mainSections = structure.navigation
      .filter(nav => nav.text.length > 2 && nav.text.length < 30)
      .slice(0, 8)
      .map(nav => nav.text)
      .join(', ');
    report += `**–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:** ${mainSections}\n\n`;
  }

  // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
  if (businessAnalysis.features.length > 0) {
    report += `### ‚öôÔ∏è –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:\n`;
    businessAnalysis.features.forEach(feature => {
      report += `- ${feature}\n`;
    });
    report += `\n`;
  }

  // –¶–µ–Ω—ã (–µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã)
  if (structure.prices.length > 0) {
    report += `### üí∞ –¶–µ–Ω–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n`;
    const uniquePrices = [...new Set(structure.prices)].slice(0, 5);
    report += `**–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ü–µ–Ω—ã:** ${uniquePrices.join(', ')}\n\n`;
  }

  // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  report += `### üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n`;
  report += `- **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** ${structure.technicalInfo.platform}\n`;
  report += `- **–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω:** ${structure.technicalInfo.responsive ? '–î–∞' : '–ù–µ—Ç'}\n`;
  report += `- **JavaScript:** ${structure.technicalInfo.hasJavaScript ? '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è' : '–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω'}\n`;

  // –ö—Ä–∞—Ç–∫–∏–µ –≤—ã–≤–æ–¥—ã
  report += `\n### üìä –ö—Ä–∞—Ç–∫–∏–µ –≤—ã–≤–æ–¥—ã:\n`;
  
  if (businessAnalysis.businessType === '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω') {
    report += `–°–∞–π—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω`;
    if (structure.prices.length > 0) {
      report += ` —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –≤ —Ü–µ–Ω–æ–≤–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ`;
    }
  } else if (businessAnalysis.businessType === '–ú–æ–¥–∞/–û–¥–µ–∂–¥–∞') {
    report += `–°–∞–π—Ç –±—Ä–µ–Ω–¥–∞ –æ–¥–µ–∂–¥—ã —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –º–æ–¥—É`;
  } else {
    report += `–°–∞–π—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –≤ —Å—Ñ–µ—Ä–µ: ${businessAnalysis.businessType.toLowerCase()}`;
  }

  if (businessAnalysis.features.includes('–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫')) {
    report += ` —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ–Ω–ª–∞–π–Ω-–ø–æ–∫—É–ø–æ–∫`;
  }

  report += `.`;

  return report;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞
 */
async function analyzeWebsite(query, options = {}) {
  SmartLogger.analyze(`–ù–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: "${query}"`);
  
  try {
    // –®–∞–≥ 1: –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const url = extractUrlFromQuery(query);
    if (!url) {
      return {
        success: false,
        error: 'URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–ø—Ä–æ—Å–µ',
        query
      };
    }

    // –®–∞–≥ 2: –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∞–π—Ç–∞
    const fetchResult = await fetchWebsiteContent(url);
    if (!fetchResult.success) {
      return {
        success: false,
        error: `–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∞–π—Ç–∞: ${fetchResult.error}`,
        url,
        query
      };
    }

    // –®–∞–≥ 3: –ü–∞—Ä—Å–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    const structure = parseWebsiteStructure(fetchResult.html, url);
    if (!structure) {
      return {
        success: false,
        error: '–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–∞–π—Ç–∞',
        url,
        query
      };
    }

    // –®–∞–≥ 4: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–∑–Ω–µ—Å-—Ç–∏–ø
    const businessAnalysis = analyzeBusinessType(structure);

    // –®–∞–≥ 5: –ù–û–í–´–ô - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    const businessDetails = analyzeBusinessDetails(structure);
    const seoMarketing = analyzeSEOAndMarketing(structure, fetchResult.html);
    const conversionElements = analyzeConversionElements(structure, fetchResult.html);

    // –®–∞–≥ 6: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç
    const report = generateAdvancedAnalysisReport(structure, businessAnalysis, businessDetails, seoMarketing, conversionElements, url);

    SmartLogger.analyze(`–ê–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞ ${url} –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ`);

    return {
      success: true,
      response: report,
      url,
      query,
      structure,
      businessAnalysis,
      provider: 'AccurateWebsiteAnalyzer',
      category: 'website_analysis'
    };

  } catch (error) {
    SmartLogger.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞:', error.message);
    return {
      success: false,
      error: `–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`,
      query
    };
  }
}

/**
 * –ù–û–í–´–ô: –î–µ—Ç–∞–ª—å–Ω—ã–π –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑
 */
function analyzeBusinessDetails(structure) {
  SmartLogger.analyze('–í—ã–ø–æ–ª–Ω—è—é –¥–µ—Ç–∞–ª—å–Ω—ã–π –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑');
  
  const fullContent = (structure.title + ' ' + structure.description + ' ' + structure.mainContent).toLowerCase();
  
  return {
    pricing: analyzePricing(structure),
    uniqueSellingProposition: analyzeUSP(structure),
    productRange: analyzeProductRange(structure),
    competitiveAdvantages: analyzeCompetitiveAdvantages(fullContent)
  };
}

/**
 * –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω–æ–≤–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏
 */
function analyzePricing(structure) {
  const prices = structure.prices || [];
  
  if (prices.length === 0) {
    return {
      hasPricing: false,
      strategy: '–¶–µ–Ω—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã –ø—É–±–ª–∏—á–Ω–æ',
      note: '–í–æ–∑–º–æ–∂–Ω–æ, —Ü–µ–Ω—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –ø–æ –∑–∞–ø—Ä–æ—Å—É'
    };
  }
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ü–µ–Ω —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
  const numericPrices = prices.map(price => {
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è Tilda CMS –∏ –¥—Ä—É–≥–∏—Ö HTML –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
    let cleaned = price;
    
    // –ï—Å–ª–∏ —ç—Ç–æ HTML —Å –≥—Ä—É–ø–ø–∞–º–∏ –∑–∞—Ö–≤–∞—Ç–∞, –∏–∑–≤–ª–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4-5 —Ü–∏—Ñ—Ä (—Ä–µ–∞–ª—å–Ω—É—é —Ü–µ–Ω—É)
    const match = price.match(/(\d{4,5})(?=<\/div>)/);
    if (match) {
      cleaned = match[1]; // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —Ü–µ–Ω—É –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
    } else {
      // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ª–∏—à–Ω–µ–µ, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, —Ç–æ—á–∫–∏ –∏ –∑–∞–ø—è—Ç—ã–µ
      cleaned = price.replace(/[^\d\s.,]/g, '');
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∫–∞–∫ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ —Ç—ã—Å—è—á (5 990 -> 5990)
    cleaned = cleaned.replace(/\s+/g, '');
    
    // –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
    cleaned = cleaned.replace(',', '.');
    
    const num = parseFloat(cleaned);
    
    // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (!isNaN(num) && num > 0 && num < 1000000) {
      SmartLogger.analyze(`–ù–∞–π–¥–µ–Ω–∞ —Ü–µ–Ω–∞: "${price}" -> ${num}`);
    }
    
    return num;
  }).filter(price => !isNaN(price) && price > 0 && price < 1000000); // –§–∏–ª—å—Ç—Ä —Ä–∞–∑—É–º–Ω—ã—Ö —Ü–µ–Ω
  
  if (numericPrices.length === 0) {
    return {
      hasPricing: false,
      strategy: '–¶–µ–Ω—ã –≤ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ'
    };
  }
  
  const minPrice = Math.min(...numericPrices);
  const maxPrice = Math.max(...numericPrices);
  const avgPrice = Math.round(numericPrices.reduce((a, b) => a + b, 0) / numericPrices.length);
  
  let strategy = '–°—Ä–µ–¥–Ω–∏–π —Å–µ–≥–º–µ–Ω—Ç';
  if (avgPrice < 1000) strategy = '–ë—é–¥–∂–µ—Ç–Ω—ã–π —Å–µ–≥–º–µ–Ω—Ç';
  else if (avgPrice > 10000) strategy = '–ü—Ä–µ–º–∏—É–º —Å–µ–≥–º–µ–Ω—Ç';
  else if (avgPrice > 5000) strategy = '–í—ã—Å–æ–∫–∏–π —Å–µ–≥–º–µ–Ω—Ç';
  
  return {
    hasPricing: true,
    priceRange: `${minPrice} - ${maxPrice} —Ä—É–±.`,
    averagePrice: `${avgPrice} —Ä—É–±.`,
    strategy,
    totalPricesFound: numericPrices.length
  };
}

/**
 * –ê–Ω–∞–ª–∏–∑ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
 */
function analyzeUSP(structure) {
  const content = structure.title + ' ' + structure.description + ' ' + structure.mainContent;
  const contentLower = content.toLowerCase();
  
  const uspKeywords = [
    { word: '—É–Ω–∏–∫–∞–ª—å–Ω', weight: 3 },
    { word: '—ç–∫—Å–∫–ª—é–∑–∏–≤–Ω', weight: 3 },
    { word: '—Ç–æ–ª—å–∫–æ —É –Ω–∞—Å', weight: 4 },
    { word: '–≤–ø–µ—Ä–≤—ã–µ', weight: 2 },
    { word: '–ª—É—á—à', weight: 2 },
    { word: '–±–µ—Å–ø–ª–∞—Ç–Ω', weight: 2 },
    { word: '–≥–∞—Ä–∞–Ω—Ç–∏—è', weight: 2 },
    { word: '–∫–∞—á–µ—Å—Ç–≤–æ', weight: 1 },
    { word: '–±—ã—Å—Ç—Ä', weight: 1 },
    { word: '—É–¥–æ–±–Ω', weight: 1 },
    { word: '—ç–∫–æ–ª–æ–≥–∏—á–Ω', weight: 2 },
    { word: '–Ω–∞—Ç—É—Ä–∞–ª—å–Ω', weight: 2 },
    { word: 'handmade', weight: 3 },
    { word: '—Ä—É—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞', weight: 3 },
    { word: '–∞–≤—Ç–æ—Ä—Å–∫', weight: 2 },
    { word: '–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω', weight: 2 }
  ];
  
  const foundUSPs = [];
  
  uspKeywords.forEach(({ word, weight }) => {
    if (contentLower.includes(word)) {
      // –ù–∞–π–¥–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å —ç—Ç–∏–º —Å–ª–æ–≤–æ–º
      const sentences = content.split(/[.!?]+/);
      sentences.forEach(sentence => {
        if (sentence.toLowerCase().includes(word) && sentence.length > 10 && sentence.length < 150) {
          foundUSPs.push({
            text: sentence.trim(),
            strength: weight,
            keyword: word
          });
        }
      });
    }
  });
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Å–∏–ª–µ –∏ –±–µ—Ä–µ–º —Ç–æ–ø-3
  const topUSPs = foundUSPs
    .sort((a, b) => b.strength - a.strength)
    .slice(0, 3)
    .map(usp => usp.text);
  
  return {
    found: topUSPs,
    strength: foundUSPs.length > 2 ? '–°–∏–ª—å–Ω–æ–µ' : foundUSPs.length > 0 ? '–°—Ä–µ–¥–Ω–µ–µ' : '–°–ª–∞–±–æ–µ'
  };
}

/**
 * –ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞
 */
function analyzeProductRange(structure) {
  const navigation = structure.navigation || [];
  const content = structure.mainContent.toLowerCase();
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const categories = navigation
    .map(nav => nav.text)
    .filter(text => text.length > 2 && text.length < 30)
    .filter(text => !['–≥–ª–∞–≤–Ω–∞—è', '–∫–æ–Ω—Ç–∞–∫—Ç—ã', '–æ –Ω–∞—Å', '–¥–æ—Å—Ç–∞–≤–∫–∞', '–æ–ø–ª–∞—Ç–∞', '–∫–æ—Ä–∑–∏–Ω–∞'].includes(text.toLowerCase()));
  
  // –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ
  const productCategories = [
    '–æ–¥–µ–∂–¥–∞', '–æ–±—É–≤—å', '–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã', '—É–∫—Ä–∞—à–µ–Ω–∏—è', '—Å—É–º–∫–∏', '—á–∞—Å—ã',
    '—Ñ—É—Ç–±–æ–ª–∫–∏', '–¥–∂–∏–Ω—Å—ã', '–ø–ª–∞—Ç—å—è', '–∫—É—Ä—Ç–∫–∏', '–ø–∞–ª—å—Ç–æ', '—Å–≤–∏—Ç–µ—Ä–∞',
    '–∫—Ä–æ—Å—Å–æ–≤–∫–∏', '–±–æ—Ç–∏–Ω–∫–∏', '—Å–∞–ø–æ–≥–∏', '—Ç—É—Ñ–ª–∏', '—Å–∞–Ω–¥–∞–ª–∏–∏',
    '–∫–æ–ª—å—Ü–∞', '—Å–µ—Ä—å–≥–∏', '–±—Ä–∞—Å–ª–µ—Ç—ã', '—Ü–µ–ø–æ—á–∫–∏', '–ø–æ–¥–≤–µ—Å–∫–∏',
    '–∫–æ—Å–º–µ—Ç–∏–∫–∞', '–ø–∞—Ä—Ñ—é–º', '—É—Ö–æ–¥', '–º–∞–∫–∏—è–∂', '–∫—Ä–µ–º',
    '—Ç–µ—Ö–Ω–∏–∫–∞', '—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', '–≥–∞–¥–∂–µ—Ç—ã', '–∫–æ–º–ø—å—é—Ç–µ—Ä—ã', '—Ç–µ–ª–µ—Ñ–æ–Ω—ã'
  ];
  
  const foundProducts = productCategories.filter(category => content.includes(category));
  
  let diversity = '–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞';
  if (categories.length > 8) diversity = '–û—á–µ–Ω—å —à–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç';
  else if (categories.length > 5) diversity = '–®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç';
  else if (categories.length > 2) diversity = '–°—Ä–µ–¥–Ω–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç';
  else if (categories.length > 0) diversity = '–£–∑–∫–∞—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è';
  
  return {
    categories: categories.slice(0, 10),
    productTypes: foundProducts.slice(0, 8),
    diversity,
    categoriesCount: categories.length
  };
}

/**
 * –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤
 */
function analyzeCompetitiveAdvantages(content) {
  const advantages = [];
  
  const advantagePatterns = [
    { pattern: /–±–µ—Å–ø–ª–∞—Ç–Ω.*–¥–æ—Å—Ç–∞–≤–∫/i, advantage: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞' },
    { pattern: /–≥–∞—Ä–∞–Ω—Ç–∏—è.*(\d+)/i, advantage: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è' },
    { pattern: /–≤–æ–∑–≤—Ä–∞—Ç.*(\d+).*–¥–Ω/i, advantage: '–ì–∏–±–∫–∏–π –≤–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞' },
    { pattern: /24.*7|–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω/i, advantage: '–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞' },
    { pattern: /—Å–∫–∏–¥–∫.*(\d+)%/i, advantage: '–°–∏—Å—Ç–µ–º–∞ —Å–∫–∏–¥–æ–∫' },
    { pattern: /—Å–æ–±—Å—Ç–≤–µ–Ω–Ω.*–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤/i, advantage: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ' },
    { pattern: /—ç–∫–æ.*–º–∞—Ç–µ—Ä–∏|–Ω–∞—Ç—É—Ä–∞–ª—å–Ω.*–º–∞—Ç–µ—Ä–∏/i, advantage: '–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã' },
    { pattern: /–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑|–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω.*–ø–æ–¥—Ö–æ–¥/i, advantage: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è' },
    { pattern: /–æ–ø—ã—Ç.*(\d+).*–ª–µ—Ç/i, advantage: '–ú–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–π –æ–ø—ã—Ç' },
    { pattern: /—ç–∫—Å–∫–ª—é–∑–∏–≤–Ω|—É–Ω–∏–∫–∞–ª—å–Ω/i, advantage: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ—Å—Ç—å' },
    { pattern: /–±—ã—Å—Ç—Ä.*–¥–æ—Å—Ç–∞–≤–∫/i, advantage: '–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞' },
    { pattern: /–Ω–∏–∑–∫.*—Ü–µ–Ω|–¥–æ—Å—Ç—É–ø–Ω.*—Ü–µ–Ω/i, advantage: '–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã' }
  ];
  
  advantagePatterns.forEach(({ pattern, advantage }) => {
    if (pattern.test(content)) {
      advantages.push(advantage);
    }
  });
  
  return advantages;
}

/**
 * –ù–û–í–´–ô: SEO –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∞–Ω–∞–ª–∏–∑
 */
function analyzeSEOAndMarketing(structure, html) {
  SmartLogger.analyze('–í—ã–ø–æ–ª–Ω—è—é SEO –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∞–Ω–∞–ª–∏–∑');
  
  return {
    seo: analyzeSEO(structure, html),
    socialMedia: analyzeSocialMedia(html),
    analytics: analyzeAnalytics(html),
    contentMarketing: analyzeContentMarketing(structure)
  };
}

/**
 * SEO –∞–Ω–∞–ª–∏–∑
 */
function analyzeSEO(structure, html) {
  const seo = {
    metaTags: {},
    structuredData: false,
    headings: {},
    images: {}
  };
  
  // –ê–Ω–∞–ª–∏–∑ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤
  const titleMatch = html.match(/<title[^>]*>([^<]+)<\/title>/i);
  seo.metaTags.title = {
    present: !!titleMatch,
    content: titleMatch ? titleMatch[1].trim() : '',
    length: titleMatch ? titleMatch[1].trim().length : 0,
    quality: titleMatch && titleMatch[1].length > 30 && titleMatch[1].length < 60 ? '–•–æ—Ä–æ—à–∞—è' : '–¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è'
  };
  
  const descMatch = html.match(/<meta[^>]+name=["\']description["\'][^>]+content=["\']([^"']+)["\'][^>]*>/i);
  seo.metaTags.description = {
    present: !!descMatch,
    content: descMatch ? descMatch[1].trim() : '',
    length: descMatch ? descMatch[1].trim().length : 0,
    quality: descMatch && descMatch[1].length > 120 && descMatch[1].length < 160 ? '–•–æ—Ä–æ—à–∞—è' : '–¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è'
  };
  
  // –ê–Ω–∞–ª–∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
  const h1Count = (html.match(/<h1[^>]*>/gi) || []).length;
  const h2Count = (html.match(/<h2[^>]*>/gi) || []).length;
  const h3Count = (html.match(/<h3[^>]*>/gi) || []).length;
  
  seo.headings = {
    h1: { count: h1Count, quality: h1Count === 1 ? '–•–æ—Ä–æ—à–æ' : '–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è' },
    h2: { count: h2Count },
    h3: { count: h3Count },
    structure: h1Count === 1 && h2Count > 0 ? '–•–æ—Ä–æ—à–∞—è' : '–¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è'
  };
  
  // –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  seo.structuredData = html.includes('application/ld+json') || html.includes('schema.org');
  
  return seo;
}

/**
 * –ê–Ω–∞–ª–∏–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
 */
function analyzeSocialMedia(html) {
  const social = {
    platforms: [],
    integration: {},
    sharing: false
  };
  
  const socialPatterns = [
    { pattern: /vk\.com|vkontakte/i, platform: '–í–ö–æ–Ω—Ç–∞–∫—Ç–µ' },
    { pattern: /instagram\.com|instagram/i, platform: 'Instagram' },
    { pattern: /facebook\.com|facebook/i, platform: 'Facebook' },
    { pattern: /youtube\.com|youtube/i, platform: 'YouTube' },
    { pattern: /telegram\.org|t\.me/i, platform: 'Telegram' },
    { pattern: /twitter\.com|x\.com/i, platform: 'Twitter/X' },
    { pattern: /tiktok\.com/i, platform: 'TikTok' },
    { pattern: /whatsapp/i, platform: 'WhatsApp' }
  ];
  
  socialPatterns.forEach(({ pattern, platform }) => {
    if (pattern.test(html)) {
      social.platforms.push(platform);
    }
  });
  
  // Open Graph —Ç–µ–≥–∏
  social.integration.openGraph = html.includes('og:title') || html.includes('og:description');
  social.integration.twitterCards = html.includes('twitter:card');
  
  // –ö–Ω–æ–ø–∫–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
  social.sharing = html.includes('share') || html.includes('–ø–æ–¥–µ–ª–∏—Ç—å—Å—è');
  
  return social;
}

/**
 * –ê–Ω–∞–ª–∏–∑ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
 */
function analyzeAnalytics(html) {
  const analytics = {
    googleAnalytics: html.includes('google-analytics') || html.includes('gtag') || html.includes('GA_MEASUREMENT_ID'),
    yandexMetrica: html.includes('metrika.yandex') || html.includes('ym('),
    pixels: {},
    heatmaps: false
  };
  
  // –ü–∏–∫—Å–µ–ª–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
  analytics.pixels.facebook = html.includes('facebook.net/tr') || html.includes('fbq(');
  analytics.pixels.vk = html.includes('vk.com/js/api/openapi.js');
  
  // –¢–µ–ø–ª–æ–≤—ã–µ –∫–∞—Ä—Ç—ã
  analytics.heatmaps = html.includes('hotjar') || html.includes('crazyegg') || html.includes('yandex.ru/metrika');
  
  return analytics;
}

/**
 * –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞
 */
function analyzeContentMarketing(structure) {
  const navigation = structure.navigation || [];
  const content = structure.mainContent.toLowerCase();
  
  const contentTypes = {
    blog: navigation.some(nav => ['–±–ª–æ–≥', '–Ω–æ–≤–æ—Å—Ç–∏', '—Å—Ç–∞—Ç—å–∏', 'blog'].includes(nav.text.toLowerCase())),
    news: content.includes('–Ω–æ–≤–æ—Å—Ç–∏') || content.includes('–∞–Ω–æ–Ω—Å—ã'),
    reviews: content.includes('–æ—Ç–∑—ã–≤—ã') || content.includes('reviews'),
    guides: content.includes('—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ') || content.includes('–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è') || content.includes('–∫–∞–∫'),
    video: content.includes('–≤–∏–¥–µ–æ') || content.includes('youtube'),
    cases: content.includes('–∫–µ–π—Å—ã') || content.includes('–ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç')
  };
  
  const activeTypes = Object.entries(contentTypes)
    .filter(([type, active]) => active)
    .map(([type]) => type);
  
  return {
    types: activeTypes,
    strategy: activeTypes.length > 2 ? '–ê–∫—Ç–∏–≤–Ω–∞—è' : activeTypes.length > 0 ? '–ë–∞–∑–æ–≤–∞—è' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
    contentQuality: structure.mainContent.length > 1000 ? '–ë–æ–≥–∞—Ç—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç' : '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç'
  };
}

/**
 * –ù–û–í–´–ô: –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 */
function analyzeConversionElements(structure, html) {
  SmartLogger.analyze('–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã');
  
  return {
    contactForms: analyzeContactForms(html),
    ecommerce: analyzeEcommerce(html, structure),
    userExperience: analyzeUserExperience(html),
    trustSignals: analyzeTrustSignals(html, structure)
  };
}

/**
 * –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
 */
function analyzeContactForms(html) {
  const forms = {
    contactForm: html.includes('<form') && (html.includes('contact') || html.includes('—Å–≤—è–∑')),
    subscriptionForm: html.includes('subscribe') || html.includes('–ø–æ–¥–ø–∏—Å–∫'),
    callbackForm: html.includes('callback') || html.includes('–æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫'),
    quoteForm: html.includes('quote') || html.includes('—Ä–∞—Å—á–µ—Ç') || html.includes('–∑–∞—è–≤–∫–∞'),
    chatWidget: html.includes('chat') || html.includes('—á–∞—Ç') || html.includes('–æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç')
  };
  
  const activeforms = Object.entries(forms).filter(([form, active]) => active).map(([form]) => form);
  
  return {
    types: activeforms,
    count: activeforms.length,
    quality: activeforms.length > 2 ? '–•–æ—Ä–æ—à–æ —Ä–∞–∑–≤–∏—Ç—ã' : activeforms.length > 0 ? '–ë–∞–∑–æ–≤—ã–µ' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'
  };
}

/**
 * –ê–Ω–∞–ª–∏–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –∫–æ–º–º–µ—Ä—Ü–∏–∏
 */
function analyzeEcommerce(html, structure) {
  const ecommerce = {
    shoppingCart: html.includes('cart') || html.includes('–∫–æ—Ä–∑–∏–Ω–∞'),
    wishlist: html.includes('wishlist') || html.includes('–∏–∑–±—Ä–∞–Ω–Ω–æ–µ'),
    productFilters: html.includes('filter') || html.includes('—Ñ–∏–ª—å—Ç—Ä'),
    searchFunction: html.includes('search') || html.includes('–ø–æ–∏—Å–∫'),
    paymentMethods: analyzePaymentMethods(html),
    deliveryOptions: analyzeDeliveryOptions(html)
  };
  
  const activeFeatures = Object.entries(ecommerce)
    .filter(([feature, active]) => typeof active === 'boolean' ? active : Object.keys(active).length > 0)
    .length;
  
  return {
    ...ecommerce,
    maturity: activeFeatures > 4 ? '–ó—Ä–µ–ª–∞—è' : activeFeatures > 2 ? '–†–∞–∑–≤–∏–≤–∞—é—â–∞—è—Å—è' : '–ë–∞–∑–æ–≤–∞—è'
  };
}

/**
 * –ê–Ω–∞–ª–∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
 */
function analyzePaymentMethods(html) {
  const methods = {
    cards: html.includes('visa') || html.includes('mastercard') || html.includes('–∫–∞—Ä—Ç'),
    electronic: html.includes('paypal') || html.includes('webmoney') || html.includes('—è–Ω–¥–µ–∫—Å.–¥–µ–Ω—å–≥–∏'),
    cash: html.includes('–Ω–∞–ª–∏—á–Ω—ã–º–∏') || html.includes('–ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏'),
    banking: html.includes('–±–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥') || html.includes('—Å—á–µ—Ç'),
    crypto: html.includes('bitcoin') || html.includes('–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç')
  };
  
  return Object.entries(methods).filter(([method, active]) => active).map(([method]) => method);
}

/**
 * –ê–Ω–∞–ª–∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
 */
function analyzeDeliveryOptions(html) {
  const options = {
    courier: html.includes('–∫—É—Ä—å–µ—Ä') || html.includes('courier'),
    pickup: html.includes('—Å–∞–º–æ–≤—ã–≤–æ–∑') || html.includes('pickup'),
    post: html.includes('–ø–æ—á—Ç–∞') || html.includes('post'),
    express: html.includes('—ç–∫—Å–ø—Ä–µ—Å—Å') || html.includes('express'),
    free: html.includes('–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞') || html.includes('free delivery')
  };
  
  return Object.entries(options).filter(([option, active]) => active).map(([option]) => option);
}

/**
 * –ê–Ω–∞–ª–∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞
 */
function analyzeUserExperience(html) {
  return {
    mobileOptimized: html.includes('viewport') && html.includes('responsive'),
    fastLoading: html.includes('defer') || html.includes('async') || html.includes('lazy'),
    accessibility: html.includes('alt=') && html.includes('aria-'),
    multilingual: html.includes('lang=') && (html.match(/lang=/g) || []).length > 1,
    ssl: true // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç HTTPS
  };
}

/**
 * –ê–Ω–∞–ª–∏–∑ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–æ–≤–µ—Ä–∏—è
 */
function analyzeTrustSignals(html, structure) {
  const content = structure.mainContent.toLowerCase();
  
  return {
    reviews: content.includes('–æ—Ç–∑—ã–≤') || content.includes('review'),
    certificates: content.includes('—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç') || content.includes('–ª–∏—Ü–µ–Ω–∑–∏—è'),
    guarantees: content.includes('–≥–∞—Ä–∞–Ω—Ç–∏—è') || content.includes('guarantee'),
    security: html.includes('ssl') || content.includes('–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'),
    contacts: content.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') || content.includes('–∞–¥—Ä–µ—Å') || content.includes('email'),
    aboutCompany: structure.navigation.some(nav => nav.text.toLowerCase().includes('–æ –Ω–∞—Å')) ||
                  structure.navigation.some(nav => nav.text.toLowerCase().includes('about'))
  };
}

/**
 * –ù–û–í–ê–Ø: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞
 */
function generateAdvancedAnalysisReport(structure, businessAnalysis, businessDetails, seoMarketing, conversionElements, url) {
  SmartLogger.analyze('–ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞');
  
  const domain = url.replace(/^https?:\/\//, '').replace(/\/.*/, '');
  
  const report = `## üîç –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞ ${domain}

### üìå –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
- **–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞:** ${structure.title || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}
- **–¢–∏–ø –±–∏–∑–Ω–µ—Å–∞:** ${businessAnalysis.businessType}
- **–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:** ${businessAnalysis.targetAudience}
- **–û–ø–∏—Å–∞–Ω–∏–µ:** ${structure.description || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'}

### üíº –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑:

#### üí∞ –¶–µ–Ω–æ–≤–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞:
${businessDetails.pricing.hasPricing 
  ? `- **–î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω:** ${businessDetails.pricing.priceRange}
- **–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞:** ${businessDetails.pricing.averagePrice}
- **–°—Ç—Ä–∞—Ç–µ–≥–∏—è:** ${businessDetails.pricing.strategy}
- **–ù–∞–π–¥–µ–Ω–æ —Ü–µ–Ω:** ${businessDetails.pricing.totalPricesFound}`
  : `- **–°—Ç–∞—Ç—É—Å:** ${businessDetails.pricing.strategy}
- **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** ${businessDetails.pricing.note || '–¶–µ–Ω—ã —Ç—Ä–µ–±—É—é—Ç –∑–∞–ø—Ä–æ—Å–∞'}`}

#### üéØ –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Ç–æ—Ä–≥–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:
- **–°–∏–ª–∞ –£–¢–ü:** ${businessDetails.uniqueSellingProposition.strength}
${businessDetails.uniqueSellingProposition.found.length > 0 
  ? businessDetails.uniqueSellingProposition.found.map(usp => `- "${usp}"`).join('\n')
  : '- –£–¢–ü –Ω–µ –≤—ã—è–≤–ª–µ–Ω–æ –∏–ª–∏ —Ç—Ä–µ–±—É–µ—Ç —É—Å–∏–ª–µ–Ω–∏—è'}

#### üì¶ –¢–æ–≤–∞—Ä–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:
- **–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ:** ${businessDetails.productRange.diversity}
- **–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (${businessDetails.productRange.categoriesCount}):** ${businessDetails.productRange.categories.join(', ') || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã'}
${businessDetails.productRange.productTypes.length > 0 
  ? `- **–¢–∏–ø—ã —Ç–æ–≤–∞—Ä–æ–≤:** ${businessDetails.productRange.productTypes.join(', ')}`
  : ''}

#### üèÜ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
${businessDetails.competitiveAdvantages.length > 0 
  ? businessDetails.competitiveAdvantages.map(adv => `- ${adv}`).join('\n')
  : '- –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–µ –≤—ã—è–≤–ª–µ–Ω—ã'}

### üîç SEO –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥:

#### üìà –ü–æ–∏—Å–∫–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:
- **Title —Ç–µ–≥:** ${seoMarketing.seo.metaTags.title.quality} (${seoMarketing.seo.metaTags.title.length} —Å–∏–º–≤–æ–ª–æ–≤)
- **Meta Description:** ${seoMarketing.seo.metaTags.description.quality} (${seoMarketing.seo.metaTags.description.length} —Å–∏–º–≤–æ–ª–æ–≤)
- **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:** ${seoMarketing.seo.headings.structure}
  - H1: ${seoMarketing.seo.headings.h1.count} (${seoMarketing.seo.headings.h1.quality})
  - H2: ${seoMarketing.seo.headings.h2.count}
  - H3: ${seoMarketing.seo.headings.h3.count}
- **–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:** ${seoMarketing.seo.structuredData ? '–ï—Å—Ç—å' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}

#### üì± –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:
${seoMarketing.socialMedia.platforms.length > 0 
  ? `- **–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã:** ${seoMarketing.socialMedia.platforms.join(', ')}
- **Open Graph:** ${seoMarketing.socialMedia.integration.openGraph ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
- **–ö–Ω–æ–ø–∫–∏ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è":** ${seoMarketing.socialMedia.sharing ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}`
  : '- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞'}

#### üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞:
- **Google Analytics:** ${seoMarketing.analytics.googleAnalytics ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ –Ω–∞–π–¥–µ–Ω'}
- **–Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞:** ${seoMarketing.analytics.yandexMetrica ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' : '–ù–µ –Ω–∞–π–¥–µ–Ω–∞'}
${Object.keys(seoMarketing.analytics.pixels).some(key => seoMarketing.analytics.pixels[key])
  ? `- **–ü–∏–∫—Å–µ–ª–∏:** ${Object.entries(seoMarketing.analytics.pixels).filter(([k,v]) => v).map(([k,v]) => k).join(', ')}`
  : ''}
- **–¢–µ–ø–ª–æ–≤—ã–µ –∫–∞—Ä—Ç—ã:** ${seoMarketing.analytics.heatmaps ? '–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è' : '–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã'}

#### üìù –ö–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥:
- **–°—Ç—Ä–∞—Ç–µ–≥–∏—è:** ${seoMarketing.contentMarketing.strategy}
- **–ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:** ${seoMarketing.contentMarketing.contentQuality}
${seoMarketing.contentMarketing.types.length > 0 
  ? `- **–¢–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞:** ${seoMarketing.contentMarketing.types.join(', ')}`
  : ''}

### üéØ –ö–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:

#### üìû –§–æ—Ä–º—ã –∏ —Å–≤—è–∑—å:
- **–ö–∞—á–µ—Å—Ç–≤–æ —Ñ–æ—Ä–º:** ${conversionElements.contactForms.quality}
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** ${conversionElements.contactForms.count}
${conversionElements.contactForms.types.length > 0 
  ? `- **–¢–∏–ø—ã:** ${conversionElements.contactForms.types.join(', ')}`
  : ''}

#### üõí –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–æ–º–º–µ—Ä—Ü–∏—è:
- **–ó—Ä–µ–ª–æ—Å—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:** ${conversionElements.ecommerce.maturity}
- **–ö–æ—Ä–∑–∏–Ω–∞:** ${conversionElements.ecommerce.shoppingCart ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}
- **–ü–æ–∏—Å–∫:** ${conversionElements.ecommerce.searchFunction ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}
- **–§–∏–ª—å—Ç—Ä—ã:** ${conversionElements.ecommerce.productFilters ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}
${conversionElements.ecommerce.paymentMethods.length > 0 
  ? `- **–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:** ${conversionElements.ecommerce.paymentMethods.join(', ')}`
  : ''}
${conversionElements.ecommerce.deliveryOptions.length > 0 
  ? `- **–î–æ—Å—Ç–∞–≤–∫–∞:** ${conversionElements.ecommerce.deliveryOptions.join(', ')}`
  : ''}

#### üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç:
- **–ú–æ–±–∏–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:** ${conversionElements.userExperience.mobileOptimized ? '–î–∞' : '–¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è'}
- **–ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞:** ${conversionElements.userExperience.fastLoading ? '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞' : '–ú–æ–∂–µ—Ç –±—ã—Ç—å —É–ª—É—á—à–µ–Ω–∞'}
- **–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:** ${conversionElements.userExperience.accessibility ? '–•–æ—Ä–æ—à–∞—è' : '–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è'}
- **–ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å:** ${conversionElements.userExperience.multilingual ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}

#### üõ°Ô∏è –°–∏–≥–Ω–∞–ª—ã –¥–æ–≤–µ—Ä–∏—è:
${Object.entries(conversionElements.trustSignals).filter(([k,v]) => v).length > 0
  ? Object.entries(conversionElements.trustSignals)
      .filter(([key, value]) => value)
      .map(([key, value]) => {
        const labels = {
          reviews: '–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤',
          certificates: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã/–ª–∏—Ü–µ–Ω–∑–∏–∏',
          guarantees: '–ì–∞—Ä–∞–Ω—Ç–∏–∏',
          security: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
          contacts: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
          aboutCompany: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏'
        };
        return `- ${labels[key] || key}`;
      }).join('\n')
  : '- –°–∏–≥–Ω–∞–ª—ã –¥–æ–≤–µ—Ä–∏—è —Ç—Ä–µ–±—É—é—Ç —É—Å–∏–ª–µ–Ω–∏—è'}

### üóÇÔ∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∞–π—Ç–∞:
**–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:** ${structure.navigation.map(nav => nav.text).join(', ') || '–ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}

### üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
- **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** ${structure.technicalInfo.platform}
- **–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω:** ${structure.technicalInfo.responsive ? '–î–∞' : '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}
- **JavaScript:** ${structure.technicalInfo.hasJavaScript ? '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è' : '–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω'}

### üìä –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
${generateAdvancedRecommendations(businessDetails, seoMarketing, conversionElements)}

---
*–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω —Å–∏—Å—Ç–µ–º–æ–π BOOOMERANGS AI*`;

  return report;
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
 */
function generateAdvancedRecommendations(businessDetails, seoMarketing, conversionElements) {
  const recommendations = [];
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—é
  if (!businessDetails.pricing.hasPricing) {
    recommendations.push('üí∞ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏');
  }
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –£–¢–ü
  if (businessDetails.uniqueSellingProposition.strength === '–°–ª–∞–±–æ–µ') {
    recommendations.push('üéØ –£—Å–∏–ª–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Ç–æ—Ä–≥–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
  }
  
  // SEO —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  if (seoMarketing.seo.metaTags.title.quality === '–¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è') {
    recommendations.push('üìà –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å title —Ç–µ–≥–∏ (30-60 —Å–∏–º–≤–æ–ª–æ–≤)');
  }
  if (seoMarketing.seo.metaTags.description.quality === '–¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è') {
    recommendations.push('üìù –£–ª—É—á—à–∏—Ç—å meta descriptions (120-160 —Å–∏–º–≤–æ–ª–æ–≤)');
  }
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ
  if (!seoMarketing.analytics.googleAnalytics && !seoMarketing.analytics.yandexMetrica) {
    recommendations.push('üìä –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –≤–µ–±-–∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
  }
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
  if (conversionElements.contactForms.count === 0) {
    recommendations.push('üìû –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ª–∏–¥–æ–≤');
  }
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–æ–≤–µ—Ä–∏—é
  const trustCount = Object.values(conversionElements.trustSignals).filter(Boolean).length;
  if (trustCount < 3) {
    recommendations.push('üõ°Ô∏è –£—Å–∏–ª–∏—Ç—å —Å–∏–≥–Ω–∞–ª—ã –¥–æ–≤–µ—Ä–∏—è (–æ—Ç–∑—ã–≤—ã, –≥–∞—Ä–∞–Ω—Ç–∏–∏, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã)');
  }
  
  // –ú–æ–±–∏–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
  if (!conversionElements.userExperience.mobileOptimized) {
    recommendations.push('üì± –£–ª—É—á—à–∏—Ç—å –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∞–π—Ç–∞');
  }
  
  return recommendations.length > 0 
    ? recommendations.map((rec, index) => `${index + 1}. ${rec}`).join('\n')
    : '–°–∞–π—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ö–æ—Ä–æ—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.';
}

module.exports = {
  analyzeWebsite,
  detectWebsiteAnalysisIntent,
  extractUrlFromQuery,
  isValidUrl,
  analyzeBusinessDetails,
  analyzeSEOAndMarketing,
  analyzeConversionElements
};