
/**
 * üï∞Ô∏èüîó –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–û–ô –ú–ê–®–ò–ù–´ –í–†–ï–ú–ï–ù–ò
 * –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ
 */

const { SemanticTimeMachine } = require('./temporal-machine-engine.cjs');

const SmartLogger = {
  integration: (message, data) => {
    const timestamp = new Date().toISOString();
    console.log(`üï∞Ô∏èüîó [${timestamp}] TEMPORAL-INTEGRATION: ${message}`, data ? JSON.stringify(data, null, 2) : '');
  }
};

/**
 * –¢–ï–ú–ü–û–†–ê–õ–¨–ù–´–ô –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ò–ô –ò–ù–¢–ï–ì–†–ê–¢–û–†
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ú–∞—à–∏–Ω—ã –í—Ä–µ–º–µ–Ω–∏ –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é —Å–∏—Å—Ç–µ–º—É
 */
class TemporalSemanticIntegrator {
  constructor() {
    this.timeMachine = new SemanticTimeMachine();
    this.integrationLevel = 'full'; // basic, enhanced, full
    this.adaptiveMode = true; // –ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    
    this.integrationMetrics = {
      totalIntegrations: 0,
      temporallyEnhancedResponses: 0,
      averageEnhancement: 0.0,
      userSatisfactionBoost: 0.0
    };
  }

  /**
   * –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
   */
  async integrateTemporalAnalysis(query, context, standardResult) {
    SmartLogger.integration(`üåÄ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è: "${query.substring(0, 40)}..."`);

    const startTime = Date.now();

    try {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
      const needsTemporal = this.assessTemporalNeed(query, context, standardResult);
      
      if (!needsTemporal.required) {
        SmartLogger.integration(`‚è© –¢–µ–º–ø–æ—Ä–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è: ${needsTemporal.reason}`);
        return this.createSimpleEnhancement(standardResult, needsTemporal);
      }

      SmartLogger.integration(`‚úÖ –¢–µ–º–ø–æ—Ä–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º: ${needsTemporal.reason}`);

      // –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
      const temporalResult = await this.timeMachine.performTemporalAnalysis(query, context);

      // –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      const integratedResult = await this.synthesizeResults(standardResult, temporalResult, context);

      // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
      const optimizedResult = await this.optimizePresentation(integratedResult, context);

      const processingTime = Date.now() - startTime;

      const finalResult = {
        ...optimizedResult,
        
        // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        temporalIntegration: {
          enabled: true,
          level: this.integrationLevel,
          processingTime,
          enhancementScore: this.calculateEnhancementScore(standardResult, optimizedResult),
          temporalInsights: temporalResult.temporalInsights || [],
          recommendations: temporalResult.recommendations || []
        },

        // –î–∞–Ω–Ω—ã–µ –ú–∞—à–∏–Ω—ã –í—Ä–µ–º–µ–Ω–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        timeMachineData: this.shouldIncludeTimeMachineData(context) ? {
          archaeological: this.simplifyArchaeological(temporalResult.archaeological),
          futuristic: this.simplifyFuturistic(temporalResult.futuristic),
          restoredMeanings: temporalResult.restoredMeanings?.slice(0, 3) || [], // –¢–æ–ø-3
          temporalMetrics: temporalResult.temporalMetrics
        } : null
      };

      // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
      this.updateIntegrationMetrics(finalResult);

      SmartLogger.integration(`üéØ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${processingTime}–º—Å, —É–ª—É—á—à–µ–Ω–∏–µ: ${finalResult.temporalIntegration.enhancementScore.toFixed(2)}`);

      return finalResult;

    } catch (error) {
      SmartLogger.integration(`üí• –û–®–ò–ë–ö–ê –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: ${error.message}`);

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –æ—Ç–º–µ—Ç–∫–æ–π –æ–± –æ—à–∏–±–∫–µ
      return {
        ...standardResult,
        temporalIntegration: {
          enabled: false,
          error: error.message,
          fallback: true
        }
      };
    }
  }

  /**
   * –û—Ü–µ–Ω–∏–≤–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
   */
  assessTemporalNeed(query, context, standardResult) {
    const assessment = {
      required: false,
      reason: '',
      confidence: 0.0,
      urgency: 'low'
    };

    // –ö—Ä–∏—Ç–µ—Ä–∏–π 1: –°–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
    if (query.length > 50) {
      assessment.required = true;
      assessment.reason = 'complex_query';
      assessment.confidence += 0.3;
    }

    // –ö—Ä–∏—Ç–µ—Ä–∏–π 2: –ù–∞–ª–∏—á–∏–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if (context.sessionId && context.previousInteractions > 2) {
      assessment.required = true;
      assessment.reason = 'historical_context_available';
      assessment.confidence += 0.4;
    }

    // –ö—Ä–∏—Ç–µ—Ä–∏–π 3: –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã (–±–æ–ª—å—à–µ –≤—ã–∏–≥—Ä—ã–≤–∞—é—Ç –æ—Ç —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞)
    if (this.isCreativeQuery(query)) {
      assessment.required = true;
      assessment.reason = 'creative_query_enhancement';
      assessment.confidence += 0.3;
      assessment.urgency = 'medium';
    }

    // –ö—Ä–∏—Ç–µ—Ä–∏–π 4: –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
    if (standardResult.confidence < 0.7) {
      assessment.required = true;
      assessment.reason = 'low_confidence_needs_enhancement';
      assessment.confidence += 0.5;
      assessment.urgency = 'high';
    }

    // –ö—Ä–∏—Ç–µ—Ä–∏–π 5: –≠–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É—é—â–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
    if (this.containsEvolvingConcepts(query)) {
      assessment.required = true;
      assessment.reason = 'evolving_concepts_detected';
      assessment.confidence += 0.4;
    }

    // –ö—Ä–∏—Ç–µ—Ä–∏–π 6: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–Ω–æ –ø—Ä–æ—Å–∏—Ç –∞–Ω–∞–ª–∏–∑ –∏–ª–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
    if (this.isAnalysisRequest(query)) {
      assessment.required = true;
      assessment.reason = 'explicit_analysis_request';
      assessment.confidence += 0.6;
      assessment.urgency = 'high';
    }

    // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º: –∏–Ω–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
    if (this.adaptiveMode && Math.random() > 0.7 && !assessment.required) {
      assessment.required = true;
      assessment.reason = 'adaptive_learning_sample';
      assessment.confidence = 0.2;
    }

    return assessment;
  }

  /**
   * –°–∏–Ω—Ç–µ–∑–∏—Ä—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏ —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
   */
  async synthesizeResults(standardResult, temporalResult, context) {
    SmartLogger.integration('üß¨ –°–∏–Ω—Ç–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∏ —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');

    const synthesis = {
      // –û—Å–Ω–æ–≤–∞ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      ...standardResult,

      // –û–±–æ–≥–∞—â–µ–Ω–∏–µ –æ—Ç —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
      enhanced_interpretation: this.enhanceInterpretation(
        standardResult.interpretation || standardResult.enhanced_prompt || '',
        temporalResult
      ),

      // –ê—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å–∞–π—Ç—ã
      archaeological_insights: this.extractArchaeologicalInsights(temporalResult.archaeological),

      // –§—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
      future_predictions: this.extractFuturePredictions(temporalResult.futuristic),

      // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–º—ã—Å–ª—ã
      restored_meanings: this.formatRestoredMeanings(temporalResult.restoredMeanings),

      // –¢–µ–º–ø–æ—Ä–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
      temporal_recommendations: this.formatTemporalRecommendations(temporalResult.recommendations),

      // –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
      enhanced_predictions: this.enhancePredictions(
        standardResult.predictions || [],
        temporalResult.futuristic
      ),

      // –û–±–æ–≥–∞—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
      enriched_context: {
        ...standardResult.project_context || {},
        temporal_depth: temporalResult.temporalMetrics?.archaeologicalDepth || 0,
        future_horizon: temporalResult.temporalMetrics?.futuristicHorizon || 0,
        timeline_coherence: temporalResult.integration?.temporalAlignment || 0
      },

      // –£–ª—É—á—à–µ–Ω–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
      enhanced_confidence: this.calculateEnhancedConfidence(
        standardResult.confidence || 0.5,
        temporalResult.confidence || 0.5
      )
    };

    return synthesis;
  }

  /**
   * –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   */
  async optimizePresentation(integratedResult, context) {
    SmartLogger.integration('üé® –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const presentationStyle = this.determinePresentationStyle(context);

    const optimized = {
      ...integratedResult,

      // –û—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç —Å —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω—ã–º —É–ª—É—á—à–µ–Ω–∏–µ–º
      primary_response: this.optimizePrimaryResponse(integratedResult, presentationStyle),

      // –ê—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ö–æ–¥–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å —Ü–µ–Ω–Ω—ã–µ)
      archaeological_highlights: this.selectArchaeologicalHighlights(
        integratedResult.archaeological_insights
      ),

      // –§—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å–∞–π—Ç—ã (–Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ)
      future_insights: this.selectFutureInsights(
        integratedResult.future_predictions,
        presentationStyle
      ),

      // –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
      actionable_recommendations: this.filterActionableRecommendations(
        integratedResult.temporal_recommendations,
        presentationStyle
      ),

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ (–¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
      advanced_options: presentationStyle.showAdvanced ? {
        detailed_archaeology: integratedResult.archaeological_insights,
        full_future_analysis: integratedResult.future_predictions,
        temporal_metrics: integratedResult.enriched_context
      } : null
    };

    return optimized;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
   */
  createSimpleEnhancement(standardResult, needsAssessment) {
    return {
      ...standardResult,
      temporalIntegration: {
        enabled: false,
        reason: needsAssessment.reason,
        simpleEnhancement: true,
        confidence: needsAssessment.confidence
      },
      // –î–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
      temporal_hint: this.generateSimpleTemporalHint(standardResult)
    };
  }

  // === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ ===

  isCreativeQuery(query) {
    const creativeWords = ['—Å–æ–∑–¥–∞–π', '–≥–µ–Ω–µ—Ä–∏', '–Ω–∞—Ä–∏—Å—É–π', '—Å–¥–µ–ª–∞–π', '–ø—Ä–∏–¥—É–º–∞–π', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∞–π'];
    return creativeWords.some(word => query.toLowerCase().includes(word));
  }

  containsEvolvingConcepts(query) {
    const evolvingConcepts = ['–∏–∏', 'ai', '–Ω–µ–π—Ä–æ–Ω', '–∞–ª–≥–æ—Ä–∏—Ç–º', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è', '—Ü–∏—Ñ—Ä–æ–≤–æ–π'];
    return evolvingConcepts.some(concept => query.toLowerCase().includes(concept));
  }

  isAnalysisRequest(query) {
    const analysisWords = ['–∞–Ω–∞–ª–∏–∑', '–æ–±—ä—è—Å–Ω–∏', '—Ä–∞—Å—Å–∫–∞–∂–∏', '—á—Ç–æ —ç—Ç–æ', '–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç', '–ø–æ—á–µ–º—É'];
    return analysisWords.some(word => query.toLowerCase().includes(word));
  }

  enhanceInterpretation(original, temporalResult) {
    let enhanced = original;

    // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å–∞–π—Ç—ã
    if (temporalResult.restoredMeanings && temporalResult.restoredMeanings.length > 0) {
      const restoration = temporalResult.restoredMeanings[0];
      enhanced += `\n\n–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: ${restoration.word} –∏–º–µ–ª –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ "${restoration.originalMeaning}" –≤ –ø–µ—Ä–∏–æ–¥ ${restoration.period}.`;
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å–∞–π—Ç—ã
    if (temporalResult.futuristic && temporalResult.futuristic.futureIntentions) {
      const topIntention = temporalResult.futuristic.futureIntentions[0];
      if (topIntention && topIntention.probability > 0.7) {
        enhanced += `\n\n–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: –≤–µ—Ä–æ—è—Ç–Ω–æ, —á–µ—Ä–µ–∑ ${topIntention.timeframe} –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è ${topIntention.description}.`;
      }
    }

    return enhanced;
  }

  extractArchaeologicalInsights(archaeological) {
    if (!archaeological || !archaeological.excavations) return [];

    const insights = [];

    for (const excavation of archaeological.excavations) {
      if (excavation.lostMeanings && excavation.lostMeanings.length > 0) {
        insights.push({
          word: excavation.word,
          insight: `–£—Ç—Ä–∞—á–µ–Ω–æ ${excavation.lostMeanings.length} –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π`,
          significance: 'medium',
          details: excavation.lostMeanings.slice(0, 2) // –¢–æ–ø-2
        });
      }

      if (excavation.evolutionPattern && excavation.evolutionPattern.overallDirection) {
        insights.push({
          word: excavation.word,
          insight: `–≠–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${excavation.evolutionPattern.overallDirection}`,
          significance: 'low',
          pattern: excavation.evolutionPattern.overallDirection
        });
      }
    }

    return insights.slice(0, 3); // –ú–∞–∫—Å–∏–º—É–º 3 –∏–Ω—Å–∞–π—Ç–∞
  }

  extractFuturePredictions(futuristic) {
    if (!futuristic) return [];

    const predictions = [];

    // –ë—É–¥—É—â–∏–µ –Ω–∞–º–µ—Ä–µ–Ω–∏—è
    if (futuristic.futureIntentions) {
      for (const intention of futuristic.futureIntentions.slice(0, 2)) {
        predictions.push({
          type: 'intention',
          description: intention.description,
          probability: intention.probability,
          timeframe: intention.timeframe,
          actionable: true
        });
      }
    }

    // –°–∫—Ä—ã—Ç—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
    if (futuristic.hiddenNeeds) {
      for (const need of futuristic.hiddenNeeds.slice(0, 1)) {
        predictions.push({
          type: 'hidden_need',
          description: `–°–∫—Ä—ã—Ç–∞—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å: ${need.need}`,
          urgency: need.urgency,
          satisfaction_method: need.satisfaction_method,
          actionable: true
        });
      }
    }

    return predictions;
  }

  formatRestoredMeanings(restoredMeanings) {
    if (!restoredMeanings || restoredMeanings.length === 0) return [];

    return restoredMeanings.slice(0, 2).map(restoration => ({
      word: restoration.word,
      original_meaning: restoration.originalMeaning,
      period: restoration.period,
      relevance: restoration.contextualRelevance,
      application: restoration.modernApplication,
      confidence: restoration.restorationConfidence
    }));
  }

  formatTemporalRecommendations(recommendations) {
    if (!recommendations || recommendations.length === 0) return [];

    return recommendations.slice(0, 3).map(rec => ({
      title: rec.title || rec.type,
      description: rec.description,
      priority: rec.priority,
      timeframe: rec.timeframe || rec.impact,
      actionable: true
    }));
  }

  enhancePredictions(standardPredictions, futuristic) {
    const enhanced = [...standardPredictions];

    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    if (futuristic && futuristic.anticipatedQueries) {
      for (const query of futuristic.anticipatedQueries.slice(0, 2)) {
        enhanced.push({
          type: 'anticipated_query',
          description: `–í–æ–∑–º–æ–∂–Ω—ã–π —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å: ${query.query}`,
          probability: query.probability,
          timing: query.timing,
          source: 'temporal_analysis'
        });
      }
    }

    return enhanced;
  }

  calculateEnhancedConfidence(standardConfidence, temporalConfidence) {
    // –í–∑–≤–µ—à–µ–Ω–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ —Å –Ω–µ–±–æ–ª—å—à–∏–º –±–æ–Ω—É—Å–æ–º –∑–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
    const weighted = (standardConfidence * 0.6) + (temporalConfidence * 0.4);
    const integrationBonus = 0.05; // 5% –±–æ–Ω—É—Å –∑–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
    
    return Math.min(1.0, weighted + integrationBonus);
  }

  determinePresentationStyle(context) {
    return {
      showAdvanced: context.userLevel === 'advanced' || context.showDetails === true,
      verbosity: context.verbosity || 'medium',
      focusArea: context.focusArea || 'practical',
      includeMetrics: context.includeMetrics || false
    };
  }

  optimizePrimaryResponse(result, style) {
    let response = result.enhanced_interpretation || result.interpretation || '';

    if (style.verbosity === 'concise') {
      // –°–æ–∫—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –∫—Ä–∞—Ç–∫–æ–≥–æ —Å—Ç–∏–ª—è
      response = response.split('\n').slice(0, 2).join('\n');
    } else if (style.verbosity === 'detailed') {
      // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π
      if (result.archaeological_insights?.length > 0) {
        response += '\n\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–æ—Å—Ç—É–ø–Ω–∞.';
      }
    }

    return response;
  }

  selectArchaeologicalHighlights(insights) {
    if (!insights || insights.length === 0) return [];

    return insights
      .filter(insight => insight.significance === 'high' || insight.significance === 'medium')
      .slice(0, 2);
  }

  selectFutureInsights(predictions, style) {
    if (!predictions || predictions.length === 0) return [];

    let selected = predictions.filter(pred => pred.actionable);

    if (style.focusArea === 'practical') {
      selected = selected.filter(pred => pred.type === 'intention' || pred.type === 'hidden_need');
    }

    return selected.slice(0, 2);
  }

  filterActionableRecommendations(recommendations, style) {
    if (!recommendations || recommendations.length === 0) return [];

    return recommendations
      .filter(rec => rec.actionable && rec.priority > 0.5)
      .slice(0, style.showAdvanced ? 3 : 1);
  }

  generateSimpleTemporalHint(standardResult) {
    if (standardResult.project_context) {
      return '–î–æ—Å—Ç—É–ø–µ–Ω —É–≥–ª—É–±–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞.';
    }
    
    if (standardResult.predictions && standardResult.predictions.length > 0) {
      return '–í–æ–∑–º–æ–∂–Ω–∞ –±–æ–ª–µ–µ —Ç–æ—á–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.';
    }
    
    return '–°–∏—Å—Ç–µ–º—ã —Ç–µ–º–ø–æ—Ä–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≥–æ—Ç–æ–≤—ã –∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.';
  }

  calculateEnhancementScore(standardResult, enhancedResult) {
    let score = 0;

    // –£–ª—É—á—à–µ–Ω–∏–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
    const confidenceBoost = (enhancedResult.enhanced_confidence || enhancedResult.confidence || 0) - 
                           (standardResult.confidence || 0);
    score += Math.max(0, confidenceBoost) * 2; // *2 –¥–ª—è –≤–µ—Å–æ–º–æ—Å—Ç–∏

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
    const additionalInsights = (enhancedResult.archaeological_insights?.length || 0) +
                              (enhancedResult.future_predictions?.length || 0) +
                              (enhancedResult.restored_meanings?.length || 0);
    score += additionalInsights * 0.1;

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    const predictionBoost = (enhancedResult.enhanced_predictions?.length || 0) - 
                           (standardResult.predictions?.length || 0);
    score += Math.max(0, predictionBoost) * 0.15;

    // –û–±–æ–≥–∞—â–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if (enhancedResult.enriched_context) {
      score += 0.2;
    }

    return Math.min(1.0, score); // –ú–∞–∫—Å–∏–º—É–º 1.0
  }

  shouldIncludeTimeMachineData(context) {
    return context.includeMetrics || context.userLevel === 'advanced' || context.debugMode;
  }

  simplifyArchaeological(archaeological) {
    if (!archaeological) return null;

    return {
      total_excavations: archaeological.excavations?.length || 0,
      lost_meanings_found: archaeological.excavations?.reduce((sum, exc) => 
        sum + (exc.lostMeanings?.length || 0), 0) || 0,
      cultural_layers: archaeological.culturalLayers?.length || 0
    };
  }

  simplifyFuturistic(futuristic) {
    if (!futuristic) return null;

    return {
      future_intentions: futuristic.futureIntentions?.length || 0,
      hidden_needs: futuristic.hiddenNeeds?.length || 0,
      anticipated_queries: futuristic.anticipatedQueries?.length || 0
    };
  }

  updateIntegrationMetrics(result) {
    this.integrationMetrics.totalIntegrations++;

    if (result.temporalIntegration && result.temporalIntegration.enabled) {
      this.integrationMetrics.temporallyEnhancedResponses++;
      
      const enhancement = result.temporalIntegration.enhancementScore || 0;
      this.integrationMetrics.averageEnhancement = 
        (this.integrationMetrics.averageEnhancement * 0.9) + (enhancement * 0.1);
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
   */
  getIntegrationStatistics() {
    return {
      integrationMetrics: this.integrationMetrics,
      timeMachineStats: this.timeMachine.getTemporalStatistics(),
      integrationLevel: this.integrationLevel,
      adaptiveMode: this.adaptiveMode
    };
  }
}

module.exports = {
  TemporalSemanticIntegrator
};
