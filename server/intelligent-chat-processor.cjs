/**
 * –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —á–∞—Ç–∞ - "–Ω–µ–≤–∏–¥–∏–º—ã–π –º–æ–∑–≥" –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
 * –†–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω–æ, –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π –≤ ChatGPT-4
 * 
 * –û–ë–ù–û–í–õ–ï–ù–û: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–º—è—Ç—å –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å –ø—Ä–æ–µ–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–ª–æ–π
const semanticMemory = require('./semantic-memory/index.cjs');
const semanticIntegrationLayer = require('./semantic-integration-layer.cjs');

const SmartLogger = {
  brain: (message, data) => {
    const timestamp = new Date().toISOString();
    console.log(`üß† [${timestamp}] INTELLIGENT BRAIN: ${message}`, data ? JSON.stringify(data, null, 2) : '');
  },
  plan: (message, data) => {
    const timestamp = new Date().toISOString();
    console.log(`üìã [${timestamp}] ACTION PLAN: ${message}`, data ? JSON.stringify(data, null, 2) : '');
  },
  execute: (message, data) => {
    const timestamp = new Date().toISOString();
    console.log(`‚ö° [${timestamp}] EXECUTION: ${message}`, data ? JSON.stringify(data, null, 2) : '');
  },
  grammar: (message, data) => {
    const timestamp = new Date().toISOString();
    console.log(`üìù [${timestamp}] GRAMMAR ANALYSIS: ${message}`, data ? JSON.stringify(data, null, 2) : '');
  },
  memory: (message, data) => {
    const timestamp = new Date().toISOString();
    console.log(`üíæ [${timestamp}] ACTION MEMORY: ${message}`, data ? JSON.stringify(data, null, 2) : '');
  },
  emotion: (message, data) => {
    const timestamp = new Date().toISOString();
    console.log(`üòä [${timestamp}] EMOTIONAL ANALYSIS: ${message}`, data ? JSON.stringify(data, null, 2) : '');
  }
};

/**
 * –°–∏—Å—Ç–µ–º–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
 */
const emotionalAnalyzer = {
  // –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç–º–æ—Ü–∏–π
  emotionPatterns: {
    // –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏
    joy: {
      keywords: ['–æ—Ç–ª–∏—á–Ω–æ', '—Å—É–ø–µ—Ä', '–∫–ª–∞—Å—Å–Ω–æ', '–∫—Ä—É—Ç–æ', '–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ', '–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ', '–≤–æ—Å—Ç–æ—Ä–≥', '—Ä–∞–¥–æ—Å—Ç—å', '—Å—á–∞—Å—Ç–ª–∏–≤', '–¥–æ–≤–æ–ª—å–Ω', '—É—Ä–∞', '–æ–≥–æ', '–≤–∞—É', 'amazing', 'great', 'awesome', 'fantastic', 'wonderful'],
      emojis: ['üòä', 'üòÑ', 'üéâ', 'üëç', 'üíØ', '‚ú®', 'üåü', '‚ù§Ô∏è'],
      weight: 2
    },

    // –ó–ª–æ—Å—Ç—å/—Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ
    anger: {
      keywords: ['–±–µ—Å–∏—Ç', '–∑–ª–æ–π', '—Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç', '–¥—É—Ä–∞–∫', '–∏–¥–∏–æ—Ç', '–Ω–µ–Ω–∞–≤–∏–∂—É', '–¥–æ—Å—Ç–∞–ª', '–Ω–∞–¥–æ–µ–ª', '–ø–ª–æ—Ö–æ', '—É–∂–∞—Å–Ω–æ', '–æ—Ç–≤—Ä–∞—Ç–∏—Ç–µ–ª—å–Ω–æ', '—Ñ–∏–≥–Ω—è', '–¥–µ—Ä—å–º–æ', '–±–ª–∏–Ω', '—á–µ—Ä—Ç', 'angry', 'hate', 'stupid', 'terrible', 'awful'],
      emojis: ['üò§', 'üò†', 'üí¢', 'ü§¨', 'üò°'],
      weight: 3
    },

    // –£—Å—Ç–∞–ª–æ—Å—Ç—å/–≥—Ä—É—Å—Ç—å
    sadness: {
      keywords: ['—É—Å—Ç–∞–ª', '–≥—Ä—É—Å—Ç–Ω–æ', '–ø–µ—á–∞–ª—å–Ω–æ', '–¥–µ–ø—Ä–µ—Å—Å–∏—è', '—Å–∫—É—á–Ω–æ', '–æ–¥–∏–Ω–æ–∫–æ', '—Ç–æ—Å–∫–ª–∏–≤–æ', '–ø–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', '–Ω–µ —Ö–æ—á–µ—Ç—Å—è', '–ª–µ–Ω—å', 'sad', 'tired', 'boring', 'lonely', 'depressed'],
      emojis: ['üòî', 'üòû', 'üò¢', 'üò¥', 'üí§', 'üò™'],
      weight: 2
    },

    // –£–¥–∏–≤–ª–µ–Ω–∏–µ/–∏–Ω—Ç–µ—Ä–µ—Å
    surprise: {
      keywords: ['—É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ', '–Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ', '–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ', '–ª—é–±–æ–ø—ã—Ç–Ω–æ', '—Å—Ç—Ä–∞–Ω–Ω–æ', '–Ω–µ–æ–±—ã—á–Ω–æ', '–∫–∞–∫ —Ç–∞–∫', '–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ', 'wow', 'amazing', 'incredible', 'interesting', 'curious', 'strange'],
      emojis: ['üòÆ', 'ü§î', 'üòØ', 'üßê', 'üí≠', '‚ùì'],
      weight: 1.5
    },

    // –í–µ–∂–ª–∏–≤–æ—Å—Ç—å
    polite: {
      keywords: ['–ø–æ–∂–∞–ª—É–π—Å—Ç–∞', '—Å–ø–∞—Å–∏–±–æ', '–±–ª–∞–≥–æ–¥–∞—Ä—é', '–∏–∑–≤–∏–Ω–∏—Ç–µ', '–ø—Ä–æ—Å—Ç–∏—Ç–µ', '–±—É–¥—å—Ç–µ –¥–æ–±—Ä—ã', '–Ω–µ –º–æ–≥–ª–∏ –±—ã', 'please', 'thank you', 'sorry', 'excuse me'],
      emojis: ['üôè', 'üòä', 'üíù', 'ü§ù'],
      weight: 1.5
    },

    // –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    neutral_question: {
      keywords: ['—á—Ç–æ', '–∫–∞–∫', '–≥–¥–µ', '–∫–æ–≥–¥–∞', '–ø–æ—á–µ–º—É', '–∑–∞—á–µ–º', '–º–æ–∂–µ—à—å', '–ø–æ–º–æ–≥–∏', '–æ–±—ä—è—Å–Ω–∏', '—Ä–∞—Å—Å–∫–∞–∂–∏', 'what', 'how', 'where', 'when', 'why', 'help', 'explain'],
      emojis: ['‚ùì', 'ü§î', 'üí≠'],
      weight: 1
    }
  },

  /**
   * –ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞
   */
  analyzeEmotion(text) {
    SmartLogger.emotion(`–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —ç–º–æ—Ü–∏–∏ –≤ —Ç–µ–∫—Å—Ç–µ: "${text.substring(0, 50)}..."`);

    const lowerText = text.toLowerCase();
    const emotions = {};
    let dominantEmotion = 'neutral';
    let maxScore = 0;

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —ç–º–æ—Ü–∏—é
    for (const [emotion, data] of Object.entries(this.emotionPatterns)) {
      let score = 0;
      const matches = [];

      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
      for (const keyword of data.keywords) {
        if (lowerText.includes(keyword)) {
          score += data.weight;
          matches.push(keyword);
        }
      }

      emotions[emotion] = {
        score,
        matches,
        confidence: Math.min(score * 20, 100) // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–æ 100%
      };

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ–º–∏–Ω–∏—Ä—É—é—â—É—é —ç–º–æ—Ü–∏—é
      if (score > maxScore) {
        maxScore = score;
        dominantEmotion = emotion;
      }
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏ –∏ —Å—Ç–∏–ª—è
    const punctuationAnalysis = this.analyzePunctuation(text);
    const styleAnalysis = this.analyzeWritingStyle(text);

    const result = {
      dominantEmotion,
      emotions,
      confidence: emotions[dominantEmotion]?.confidence || 0,
      punctuation: punctuationAnalysis,
      style: styleAnalysis,
      overallTone: this.determineOverallTone(emotions, punctuationAnalysis, styleAnalysis)
    };

    SmartLogger.emotion('–†–µ–∑—É–ª—å—Ç–∞—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:', result);
    return result;
  },

  /**
   * –ê–Ω–∞–ª–∏–∑ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç–º–æ—Ü–∏–π
   */
  analyzePunctuation(text) {
    const analysis = {
      exclamationMarks: (text.match(/!/g) || []).length,
      questionMarks: (text.match(/\?/g) || []).length,
      capsWords: (text.match(/[–ê-–ØA-Z]{2,}/g) || []).length,
      dots: (text.match(/\.{2,}/g) || []).length
    };

    // –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
    let interpretation = 'neutral';
    if (analysis.exclamationMarks >= 2) interpretation = 'excited';
    else if (analysis.capsWords >= 2) interpretation = 'angry_or_excited';
    else if (analysis.dots >= 1) interpretation = 'thoughtful_or_sad';
    else if (analysis.questionMarks >= 2) interpretation = 'confused_or_curious';

    return { ...analysis, interpretation };
  },

  /**
   * –ê–Ω–∞–ª–∏–∑ —Å—Ç–∏–ª—è –ø–∏—Å—å–º–∞
   */
  analyzeWritingStyle(text) {
    const wordCount = text.split(/\s+/).length;
    const avgWordLength = text.replace(/\s+/g, '').length / wordCount;
    const sentenceCount = text.split(/[.!?]+/).length - 1;

    return {
      wordCount,
      avgWordLength,
      sentenceCount,
      isLongMessage: wordCount > 20,
      isShortMessage: wordCount < 5,
      formality: avgWordLength > 5 ? 'formal' : 'casual'
    };
  },

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—â–µ–π —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
   */
  determineOverallTone(emotions, punctuation, style) {
    const scores = Object.entries(emotions)
      .filter(([_, data]) => data.score > 0)
      .sort((a, b) => b[1].score - a[1].score);

    if (scores.length === 0) return 'neutral';

    const topEmotion = scores[0][0];
    const confidence = scores[0][1].confidence;

    // –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏
    let modifier = '';
    if (punctuation.interpretation === 'excited' && topEmotion !== 'anger') {
      modifier = '_excited';
    } else if (punctuation.interpretation === 'angry_or_excited' && confidence > 50) {
      modifier = '_intense';
    }

    return topEmotion + modifier;
  },

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç–º–æ—Ü–∏–π
   */
  generateEmotionalResponse(emotionalState, baseResponse, category) {
    SmartLogger.emotion(`–ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é: ${emotionalState.dominantEmotion}`);

    const templates = this.getResponseTemplates(emotionalState.overallTone, category);
    const selectedTemplate = templates[Math.floor(Math.random() * templates.length)];

    // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏
    const emoji = this.selectEmoji(emotionalState.dominantEmotion);

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    let adaptedResponse = selectedTemplate.prefix + ' ' + baseResponse;

    if (selectedTemplate.suffix) {
      adaptedResponse += ' ' + selectedTemplate.suffix;
    }

    if (emoji) {
      adaptedResponse = emoji + ' ' + adaptedResponse;
    }

    SmartLogger.emotion(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: "${adaptedResponse.substring(0, 100)}..."`);
    return adaptedResponse;
  },

  /**
   * –®–∞–±–ª–æ–Ω—ã –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —ç–º–æ—Ü–∏–π
   */
  getResponseTemplates(tone, category) {
    const templates = {
      joy: [
        { prefix: '–û—Ç–ª–∏—á–Ω–æ! –° —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É!', suffix: '–ù–∞–¥–µ—é—Å—å, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞—Å –ø–æ—Ä–∞–¥—É–µ—Ç! üéâ' },
        { prefix: '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –≠—Ç–æ –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!', suffix: '–£–≤–µ—Ä–µ–Ω, –ø–æ–ª—É—á–∏—Ç—Å—è –∑–¥–æ—Ä–æ–≤–æ! ‚ú®' },
        { prefix: '–°—É–ø–µ—Ä! –î–∞–≤–∞–π—Ç–µ —Å–¥–µ–ª–∞–µ–º —ç—Ç–æ!', suffix: '–î—É–º–∞—é, –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üåü' }
      ],

      anger: [
        { prefix: '–ü–æ–Ω–∏–º–∞—é –≤–∞—à–µ —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ. –î–∞–≤–∞–π—Ç–µ —Ä–µ—à–∏–º —ç—Ç–æ –±—ã—Å—Ç—Ä–æ.', suffix: '–ù–∞–¥–µ—é—Å—å, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç —É–ª—É—á—à–∏—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é.' },
        { prefix: '–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞. –°–µ–π—á–∞—Å –≤—Å—ë –∏—Å–ø—Ä–∞–≤–∏–º.', suffix: '–ü–æ—Å—Ç–∞—Ä–∞—é—Å—å —Å–¥–µ–ª–∞—Ç—å –≤—Å—ë –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.' },
        { prefix: '–í–∏–∂—É, —á—Ç–æ –≤—ã —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.', suffix: '–ù–∞–¥–µ—é—Å—å, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç.' }
      ],

      sadness: [
        { prefix: '–ü–æ–Ω–∏–º–∞—é, —á—Ç–æ —Å–µ–π—á–∞—Å –Ω–µ–ø—Ä–æ—Å—Ç–æ. –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º.', suffix: '–ù–∞–¥–µ—é—Å—å, —ç—Ç–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–Ω–∏–º–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üåà' },
        { prefix: '–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–ø—Ä–∞–≤–∏–º—Å—è.', suffix: '–í—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ! üíù' },
        { prefix: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –≤–∞—Å! –í–º–µ—Å—Ç–µ –º—ã —Ä–µ—à–∏–º —ç—Ç—É –∑–∞–¥–∞—á—É.', suffix: '–í–µ—Ä—é, —á—Ç–æ —É –Ω–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è! ü§ó' }
      ],

      surprise: [
        { prefix: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∑–∞–¥–∞—á–∞! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä—ë–º—Å—è.', suffix: '–õ—é–±–æ–ø—ã—Ç–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è! üîç' },
        { prefix: '–ù–µ–æ–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å! –ü–æ–ø—Ä–æ–±—É–µ–º —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ.', suffix: '–≠—Ç–æ –±—É–¥–µ—Ç –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–æ! üßê' },
        { prefix: '–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –°–µ–π—á–∞—Å –≤—Å—ë –≤—ã—è—Å–Ω–∏–º.', suffix: '–†–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∂–µ—Ç –≤–∞—Å —É–¥–∏–≤–∏—Ç—å! ‚ú®' }
      ],

      polite: [
        { prefix: '–ö–æ–Ω–µ—á–Ω–æ! –ë—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å.', suffix: '–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –µ—â—ë, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å! ü§ù' },
        { prefix: '–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º! –°–µ–π—á–∞—Å —Å–¥–µ–ª–∞—é.', suffix: '–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –≤–µ–∂–ª–∏–≤–æ—Å—Ç—å! üòä' },
        { prefix: '–†–∞–∑—É–º–µ–µ—Ç—Å—è! –ü—Ä–∏—Å—Ç—É–ø–∞—é –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é.', suffix: '–†–∞–¥ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º! üôè' }
      ],

      neutral_question: [
        { prefix: '–•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä—ë–º—Å—è.', suffix: '–ù–∞–¥–µ—é—Å—å, –æ—Ç–≤–µ—Ç –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–Ω—ã–º! üí≠' },
        { prefix: '–ü–æ–Ω—è—Ç–Ω–æ! –°–µ–π—á–∞—Å –Ω–∞–π–¥—ë–º —Ä–µ—à–µ–Ω–∏–µ.', suffix: '–ü–æ—Å—Ç–∞—Ä–∞—é—Å—å –¥–∞—Ç—å –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–∏–π –æ—Ç–≤–µ—Ç! üéØ' },
        { prefix: '–Ø—Å–Ω–æ! –ü—Ä–∏—Å—Ç—É–ø–∞—é –∫ –∞–Ω–∞–ª–∏–∑—É.', suffix: '–î—É–º–∞—é, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç! üìã' }
      ],

      neutral: [
        { prefix: '–•–æ—Ä–æ—à–æ! –°–µ–π—á–∞—Å –≤—ã–ø–æ–ª–Ω—é.', suffix: '–ì–æ—Ç–æ–≤–æ! –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –µ—â—ë, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å.' },
        { prefix: '–ü–æ–Ω—è—Ç–Ω–æ! –ü—Ä–∏—Å—Ç—É–ø–∞—é –∫ —Ä–∞–±–æ—Ç–µ.', suffix: '–ù–∞–¥–µ—é—Å—å, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–º –ø–æ–¥–æ–π–¥—ë—Ç!' },
        { prefix: '–°–µ–π—á–∞—Å —Å–¥–µ–ª–∞—é!', suffix: '–ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!' }
      ]
    };

    return templates[tone] || templates.neutral;
  },

  /**
   * –í—ã–±–æ—Ä –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —ç–º–æ–¥–∑–∏
   */
  selectEmoji(emotion) {
    const emojiSets = this.emotionPatterns[emotion]?.emojis || ['ü§ñ'];
    return emojiSets[Math.floor(Math.random() * emojiSets.length)];
  }
};

// –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –ø–∞–º—è—Ç–∏ —Å–µ—Å—Å–∏–∏
const sessionMemory = {
  sessions: new Map(),
  maxSessionAge: 24 * 60 * 60 * 1000, // 24 —á–∞—Å–∞

  // –ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
  getSession(sessionId = 'default') {
    if (!this.sessions.has(sessionId)) {
      this.sessions.set(sessionId, {
        sessionId,
        userName: null,
        goals: [],
        topics: [],
        preferences: {},
        createdAt: Date.now(),
        lastActivity: Date.now(),
        statistics: {
          messagesCount: 0,
          goalsAchieved: 0,
          topicsDiscussed: 0
        },
        // –°–∏—Å—Ç–µ–º–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        dialogueState: {
          currentState: 'ready', // ready, awaiting_choice, generating
          category: null, // image_generation, vectorization, etc.
          pendingRequest: null, // –¥–µ—Ç–∞–ª–∏ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          suggestedOptions: null, // –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
          lastSuggestionTime: null,
          choiceKeywords: ['–≤—ã–±–∏—Ä–∞—é', '—Å–¥–µ–ª–∞–π', '—Å–æ–∑–¥–∞–π', '–¥–∞–≤–∞–π', '—Ö–æ—á—É', '–ø—Ä–∏–Ω—Ç', '—ç—Ç–æ—Ç', '—Ç–∞–∫–æ–π']
        }
      });
      SmartLogger.memory(`–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è: ${sessionId}`);
    }

    const session = this.sessions.get(sessionId);
    session.lastActivity = Date.now();
    return session;
  },

  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  setUserName(sessionId, name) {
    const session = this.getSession(sessionId);
    const oldName = session.userName;
    session.userName = name;

    SmartLogger.memory(`–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω–µ–Ω–æ: "${oldName}" ‚Üí "${name}" (—Å–µ—Å—Å–∏—è: ${sessionId})`);
    return `–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —è –±—É–¥—É –Ω–∞–∑—ã–≤–∞—Ç—å –≤–∞—Å ${name}. –ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! üòä`;
  },

  // –î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å
  addGoal(sessionId, goal, priority = 'medium') {
    const session = this.getSession(sessionId);
    const goalRecord = {
      id: Math.random().toString(36).substr(2, 9),
      text: goal,
      priority,
      status: 'active',
      createdAt: Date.now(),
      updatedAt: Date.now()
    };

    session.goals.push(goalRecord);
    session.statistics.goalsAchieved = session.goals.filter(g => g.status === 'completed').length;

    SmartLogger.memory(`–î–æ–±–∞–≤–ª–µ–Ω–∞ —Ü–µ–ª—å: "${goal}" (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${priority}, —Å–µ—Å—Å–∏—è: ${sessionId})`);

    const userName = session.userName ? `, ${session.userName}` : '';
    return `–ü–æ–Ω—è–ª${userName}! –î–æ–±–∞–≤–∏–ª –≤ –≤–∞—à–∏ —Ü–µ–ª–∏: "${goal}". –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ª–µ–π: ${session.goals.filter(g => g.status === 'active').length}. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å –≤ –µ—ë –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏? üéØ`;
  },

  // –ó–∞–ø–æ–º–Ω–∏—Ç—å —Ç–µ–º—É
  rememberTopic(sessionId, topic, category = 'general') {
    const session = this.getSession(sessionId);
    const topicRecord = {
      id: Math.random().toString(36).substr(2, 9),
      text: topic,
      category,
      mentions: 1,
      createdAt: Date.now(),
      lastMentioned: Date.now()
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ—Ö–æ–∂–∞—è —Ç–µ–º–∞
    const existingTopic = session.topics.find(t => 
      t.text.toLowerCase().includes(topic.toLowerCase()) || 
      topic.toLowerCase().includes(t.text.toLowerCase())
    );

    if (existingTopic) {
      existingTopic.mentions++;
      existingTopic.lastMentioned = Date.now();
      SmartLogger.memory(`–û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ç–µ–º–∞: "${topic}" (—É–ø–æ–º–∏–Ω–∞–Ω–∏–π: ${existingTopic.mentions})`);
    } else {
      session.topics.push(topicRecord);
      session.statistics.topicsDiscussed = session.topics.length;
      SmartLogger.memory(`–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Ç–µ–º–∞: "${topic}" (–∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${category})`);
    }

    return `–ó–∞–ø–æ–º–Ω–∏–ª —Ç–µ–º—É "${topic}". –¢–µ–ø–µ—Ä—å —è –±—É–¥—É —É—á–∏—Ç—ã–≤–∞—Ç—å –µ—ë –≤ –Ω–∞—à–∏—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–∞—Ö! üìù`;
  },

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ü–µ–ª–µ–π –∏–∑ —Ç–µ–∫—Å—Ç–∞
  extractGoalsFromText(sessionId, text) {
    const goalPatterns = [
      /—è —Ö–æ—á—É\s+(.+?)(?:[.!?]|$)/gi,
      /–º–Ω–µ –Ω—É–∂–Ω–æ\s+(.+?)(?:[.!?]|$)/gi,
      /—Ö–æ—Ç–µ–ª –±—ã\s+(.+?)(?:[.!?]|$)/gi,
      /–ø–ª–∞–Ω–∏—Ä—É—é\s+(.+?)(?:[.!?]|$)/gi,
      /—Å–æ–±–∏—Ä–∞—é—Å—å\s+(.+?)(?:[.!?]|$)/gi,
      /–º–æ—è —Ü–µ–ª—å\s+(.+?)(?:[.!?]|$)/gi,
      /—Å—Ç—Ä–µ–º–ª—é—Å—å\s+(.+?)(?:[.!?]|$)/gi
    ];

    const extractedGoals = [];

    goalPatterns.forEach(pattern => {
      let match;
      while ((match = pattern.exec(text)) !== null) {
        const goal = match[1].trim();
        if (goal.length > 3 && goal.length < 200) {
          extractedGoals.push(goal);
        }
      }
    });

    if (extractedGoals.length > 0) {
      const responses = [];
      extractedGoals.forEach(goal => {
        const response = this.addGoal(sessionId, goal, 'auto-detected');
        responses.push(response);
      });

      SmartLogger.memory(`–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–æ —Ü–µ–ª–µ–π: ${extractedGoals.length} –∏–∑ —Ç–µ–∫—Å—Ç–∞: "${text.substring(0, 100)}..."`);
      return responses;
    }

    return null;
  },

  // –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è AI
  getUserContext(sessionId) {
    const session = this.getSession(sessionId);

    let context = '–ö–û–ù–¢–ï–ö–°–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:\n';

    if (session.userName) {
      context += `üë§ –ò–º—è: ${session.userName}\n`;
    }

    if (session.goals.length > 0) {
      const activeGoals = session.goals.filter(g => g.status === 'active');
      if (activeGoals.length > 0) {
        context += `üéØ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ü–µ–ª–∏ (${activeGoals.length}):\n`;
        activeGoals.slice(0, 5).forEach((goal, index) => {
          context += `   ${index + 1}. ${goal.text} (${goal.priority})\n`;
        });
      }
    }

    if (session.topics.length > 0) {
      const recentTopics = session.topics
        .sort((a, b) => b.lastMentioned - a.lastMentioned)
        .slice(0, 3);

      context += `üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–µ–º—ã:\n`;
      recentTopics.forEach((topic, index) => {
        context += `   ${index + 1}. ${topic.text} (${topic.mentions} —Ä–∞–∑)\n`;
      });
    }

    context += `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${session.statistics.messagesCount} —Å–æ–æ–±—â–µ–Ω–∏–π, ${session.statistics.topicsDiscussed} —Ç–µ–º\n`;

    return context;
  },

  // –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é
  processMemoryCommand(sessionId, command, params) {
    SmartLogger.memory(`–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–∞–º—è—Ç–∏: ${command} —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:`, params);

    switch (command.toLowerCase()) {
      case 'setusername':
      case 'set_user_name':
        if (params && params.length > 0) {
          return this.setUserName(sessionId, params.join(' '));
        }
        return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è. –ü—Ä–∏–º–µ—Ä: "setUserName –ê–Ω–Ω–∞"';

      case 'addgoal':
      case 'add_goal':
        if (params && params.length > 0) {
          const priority = params.includes('--high') ? 'high' : 
                          params.includes('--low') ? 'low' : 'medium';
          const goalText = params.filter(p => !p.startsWith('--')).join(' ');
          return this.addGoal(sessionId, goalText, priority);
        }
        return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ü–µ–ª—å. –ü—Ä–∏–º–µ—Ä: "addGoal –∏–∑—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ --high"';

      case 'remembertopic':
      case 'remember_topic':
        if (params && params.length > 0) {
          return this.rememberTopic(sessionId, params.join(' '));
        }
        return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É. –ü—Ä–∏–º–µ—Ä: "rememberTopic –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç"';

      case 'showmemory':
      case 'show_memory':
        return this.getUserContext(sessionId);

      case 'clearmemory':
      case 'clear_memory':
        return this.clearSession(sessionId);

      default:
        return `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–∞–º—è—Ç–∏: ${command}. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: setUserName, addGoal, rememberTopic, showMemory, clearMemory`;
    }
  },

  // –û—á–∏—Å—Ç–∫–∞ —Å–µ—Å—Å–∏–∏
  clearSession(sessionId) {
    if (this.sessions.has(sessionId)) {
      const session = this.sessions.get(sessionId);
      const backup = { ...session };

      session.goals = [];
      session.topics = [];
      session.preferences = {};
      session.statistics = {
        messagesCount: 0,
        goalsAchieved: 0,
        topicsDiscussed: 0
      };

      SmartLogger.memory(`–û—á–∏—â–µ–Ω–∞ –ø–∞–º—è—Ç—å —Å–µ—Å—Å–∏–∏: ${sessionId}`, backup);
      return '–ü–∞–º—è—Ç—å —Å–µ—Å—Å–∏–∏ –æ—á–∏—â–µ–Ω–∞! –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ. üîÑ';
    }

    return '–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.';
  },

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Å—Å–∏–π
  cleanupOldSessions() {
    const now = Date.now();
    let cleaned = 0;

    for (const [sessionId, session] of this.sessions.entries()) {
      if (now - session.lastActivity > this.maxSessionAge) {
        this.sessions.delete(sessionId);
        cleaned++;
      }
    }

    if (cleaned > 0) {
      SmartLogger.memory(`–û—á–∏—â–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Å—Å–∏–π: ${cleaned}`);
    }
  },

  // ========== –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø–ú–ò –î–ò–ê–õ–û–ì–ê ==========

  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–æ—Å–ª–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
  setAwaitingChoice(sessionId, category, pendingRequest, suggestedOptions) {
    const session = this.getSession(sessionId);
    session.dialogueState.currentState = 'awaiting_choice';
    session.dialogueState.category = category;
    session.dialogueState.pendingRequest = pendingRequest;
    session.dialogueState.suggestedOptions = suggestedOptions;
    session.dialogueState.lastSuggestionTime = Date.now();

    SmartLogger.memory(`[–î–ò–ê–õ–û–ì] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞" –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${category}`);
    SmartLogger.memory(`[–î–ò–ê–õ–û–ì] –ó–∞–ø—Ä–æ—Å: "${pendingRequest?.substring(0, 50)}..."`);
  },

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –≤—ã–±–æ—Ä –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  isAwaitingChoice(sessionId, category = null) {
    const session = this.getSession(sessionId);
    const dialogueState = session.dialogueState;

    const isAwaiting = dialogueState.currentState === 'awaiting_choice' && 
                     (!category || dialogueState.category === category);

    if (isAwaiting) {
      SmartLogger.memory(`[–î–ò–ê–õ–û–ì] –°–µ—Å—Å–∏—è ${sessionId} –æ–∂–∏–¥–∞–µ—Ç –≤—ã–±–æ—Ä –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${dialogueState.category}`);
    }

    return isAwaiting;
  },

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–±–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  isUserChoice(sessionId, userMessage) {
    const session = this.getSession(sessionId);
    const dialogueState = session.dialogueState;

    if (dialogueState.currentState !== 'awaiting_choice') {
      return false;
    }

    const lowerMessage = userMessage.toLowerCase();
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –∏—Å–∫–ª—é—á–∞–µ–º —Ñ—Ä–∞–∑—ã-–æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    const nonChoiceResponses = [
      '–æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—è –¥–ª—è –ø–µ—á–∞—Ç–∏', '–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–µ—á–∞—Ç–∏', '–¥–ª—è –ø–µ—á–∞—Ç–∏ –Ω–∞ —Ç–∫–∞–Ω–∏',
      '–ø–µ—á–∞—Ç—å –Ω–∞ —Ç–∫–∞–Ω–∏', '–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–µ—á–∞—Ç–∏', '–≥–æ—Ç–æ–≤–ª—é –∫ –ø–µ—á–∞—Ç–∏',
      '–∞–¥–∞–ø—Ç–∏—Ä—É—é –¥–ª—è –ø–µ—á–∞—Ç–∏', '–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é –¥–ª—è –ø–µ—á–∞—Ç–∏'
    ];
    
    const isNonChoiceResponse = nonChoiceResponses.some(response => 
      lowerMessage.includes(response)
    );
    
    if (isNonChoiceResponse) {
      SmartLogger.memory(`[–î–ò–ê–õ–û–ì] –û–ë–ù–ê–†–£–ñ–ï–ù –û–¢–í–ï–¢ –ù–ê –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï (–ù–ï –í–´–ë–û–†): "${userMessage}"`);
      return false;
    }

    const hasChoiceKeywords = dialogueState.choiceKeywords.some(keyword => 
      lowerMessage.includes(keyword)
    );

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—Ä–∞–∑—ã —É–∫–∞–∑—ã–≤–∞—é—â–∏–µ –Ω–∞ –≤—ã–±–æ—Ä –∏–ª–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –¥–µ–π—Å—Ç–≤–∏—é
    const choiceIndicators = [
      '–¥–æ–ª–∂–µ–Ω –±—ã–ª', '–¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å', '—Å–¥–µ–ª–∞–π —ç—Ç–æ', '–¥–∞–≤–∞–π —ç—Ç–æ—Ç',
      '—Å–æ–∑–¥–∞–≤–∞–π', '–≥–µ–Ω–µ—Ä–∏—Ä—É–π', '—Ä–∏—Å—É–π', '–¥–µ–ª–∞–π'
    ];

    const hasChoiceIndicators = choiceIndicators.some(indicator => 
      lowerMessage.includes(indicator)
    );

    const isChoice = hasChoiceKeywords || hasChoiceIndicators;

    if (isChoice) {
      SmartLogger.memory(`[–î–ò–ê–õ–û–ì] –†–∞—Å–ø–æ–∑–Ω–∞–Ω –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "${userMessage}"`);
      SmartLogger.memory(`[–î–ò–ê–õ–û–ì] –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${hasChoiceKeywords ? '–Ω–∞–π–¥–µ–Ω—ã' : '–Ω–µ—Ç'}, –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã: ${hasChoiceIndicators ? '–Ω–∞–π–¥–µ–Ω—ã' : '–Ω–µ—Ç'}`);
    } else {
      SmartLogger.memory(`[–î–ò–ê–õ–û–ì] –ù–ï —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –∫–∞–∫ –≤—ã–±–æ—Ä: "${userMessage}"`);
    }

    return isChoice;
  },

  // –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ–∂–∏–¥–∞—é—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  getPendingRequest(sessionId) {
    const session = this.getSession(sessionId);
    const dialogueState = session.dialogueState;

    if (dialogueState.currentState === 'awaiting_choice') {
      SmartLogger.memory(`[–î–ò–ê–õ–û–ì] –ü–æ–ª—É—á–µ–Ω –æ–∂–∏–¥–∞—é—â–∏–π –∑–∞–ø—Ä–æ—Å: "${dialogueState.pendingRequest?.substring(0, 50)}..."`);
      return {
        category: dialogueState.category,
        request: dialogueState.pendingRequest,
        options: dialogueState.suggestedOptions,
        timestamp: dialogueState.lastSuggestionTime
      };
    }

    return null;
  },

  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è)
  setGenerating(sessionId, category) {
    const session = this.getSession(sessionId);
    session.dialogueState.currentState = 'generating';
    session.dialogueState.category = category;

    SmartLogger.memory(`[–î–ò–ê–õ–û–ì] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è" –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${category}`);
  },

  // –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –≤ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
  resetDialogueState(sessionId) {
    const session = this.getSession(sessionId);
    session.dialogueState.currentState = 'ready';
    session.dialogueState.category = null;
    session.dialogueState.pendingRequest = null;
    session.dialogueState.suggestedOptions = null;
    session.dialogueState.lastSuggestionTime = null;

    SmartLogger.memory(`[–î–ò–ê–õ–û–ì] –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å–±—Ä–æ—à–µ–Ω–æ –≤ "–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å"`);
  },

  // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
  getDialogueState(sessionId) {
    const session = this.getSession(sessionId);
    return session.dialogueState;
  }
};

// –°–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö
const actionMemory = {
  lastActions: [],
  maxHistorySize: 10,

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –≤ –ø–∞–º—è—Ç–∏
  saveAction(action) {
    const actionRecord = {
      ...action,
      timestamp: Date.now(),
      id: Math.random().toString(36).substr(2, 9)
    };

    this.lastActions.unshift(actionRecord);

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏
    if (this.lastActions.length > this.maxHistorySize) {
      this.lastActions = this.lastActions.slice(0, this.maxHistorySize);
    }

    SmartLogger.memory(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ: ${action.category}`, actionRecord);
  },

  // –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
  getLastAction(category = null) {
    if (!category) {
      return this.lastActions[0] || null;
    }

    const lastAction = this.lastActions.find(action => action.category === category);
    SmartLogger.memory(`–ù–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category}:`, lastAction);
    return lastAction;
  },

  // –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  getLastImage() {
    return this.getLastAction('image_generation');
  },

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –±—ã–ª–æ –ª–∏ –Ω–µ–¥–∞–≤–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  hasRecentImage(withinMinutes = 30) {
    const lastImage = this.getLastImage();
    if (!lastImage) return false;

    const timeDiff = Date.now() - lastImage.timestamp;
    const minutesDiff = timeDiff / (1000 * 60);

    return minutesDiff <= withinMinutes;
  },

  // –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
  getActionContext() {
    const recentActions = this.lastActions.slice(0, 3);
    return {
      hasRecentImage: this.hasRecentImage(),
      lastImageTime: this.getLastImage()?.timestamp,
      recentCategories: recentActions.map(a => a.category),
      totalActions: this.lastActions.length
    };
  }
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Å—Å–∏–π –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
setInterval(() => {
  sessionMemory.cleanupOldSessions();
}, 30 * 60 * 1000);

/**
 * –ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –Ω–∞–º–µ—Ä–µ–Ω–∏–π
 */
function analyzeGrammar(text) {
  SmartLogger.grammar(`–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≥—Ä–∞–º–º–∞—Ç–∏–∫—É: "${text.substring(0, 50)}..."`);

  const query = text.toLowerCase().trim();

  // –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
  const analysis = {
    isQuestion: false,
    isCommand: false,
    tense: 'present',
    questionWords: [],
    commandWords: [],
    timeIndicators: [],
    confidence: 0
  };

  // –í–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã
  const questionPatterns = [
    '—á—Ç–æ', '–∫–∞–∫', '–≥–¥–µ', '–∫–æ–≥–¥–∞', '–ø–æ—á–µ–º—É', '–∑–∞—á–µ–º', '–∫—Ç–æ', '–∫–∞–∫–æ–π', '–∫–∞–∫–∞—è', '–∫–∞–∫–æ–µ', '–∫–∞–∫–∏–µ',
    '—á—Ç–æ —Ç–∞–∫–æ–µ', '–∫–∞–∫ —ç—Ç–æ', '—á—Ç–æ —ç—Ç–æ', '—á—Ç–æ —Ç—ã', '–∫–∞–∫ —Ç—ã', '–º–æ–∂–µ—à—å –ª–∏', '—É–º–µ–µ—à—å –ª–∏'
  ];

  // –ö–æ–º–∞–Ω–¥–Ω—ã–µ —Å–ª–æ–≤–∞
  const commandPatterns = [
    '—Å–æ–∑–¥–∞–π', '—Å–¥–µ–ª–∞–π', '–Ω–∞—Ä–∏—Å—É–π', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π', '–ø–æ—Å—Ç—Ä–æ–π', '–ø–æ–∫–∞–∂–∏', '–Ω–∞–π–¥–∏', '–ø–æ–∏—â–∏',
    '–ø—Ä–µ–æ–±—Ä–∞–∑—É–π', '–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π', '–ø–µ—Ä–µ–≤–µ–¥–∏', '–∏–∑–º–µ–Ω–∏', '–¥–æ–±–∞–≤—å', '—É–¥–∞–ª–∏'
  ];

  // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –≤—Ä–µ–º–µ–Ω–∏
  const pastTimePatterns = [
    '—Å–æ–∑–¥–∞–ª', '—Å–¥–µ–ª–∞–ª', '–Ω–∞—Ä–∏—Å–æ–≤–∞–ª', '—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª', '–ø–æ—Å—Ç—Ä–æ–∏–ª', '–ø–æ–∫–∞–∑–∞–ª', '–Ω–∞—à–µ–ª', 
    '–∏—Å–∫–∞–ª', '–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–ª', '–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–ª', '–ø–µ—Ä–µ–≤–µ–ª', '–∏–∑–º–µ–Ω–∏–ª', '–¥–æ–±–∞–≤–∏–ª', '—É–¥–∞–ª–∏–ª',
    '–±—ã–ª–æ', '–±—ã–ª–∞', '–±—ã–ª–∏', '—Ä–∞–Ω—å—à–µ', '—Ä–∞–Ω–µ–µ', '–¥–æ —ç—Ç–æ–≥–æ', '—É–∂–µ', '–Ω–µ–¥–∞–≤–Ω–æ'
  ];

  const futureTimePatterns = [
    '–±—É–¥–µ—à—å', '–±—É–¥–µ—Ç', '—Å–æ–±–∏—Ä–∞–µ—à—å—Å—è', '–ø–ª–∞–Ω–∏—Ä—É–µ—à—å', '—Ö–æ—á–µ—à—å', '–º–æ–∂–µ—à—å', '—Å–º–æ–∂–µ—à—å',
    '–∑–∞–≤—Ç—Ä–∞', '–ø–æ—Ç–æ–º', '–ø–æ–∑–∂–µ', '—Å–∫–æ—Ä–æ', '–≤ –±—É–¥—É—â–µ–º'
  ];

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
  questionPatterns.forEach(pattern => {
    if (query.includes(pattern)) {
      analysis.questionWords.push(pattern);
      analysis.isQuestion = true;
    }
  });

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
  commandPatterns.forEach(pattern => {
    if (query.includes(pattern)) {
      analysis.commandWords.push(pattern);
      analysis.isCommand = true;
    }
  });

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
  pastTimePatterns.forEach(pattern => {
    if (query.includes(pattern)) {
      analysis.timeIndicators.push({pattern, type: 'past'});
      analysis.tense = 'past';
    }
  });

  futureTimePatterns.forEach(pattern => {
    if (query.includes(pattern)) {
      analysis.timeIndicators.push({pattern, type: 'future'});
      if (analysis.tense !== 'past') {
        analysis.tense = 'future';
      }
    }
  });

  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏
  if (query.includes('?')) {
    analysis.isQuestion = true;
  }

  // –ï—Å–ª–∏ –µ—Å—Ç—å –∏ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏ –∫–æ–º–∞–Ω–¥–Ω—ã–µ —Å–ª–æ–≤–∞, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É –≤–æ–ø—Ä–æ—Å–æ–≤
  if (analysis.isQuestion && analysis.isCommand) {
    analysis.isCommand = false;
    SmartLogger.grammar('–û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç: –µ—Å—Ç—å –∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É –≤–æ–ø—Ä–æ—Å–∞.');
  }

  // –í—ã—á–∏—Å–ª—è–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –∞–Ω–∞–ª–∏–∑–µ
  analysis.confidence = Math.min(
    (analysis.questionWords.length + analysis.commandWords.length + analysis.timeIndicators.length) * 25,
    100
  );

  SmartLogger.grammar('–†–µ–∑—É–ª—å—Ç–∞—Ç –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:', analysis);
  return analysis;
}

/**
 * –£–º–Ω—ã–µ –ø–æ—Ä–æ–≥–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 */
function calculateSmartThreshold(grammar, context, category) {
  let baseThreshold = 12; // –ë–æ–ª–µ–µ –º—è–≥–∫–∏–π –±–∞–∑–æ–≤—ã–π –ø–æ—Ä–æ–≥

  // –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏
  if (grammar.isQuestion && grammar.tense === 'past') {
    // –í–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ—à–ª–æ–º - –æ—á–µ–Ω—å –Ω–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    baseThreshold = 8;
    SmartLogger.grammar('–°–Ω–∏–∂–µ–Ω –ø–æ—Ä–æ–≥: –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ—à–ª–æ–º –¥–µ–π—Å—Ç–≤–∏–∏');
  } else if (grammar.isCommand && grammar.tense === 'future') {
    // –ö–æ–º–∞–Ω–¥—ã –Ω–∞ –±—É–¥—É—â–µ–µ - —É–º–µ—Ä–µ–Ω–Ω—ã–π –ø–æ—Ä–æ–≥
    baseThreshold = 18;
    SmartLogger.grammar('–£–º–µ—Ä–µ–Ω–Ω—ã–π –ø–æ—Ä–æ–≥: –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ –±—É–¥—É—â–µ–µ');
  } else if (grammar.isQuestion) {
    // –û–±—ã—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã - –Ω–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥
    baseThreshold = 10;
    SmartLogger.grammar('–ù–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥: –æ–±—ã—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å');
  } else if (grammar.isCommand) {
    // –ö–æ–º–∞–Ω–¥—ã - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä–æ–≥
    baseThreshold = 15;
    SmartLogger.grammar('–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä–æ–≥: –∫–æ–º–∞–Ω–¥–∞');
  }

  // –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è
  if (category === 'image_generation') {
    if (context.hasRecentImage && grammar.isQuestion) {
      // –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –≤–æ–ø—Ä–æ—Å–µ - –æ—á–µ–Ω—å –Ω–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
      baseThreshold = 6;
      SmartLogger.grammar('–ù–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥: –≤–æ–ø—Ä–æ—Å –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    } else if (!context.hasRecentImage && grammar.isCommand) {
      // –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π + –∫–æ–º–∞–Ω–¥–∞ = –≤–µ—Ä–æ—è—Ç–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
      baseThreshold = 18;
      SmartLogger.grammar('–£–º–µ—Ä–µ–Ω–Ω—ã–π –ø–æ—Ä–æ–≥: –∫–æ–º–∞–Ω–¥–∞ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    }
  } else if (category === 'image_analysis') {
    // –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª–µ–µ –Ω–∏–∑–∫–æ–≥–æ –ø–æ—Ä–æ–≥–∞ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if (context.hasRecentImage) {
      baseThreshold = 5;
      SmartLogger.grammar('–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥: –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    } else {
      baseThreshold = 25; // –í—ã—Å–æ–∫–∏–π –ø–æ—Ä–æ–≥ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      SmartLogger.grammar('–í—ã—Å–æ–∫–∏–π –ø–æ—Ä–æ–≥: –∞–Ω–∞–ª–∏–∑ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    }
  } else if (category === 'vectorization') {
    // –í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞, —Ç—Ä–µ–±—É–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
    baseThreshold = context.hasRecentImage ? 8 : 20;
    SmartLogger.grammar(`–ü–æ—Ä–æ–≥ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${baseThreshold}% (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${context.hasRecentImage})`);
  }

  SmartLogger.grammar(`–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è ${category}: ${baseThreshold}%`);
  return baseThreshold;
}

// –°–µ—Ä–≤–∏—Å—ã –±—É–¥—É—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —á—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –∫–∞–∫ –ª—É—á—à–µ –æ—Ç–≤–µ—Ç–∏—Ç—å
 */
async function analyzeUserIntent(userQuery, options = {}) {
  SmartLogger.brain(`–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –Ω–∞–º–µ—Ä–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "${userQuery.substring(0, 100)}..."`);

  const query = userQuery.toLowerCase().trim();
  const sessionId = options.sessionId || 'default';

  // ========== –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–ô –î–ò–ê–õ–û–ì–ê ==========
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –≤—ã–±–æ—Ä –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (sessionMemory.isAwaitingChoice(sessionId)) {
    SmartLogger.brain(`üéØ [–î–ò–ê–õ–û–ì] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è: —Å–µ—Å—Å–∏—è –æ–∂–∏–¥–∞–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–±–æ—Ä–æ–º
    if (sessionMemory.isUserChoice(sessionId, userQuery)) {
      SmartLogger.brain(`‚úÖ [–î–ò–ê–õ–û–ì] –†–∞—Å–ø–æ–∑–Ω–∞–Ω –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ª—É—á–∞–µ–º –æ–∂–∏–¥–∞—é—â–∏–π –∑–∞–ø—Ä–æ—Å`);

      const pendingRequest = sessionMemory.getPendingRequest(sessionId);
      if (pendingRequest) {
        SmartLogger.brain(`üîÑ [–î–ò–ê–õ–û–ì] –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: ${pendingRequest.category}`);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        sessionMemory.setGenerating(sessionId, pendingRequest.category);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        return {
          category: pendingRequest.category,
          confidence: 95, // –í—ã—Å–æ–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
          grammar: { isCommand: true, tense: 'present' },
          context: { hasRecentImages: false },
          smartThreshold: 5, // –ù–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
          isChoiceExecution: true, // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥
          originalRequest: pendingRequest.request, // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          userChoice: userQuery // –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        };
      }
    } else {
      SmartLogger.brain(`‚ùì [–î–ò–ê–õ–û–ì] –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ –∫–∞–∫ –≤—ã–±–æ—Ä, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∞–Ω–∞–ª–∏–∑`);
      // –í–ê–ñ–ù–û: –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –≤—ã–±–æ—Ä, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
      sessionMemory.resetDialogueState(sessionId);
    }
  } else {
    SmartLogger.brain(`‚úÖ [–î–ò–ê–õ–û–ì] –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞: –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –∑–∞–ø—Ä–æ—Å–∞–º`);
  }

  // –ó–ê–ì–†–£–ñ–ê–ï–ú –ö–û–ù–¢–ï–ö–°–¢ –ë–ï–°–ï–î–´ –ò –ü–ê–ú–Ø–¢–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
  let chatContext = null;
  let hasRecentImages = false;
  let userName = null;

  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å –ø–∞–º—è—Ç–∏ –±–µ—Å–µ–¥—ã
    let chatMemory;
    try {
      const chatMemoryModule = await import('./chat-memory.js');
      chatMemory = chatMemoryModule.default || chatMemoryModule;
    } catch (error) {
      SmartLogger.brain(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: ${error.message}`);
      chatMemory = null;
    }

    if (chatMemory) {
      chatContext = await chatMemory.getSessionContext(sessionId, 10);
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å –ø–∞–º—è—Ç–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–º–µ–Ω–∏
    let conversationMemory;
    try {
      const conversationMemoryModule = await import('./conversation-memory.js');
      conversationMemory = conversationMemoryModule.default || conversationMemoryModule;
    } catch (error) {
      SmartLogger.brain(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–º—è—Ç–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤: ${error.message}`);
      conversationMemory = null;
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –±–µ—Å–µ–¥—ã
    if (chatContext && chatContext.context) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
      hasRecentImages = chatContext.context.includes('![') || 
                       chatContext.context.includes('https://image.pollinations.ai');

      // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      const namePatterns = [
        /–º–µ–Ω—è –∑–æ–≤—É—Ç\s+([–∞-—è—ë]+)/gi,
        /—è\s+([–∞-—è—ë]+)/gi,
        /–∏–º—è\s+([–∞-—è—ë]+)/gi
      ];

      for (const pattern of namePatterns) {
        const match = chatContext.context.match(pattern);
        if (match && match[1] && match[1].length > 1) {
          userName = match[1];
          SmartLogger.brain(`–ù–∞–π–¥–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: ${userName}`);
          break;
        }
      }
    }

    SmartLogger.brain(`–ó–∞–≥—Ä—É–∂–µ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã: ${chatContext?.messageCount || 0} —Å–æ–æ–±—â–µ–Ω–∏–π, –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${hasRecentImages}, –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userName || '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'}`);
  } catch (error) {
    SmartLogger.brain(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: ${error.message}`);
  }

  // ========== –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –ß–ï–†–ï–ó –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–´–ô –°–õ–û–ô ==========
  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å–ª–æ–π
  let semanticAnalysisResult = null;
  
  try {
    SmartLogger.brain(`üß† –ó–∞–ø—É—Å–∫ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–ª–æ–π`);
    semanticAnalysisResult = await semanticIntegrationLayer.analyzeWithSemantics(userQuery, {
      sessionId,
      chatContext,
      hasRecentImages,
      userName
    });

    if (semanticAnalysisResult.shouldUseSemantic) {
      SmartLogger.brain(`‚úÖ –°–µ–º–∞–Ω—Ç–∏–∫–∞ –±–µ—Ä–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${semanticAnalysisResult.confidence}%)`);
      
      // –°–æ–∑–¥–∞–µ–º —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏ –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
      const semanticResponse = await semanticIntegrationLayer.createSemanticResponse(
        semanticAnalysisResult.semanticResult,
        userQuery,
        { sessionId, chatContext, hasRecentImages, userName }
      );
      
      if (semanticResponse.success) {
        SmartLogger.brain(`üéØ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
        return semanticResponse;
      }
    } else {
      SmartLogger.brain(`üìã –°–µ–º–∞–Ω—Ç–∏–∫–∞ –ø–µ—Ä–µ–¥–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—ã—á–Ω–æ–π –ª–æ–≥–∏–∫–µ (–ø—Ä–∏—á–∏–Ω–∞: ${semanticAnalysisResult.reason})`);
    }
  } catch (error) {
    SmartLogger.brain(`‚ùå –û—à–∏–±–∫–∞ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞: ${error.message}`);
    semanticAnalysisResult = null;
  }

  // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ–±–æ–≥–∞—â–µ–Ω–∏—è
  const semanticContext = semanticAnalysisResult?.semanticResult || options.semanticData;

  // –ü–æ–ª—É—á–∞–µ–º –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑, –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–µ–π—Å—Ç–≤–∏–π –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
  const grammar = analyzeGrammar(userQuery);
  const context = actionMemory.getActionContext();
  const emotional = emotionalAnalyzer.analyzeEmotion(userQuery);

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –ø–∞–º—è—Ç–∏ —Å–µ—Å—Å–∏–∏
  const userContext = sessionMemory.getUserContext(sessionId);
  const session = sessionMemory.getSession(sessionId);

  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
  session.statistics.messagesCount++;

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ü–µ–ª–µ–π –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const extractedGoals = sessionMemory.extractGoalsFromText(sessionId, userQuery);

  // –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –¥–µ—Ç–µ–∫—Ç–æ—Ä –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ø—Ä–æ—à–ª–æ–º –° –ö–û–ù–¢–ï–ö–°–¢–û–ú - –û–ë–™–Ø–í–õ–Ø–ï–ú –°–ù–ê–ß–ê–õ–ê
  const questionAboutPastPatterns = [
    '—á—Ç–æ —Ç—ã —Å–æ–∑–¥–∞–ª', '—á—Ç–æ —Å–æ–∑–¥–∞–ª', '—á—Ç–æ —Ç—ã –Ω–∞—Ä–∏—Å–æ–≤–∞–ª', '—á—Ç–æ –Ω–∞—Ä–∏—Å–æ–≤–∞–ª',
    '—á—Ç–æ —Ç—ã —Å–¥–µ–ª–∞–ª', '—á—Ç–æ —Å–¥–µ–ª–∞–ª', '–æ–ø–∏—à–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ', '–æ–ø–∏—à–∏ —á—Ç–æ',
    '—Ä–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ —Ç—ã', '–ø–æ–∫–∞–∂–∏ —á—Ç–æ —Ç—ã', '–∫–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–∫–∞–∫—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É'
  ];

  const isQuestionAboutPast = questionAboutPastPatterns.some(pattern => query.includes(pattern));

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é
  const memoryCommandMatch = query.match(/^(setusername|set_user_name|addgoal|add_goal|remembertopic|remember_topic|showmemory|show_memory|clearmemory|clear_memory)\s*(.*)/i);


  if (memoryCommandMatch) {
    const [, command, paramString] = memoryCommandMatch;
    const params = paramString ? paramString.split(' ').filter(p => p.length > 0) : [];

    SmartLogger.brain(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–∞–º—è—Ç–∏: ${command}`);

    return {
      category: 'memory_command',
      confidence: 100,
      query: userQuery,
      originalQuery: userQuery,
      command: command,
      params: params,
      grammar: grammar,
      context: context,
      emotional: emotional,
      userContext: userContext,
      smartThreshold: 5
    };
  }

  SmartLogger.brain('–ö–æ–Ω—Ç–µ–∫—Å—Ç –∞–Ω–∞–ª–∏–∑–∞:', { 
    grammar, 
    context, 
    emotional, 
    userContext: userContext.substring(0, 200) + '...',
    extractedGoals: extractedGoals ? extractedGoals.length : 0
  });

  // –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–†–û–¢–ö–ò–• –û–¢–í–ï–¢–û–í –° –ö–û–ù–¢–ï–ö–°–¢–û–ú
  const isShortContextualAnswer = query.length <= 25 && chatContext && chatContext.context;

  if (isShortContextualAnswer) {
    SmartLogger.brain(`–û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç "${query}" - –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è`);

    // –ù–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê: —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –≤–æ–ø—Ä–æ—Å–æ–º –æ –ø–∞–º—è—Ç–∏?
    const memoryQuestionIndicators = [
      '–ø–æ–º–Ω–∏—à—å', '—á—Ç–æ –ø—Ä–æ—Å–∏–ª', '—á—Ç–æ –≥–æ–≤–æ—Ä–∏–ª', '–Ω–µ –≥–æ–≤–æ—Ä–∏–ª', '—Å–ø—Ä–æ—Å–∏–ª'
    ];
    
    const isMemoryQuestion = memoryQuestionIndicators.some(indicator => 
      query.toLowerCase().includes(indicator)
    );
    
    if (isMemoryQuestion) {
      SmartLogger.brain(`–û–±–Ω–∞—Ä—É–∂–µ–Ω –≤–æ–ø—Ä–æ—Å –æ –ø–∞–º—è—Ç–∏: "${query}" - –ù–ï –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`);
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä
      return {
        category: 'conversation',
        confidence: 95,
        query: userQuery,
        originalQuery: userQuery,
        grammar: grammar,
        context: context,
        emotional: emotional,
        smartThreshold: 5,
        forcedCategory: 'memory_question_detected',
        chatContext: chatContext,
        hasRecentImages: hasRecentImages
      };
    }

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const contextLines = chatContext.context.split('\n');
    let foundImageRequest = '';
    let foundChoiceOptions = false;

    // –ò—â–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    for (let i = contextLines.length - 1; i >= 0; i--) {
      const line = contextLines[i].toLowerCase();

      // –ò—â–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞
      if (line.includes('–≤–∞—Ä–∏–∞–Ω—Ç') || line.includes('1Ô∏è‚É£') || line.includes('2Ô∏è‚É£') || 
          line.includes('—Ñ–æ—Ä–º–∞—Ç') || line.includes('–∫–∞–∫–æ–π')) {
        foundChoiceOptions = true;
        SmartLogger.brain(`–ù–∞–π–¥–µ–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: "${contextLines[i].substring(0, 100)}..."`);
      }

      // –ò—â–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ
      if (line.includes('—Å–æ–∑–¥–∞–π') || line.includes('–Ω–∞—Ä–∏—Å—É–π') || line.includes('—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π') || 
          line.includes('–ø—Ä–∏–Ω—Ç') || line.includes('–¥–∏–∑–∞–π–Ω')) {
        foundImageRequest = contextLines[i].replace(/^.*?:\s*/, '');
        SmartLogger.brain(`–ù–∞–π–¥–µ–Ω –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å: "${foundImageRequest.substring(0, 100)}..."`);
      }
    }

    // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫–æ - —ç—Ç–æ –≤—ã–±–æ—Ä
    if (foundChoiceOptions && (query.includes('–≤–∞—Ä–∏–∞–Ω—Ç') || query.match(/^[12]$/) || 
        query.includes('–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ') || query.includes('–ø—Ä–æ—Å—Ç–æ'))) {

      SmartLogger.brain(`–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É—é "${query}" –∫–∞–∫ –≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`);

      // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ–º –µ–≥–æ –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É —Å–æ–∑–¥–∞–Ω–∏—è
      if (foundImageRequest && foundImageRequest.length > 10) {
        const enhancedQuery = foundImageRequest;
        SmartLogger.brain(`–ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É—é –∑–∞–ø—Ä–æ—Å: "${query}" ‚Üí "${enhancedQuery}"`);

        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        return {
          category: 'image_generation',
          confidence: 95, // –í—ã—Å–æ–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
          query: enhancedQuery, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
          originalQuery: userQuery,
          grammar: grammar,
          context: context,
          emotional: emotional,
          smartThreshold: 10, // –ù–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥
          contextuallyEnhanced: true,
          chatContext: chatContext,
          hasRecentImages: hasRecentImages
        };
      }
    }
  }

  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏
  const intentCategories = {
    // –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏
    vectorization: {
      priority: 100, // –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ô –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      keywords: [
        '–≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', 'svg', '—Å–≤–≥', '–≤–µ–∫—Ç–æ—Ä', '–≤–µ–∫—Ç–æ—Ä–∏–∑—É–π', '–≤ –≤–µ–∫—Ç–æ—Ä', 
        '–ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤ svg', '–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ svg', '—Å–¥–µ–ª–∞–π svg', '—Å–æ—Ö—Ä–∞–Ω–∏ –≤ svg',
        'trace', '—Ç—Ä–µ–π—Å', '–≤–µ–∫—Ç–æ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç', 'vectorize', '–Ω—É–∂–µ–Ω –≤–µ–∫—Ç–æ—Ä',
        '—Å–≤–≥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', 'svg —Ñ–∞–π–ª', '–≤–µ–∫—Ç–æ—Ä–Ω–∞—è –≤–µ—Ä—Å–∏—è', '—Å–æ–∑–¥–∞–π svg',
        '—Å–¥–µ–ª–∞–π –≤–µ–∫—Ç–æ—Ä', '—Å–æ–∑–¥–∞–π –≤–µ–∫—Ç–æ—Ä'
      ],
      confidence: 0,
      negativePatterns: [] // –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    },

    website_analysis: {
      priority: 88,
      keywords: [
        '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–∞–π—Ç', '–∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞', '–∏–∑—É—á–∏ —Å–∞–π—Ç', '—á—Ç–æ –Ω–∞ —Å–∞–π—Ç–µ',
        '–æ–ø–∏—à–∏ —Å–∞–π—Ç', '—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–∞–π—Ç–µ', '–∫–∞–∫–æ–π —Å–∞–π—Ç', '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–π—Ç–µ',
        '—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∞–π—Ç–∞', 'analyze website', 'website analysis', 'site analysis',
        '—Ä–∞–∑–±–µ—Ä–∏ —Å–∞–π—Ç', '–ø–æ—Å–º–æ—Ç—Ä–∏ —Å–∞–π—Ç', '–∏—Å—Å–ª–µ–¥—É–π —Å–∞–π—Ç'
      ],
      confidence: 0,
      negativePatterns: []
    },

    // –ö–ê–¢–ï–ì–û–†–ò–Ø: –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ô –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
    image_analysis: {
      priority: 100, // –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –≤—ã—à–µ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      keywords: [
        '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', '–æ–ø–∏—à–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '—á—Ç–æ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏',
        '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞—Ä—Ç–∏–Ω–∫—É', '–∞–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏', '–æ–ø–∏—à–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É', '—á—Ç–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ',
        '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ñ–æ—Ç–æ', '–∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ', '–æ–ø–∏—à–∏ —Ñ–æ—Ç–æ', '—á—Ç–æ –Ω–∞ —Ñ–æ—Ç–æ',
        '–∏–∑—É—á–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–∏–∑—É—á–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É', '–∏–∑—É—á–∏ —Ñ–æ—Ç–æ', '—Ä–∞—Å—Å–º–æ—Ç—Ä–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        '–¥–µ—Ç–∞–ª—å–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–ø–æ–¥—Ä–æ–±–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–ø–æ–¥—Ä–æ–±–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        'analyze image', 'describe image', 'what in image', 'image analysis',
        '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π', '–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π', '–∞–Ω–∞–ª–∏–∑', '–æ–ø–∏—à–∏', '—Ä–∞—Å—Å–º–æ—Ç—Ä–∏', '–∏–∑—É—á–∏', '–¥–µ—Ç–∞–ª—å–Ω–æ', '–ø–æ–¥—Ä–æ–±–Ω–æ', '–ø–æ–¥—Ä–æ–±–Ω–µ–µ',
        '—á—Ç–æ —ç—Ç–æ –∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '—á—Ç–æ –∑–¥–µ—Å—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ', '—á—Ç–æ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏',
        '—Ä–∞—Å—Å–∫–∞–∂–∏ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏', '–æ–ø–∏—à–∏ —á—Ç–æ –≤–∏–¥–∏—à—å', '—á—Ç–æ —Ç—ã –≤–∏–¥–∏—à—å –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏'
      ],
      confidence: 0,
      negativePatterns: [
        // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ —è–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞–Ω–∏—è –ù–û–í–û–ì–û
        '—Å–æ–∑–¥–∞–π –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–Ω–∞—Ä–∏—Å—É–π –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        '–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–Ω–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É', '—Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ', '—Å–¥–µ–ª–∞–π –Ω–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É',
        'generate new image', 'create new image', 'draw new image'
      ],
      // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: —Ç—Ä–µ–±—É–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
      requiresContext: true,
      contextCheck: () => hasSessionImages,
      // –ù–û–í–û–ï: —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
      analysisModifiers: {
        withImages: true,
        requiresExistingContent: true,
        excludesCreation: true
      }
    },

    // –ö–ê–¢–ï–ì–û–†–ò–Ø: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    image_editing: {
      priority: 90, // –°–ù–ò–ñ–ï–ù –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, —á—Ç–æ–±—ã –∞–Ω–∞–ª–∏–∑ –∏ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏–º–µ–ª–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ
      keywords: [
        '–∏–∑–º–µ–Ω–∏', '–ø–æ–º–µ–Ω—è–π', '—É–±–µ—Ä–∏', '—É–¥–∞–ª–∏', '–¥–æ–±–∞–≤—å', '–≤–∫–ª—é—á–∏', '–¥–æ–±–∞–≤—å —ç—Ñ—Ñ–µ–∫—Ç',
        '–ø–µ—Ä–µ–∫—Ä–∞—Å—å', '–ø–æ–∫—Ä–∞—Å—å', '—Ä–∞—Å–∫—Ä–∞—Å—å', '—Ü–≤–µ—Ç', '–∫—Ä–∞—Å–Ω—ã–π', '—Å–∏–Ω–∏–π', '–∑–µ–ª–µ–Ω—ã–π',
        '–≥–ª–∞–∑–∞', '–≤–æ–ª–æ—Å—ã', '–æ–¥–µ–∂–¥–∞', '—Ñ–æ–Ω', '—Ä–∞–∑–º–µ—Ä', '—è—Ä–∫–æ—Å—Ç—å', '–∫–æ–Ω—Ç—Ä–∞—Å—Ç',
        '—ç—Ñ—Ñ–µ–∫—Ç', '—à—É–º', '—Ü–∏—Ñ—Ä–æ–≤–æ–π —à—É–º', '—Ç–µ–∫—Å—Ç—É—Ä–∞', '—É–ª—É—á—à–∏', '–º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–π',
        'edit', 'change', 'modify', 'remove', 'add', 'color', 'eyes', 'hair', 'effect', 'noise'
      ],
      confidence: 0,
      negativePatterns: [
        // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ —è–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ
        '—Å–æ–∑–¥–∞–π –Ω–æ–≤—ã–π', '–Ω–∞—Ä–∏—Å—É–π –Ω–æ–≤—ã–π', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –Ω–æ–≤—ã–π', '—Å–¥–µ–ª–∞–π –Ω–æ–≤—ã–π',
        '–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–Ω–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É', '–Ω–æ–≤—ã–π —Ä–∏—Å—É–Ω–æ–∫',
        // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –∏—Å–∫–ª—é—á–∞–µ–º –≤—Å–µ –≤–µ–∫—Ç–æ—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        '–Ω—É–∂–µ–Ω –≤–µ–∫—Ç–æ—Ä', '–≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', 'svg', '—Å–≤–≥', '–≤–µ–∫—Ç–æ—Ä', '–≤–µ–∫—Ç–æ—Ä–∏–∑—É–π',
        '–≤ –≤–µ–∫—Ç–æ—Ä', '–ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤ svg', '–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ svg', '—Å–¥–µ–ª–∞–π svg',
        'trace', '—Ç—Ä–µ–π—Å', '–≤–µ–∫—Ç–æ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç', 'vectorize',
        // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –∏—Å–∫–ª—é—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏–∑–∞
        '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π', '–∞–Ω–∞–ª–∏–∑', '–æ–ø–∏—à–∏', '—á—Ç–æ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏', '—Ä–∞—Å—Å–º–æ—Ç—Ä–∏'
      ],
      // –¢—Ä–µ–±—É–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
      requiresContext: true,
      contextCheck: () => hasSessionImages // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    },

    image_generation: {
      priority: 75, // –°–ù–ò–ñ–ï–ù –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, —á—Ç–æ–±—ã –∞–Ω–∞–ª–∏–∑ –∏ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏–º–µ–ª–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ
      keywords: ['–Ω–∞—Ä–∏—Å—É–π', '—Å–æ–∑–¥–∞–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '—Å–æ–∑–¥–∞–π –∫–∞—Ä—Ç–∏–Ω–∫—É', '—Å–æ–∑–¥–∞–π —Ä–∏—Å—É–Ω–æ–∫', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–Ω–∞—Ä–∏—Å—É–π –º–Ω–µ', '—Å–¥–µ–ª–∞–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', 'picture', 'draw', 'create image', 'generate image'],
      confidence: 0,
      negativePatterns: [
        // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –∏—Å–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', '–æ–ø–∏—à–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞—Ä—Ç–∏–Ω–∫—É', '–∞–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏', '–æ–ø–∏—à–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É',
        '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ñ–æ—Ç–æ', '–∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ', '–æ–ø–∏—à–∏ —Ñ–æ—Ç–æ',
        '–∏–∑—É—á–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–∏–∑—É—á–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É', '—Ä–∞—Å—Å–º–æ—Ç—Ä–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        '–¥–µ—Ç–∞–ª—å–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–ø–æ–¥—Ä–æ–±–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–ø–æ–¥—Ä–æ–±–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ–¥—Ä–æ–±–Ω–µ–µ', '–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ–¥—Ä–æ–±–Ω–µ–µ', '—Ä–∞—Å—Å–º–æ—Ç—Ä–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ',
        '—á—Ç–æ —ç—Ç–æ –∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '—á—Ç–æ –∑–¥–µ—Å—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ', '—á—Ç–æ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏',
        '—Ä–∞—Å—Å–∫–∞–∂–∏ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏', '–æ–ø–∏—à–∏ —á—Ç–æ –≤–∏–¥–∏—à—å', '—á—Ç–æ —Ç—ã –≤–∏–¥–∏—à—å –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏',
        'analyze image', 'describe image', 'what in image', 'image analysis',
        
        // –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ø—Ä–æ—à–ª–æ–º - –ö–û–ù–¢–ï–ö–°–¢–ù–´–ï
        '—á—Ç–æ —Ç—ã —Å–æ–∑–¥–∞–ª', '—á—Ç–æ —Å–æ–∑–¥–∞–ª', '—á—Ç–æ —Ç—ã –Ω–∞—Ä–∏—Å–æ–≤–∞–ª', '—á—Ç–æ –Ω–∞—Ä–∏—Å–æ–≤–∞–ª',
        '–∫–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–∫–∞–∫—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É', '–∫–∞–∫–æ–π —Ä–∏—Å—É–Ω–æ–∫',
        '–ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '—Å–æ–∑–¥–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        '–ø–æ–∫–∞–∂–∏ —á—Ç–æ', '—Ä–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ', '–æ–±—ä—è—Å–Ω–∏ —á—Ç–æ',
        
        // –ù–û–í–´–ï –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ø–∞–º—è—Ç–∏
        '–ø–æ–º–Ω–∏—à—å —á—Ç–æ', '–ø–æ–º–Ω–∏—à—å —á—Ç–æ-—Ç–æ', '—á—Ç–æ —è –ø—Ä–æ—Å–∏–ª', '—á—Ç–æ –ø—Ä–æ—Å–∏–ª',
        '—á—Ç–æ —è –≥–æ–≤–æ—Ä–∏–ª', '—á—Ç–æ –≥–æ–≤–æ—Ä–∏–ª', '—Ç—ã –ø–æ–º–Ω–∏—à—å', '–≤—Å–ø–æ–º–Ω–∏ —á—Ç–æ',
        '–Ω–µ –≥–æ–≤–æ—Ä–∏–ª —Å–æ–∑–¥–∞–≤–∞—Ç—å', '—è —Å–ø—Ä–æ—Å–∏–ª', '—è –Ω–µ –≥–æ–≤–æ—Ä–∏–ª',
        '–ø—Ä–æ—Å–∏–ª —Å–æ–∑–¥–∞—Ç—å —Ç–µ–±—è', '—á—Ç–æ –ø—Ä–æ—Å–∏–ª —Å–æ–∑–¥–∞—Ç—å', '–ø–æ–º–Ω–∏—à—å –ø—Ä–æ—Å–∏–ª',
        
        // –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        '–æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—è –¥–ª—è –ø–µ—á–∞—Ç–∏', '–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–µ—á–∞—Ç–∏', '–¥–ª—è –ø–µ—á–∞—Ç–∏ –Ω–∞ —Ç–∫–∞–Ω–∏',
        '–ø–µ—á–∞—Ç—å –Ω–∞ —Ç–∫–∞–Ω–∏', '–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–µ—á–∞—Ç–∏', '–≥–æ—Ç–æ–≤–ª—é –∫ –ø–µ—á–∞—Ç–∏',
        '–∞–¥–∞–ø—Ç–∏—Ä—É—é –¥–ª—è –ø–µ—á–∞—Ç–∏', '–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é –¥–ª—è –ø–µ—á–∞—Ç–∏',
        
        // –û–±—â–∏–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        '–¥–∞, —Ç–∞–∫', '–∏–º–µ–Ω–Ω–æ —Ç–∞–∫', '–ø—Ä–∞–≤–∏–ª—å–Ω–æ', '—Å–æ–≥–ª–∞—Å–µ–Ω', '–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é',
        '—ç—Ç–æ —Ç–æ —á—Ç–æ –Ω—É–∂–Ω–æ', '–ø–æ–¥—Ö–æ–¥–∏—Ç', '—Ö–æ—Ä–æ—à–æ', '–æ—Ç–ª–∏—á–Ω–æ'
      ],
      // –ù–û–í–û–ï: –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
      contextModifiers: {
        hasRecentImages: hasRecentImages,
        isQuestionWithImages: isQuestionAboutPast && hasRecentImages
      }
    },

    image_consultation: {
      priority: 80, // –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
      keywords: ['–ø—Ä–µ–¥–ª–æ–∂–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã', '–ø–æ–∫–∞–∂–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã', '–≤–∞—Ä–∏–∞–Ω—Ç—ã —Ü–≤–µ—Ç–æ–≤', '—Ü–≤–µ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è', '–∫–∞–∫ —É–ª—É—á—à–∏—Ç—å', '–¥–∞–π —Å–æ–≤–µ—Ç', '–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è', '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏', '–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã', 'suggest variants', 'color options', 'recommendations'],
      confidence: 0,
      negativePatterns: [
        // –ò—Å–∫–ª—é—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        '—Å–æ–∑–¥–∞–π –Ω–æ–≤–æ–µ', '–Ω–∞—Ä–∏—Å—É–π –Ω–æ–≤–æ–µ', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –Ω–æ–≤–æ–µ', '—Å–¥–µ–ª–∞–π –Ω–æ–≤–æ–µ',
        '—Å–æ–∑–¥–∞–π –¥—Ä—É–≥–æ–µ', '–Ω–∞—Ä–∏—Å—É–π –¥—Ä—É–≥–æ–µ', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –¥—Ä—É–≥–æ–µ'
      ],
      contextModifiers: {
        hasRecentImages: hasRecentImages, // –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–º–µ—é—Ç —Å–º—ã—Å–ª —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        requiresContext: true
      }
    },

    embroidery: {
      priority: 85,
      keywords: ['–≤—ã—à–∏–≤–∫–∞', '–≤—ã—à–∏—Ç—å', 'dst', 'pes', 'jef', 'exp', '–≤—ã—à–∏–≤–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞', 'embroidery'],
      confidence: 0,
      negativePatterns: []
    },

    // –°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    web_search: {
      priority: 70,
      keywords: ['—á—Ç–æ —Ç–∞–∫–æ–µ', '–Ω–∞–π–¥–∏', '–ø–æ–∏—â–∏', '–∫–æ–≥–¥–∞', '–≥–¥–µ', '–∫—Ç–æ', '–∫–∞–∫', '–ø–æ—á–µ–º—É', '–ø–æ–≥–æ–¥–∞', '–Ω–æ–≤–æ—Å—Ç–∏', '–∫—É—Ä—Å', '—Ü–µ–Ω–∞'],
      confidence: 0,
      negativePatterns: []
    },

    time_date: {
      priority: 80,
      keywords: ['–≤—Ä–µ–º—è', '—á–∞—Å', '–¥–∞—Ç–∞', '—á–∏—Å–ª–æ', '—Å–µ–≥–æ–¥–Ω—è', '–≤—á–µ—Ä–∞', '–∑–∞–≤—Ç—Ä–∞'],
      confidence: 0,
      negativePatterns: []
    },

    // –ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –æ–±—ã—á–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ
    conversation: {
      priority: 20,
      keywords: ['–ø—Ä–∏–≤–µ—Ç', '–∫–∞–∫ –¥–µ–ª–∞', '—Å–ø–∞—Å–∏–±–æ', '–ø–æ–∫–∞', '—Ö–æ—Ä–æ—à–æ', '–ø–ª–æ—Ö–æ', '–¥–∞', '–Ω–µ—Ç'],
      confidence: 0,
      negativePatterns: []
    }
  };

  // –ö–û–ù–¢–ï–ö–°–¢–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê - –∏—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¢–û–õ–¨–ö–û –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —á–∞—Ç–∞
  let hasSessionImages = false;
  
  // –ü–†–ò–û–†–ò–¢–ï–¢: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã
  if (chatContext && chatContext.context) {
    hasSessionImages = chatContext.context.includes('![') || 
                     chatContext.context.includes('https://image.pollinations.ai');
    SmartLogger.brain(`–ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –±–µ—Å–µ–¥—ã: –Ω–∞–π–¥–µ–Ω–æ ${hasSessionImages ? '–î–ê' : '–ù–ï–¢'}`);
  } else {
    SmartLogger.brain(`–ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
  }

  SmartLogger.brain(`–ò–¢–û–ì–û: –ù–∞–π–¥–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏–∏: ${hasSessionImages}`);

  // –ï—Å–ª–∏ —ç—Ç–æ –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ—à–ª–æ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤ —Å–µ—Å—Å–∏–∏ - –æ—Ç–≤–µ—á–∞–µ–º –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º
  if (isQuestionAboutPast && hasSessionImages) {
    SmartLogger.brain(`–û–ë–ù–ê–†–£–ñ–ï–ù –í–û–ü–†–û–° –û –ü–†–û–®–õ–û–ú –° –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò –í –°–ï–°–°–ò–ò! –≠—Ç–æ —Ç–æ—á–Ω–æ –ù–ï –≥–µ–Ω–µ—Ä–∞—Ü–∏—è`);
    return {
      category: 'conversation',
      confidence: 98,
      query: userQuery,
      originalQuery: userQuery,
      grammar: grammar,
      context: context,
      smartThreshold: 5, // –æ—á–µ–Ω—å –Ω–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥
      forcedCategory: 'question_about_past_with_context',
      chatContext: chatContext
    };
  } else if (isQuestionAboutPast && !hasSessionImages) {
    SmartLogger.brain('–í–û–ü–†–û–° –û –ü–†–û–®–õ–û–ú –ë–ï–ó –ù–ï–î–ê–í–ù–ò–• –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô - –º–æ–∂–µ—Ç –±—ã—Ç—å –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è');
    // –ü–æ–∑–≤–æ–ª—è–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∞–Ω–∞–ª–∏–∑ —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º –ø–æ—Ä–æ–≥–æ–º –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  }

  // –í—ã—á–∏—Å–ª—è–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  for (const [category, data] of Object.entries(intentCategories)) {
    let matches = 0;
    let negativeMatches = 0;
    let totalKeywords = data.keywords.length;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    for (const keyword of data.keywords) {
      if (query.includes(keyword)) {
        matches++;
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã (–∏—Å–∫–ª—é—á–µ–Ω–∏—è)
    for (const negativePattern of data.negativePatterns) {
      if (query.includes(negativePattern)) {
        negativeMatches++;
        SmartLogger.brain(`–ù–∞–π–¥–µ–Ω –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è ${category}: "${negativePattern}"`);
      }
    }

    // –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (–í–´–°–®–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢)
    if (category === 'image_analysis') {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      if (data.requiresContext && data.contextCheck) {
        const hasRequiredContext = data.contextCheck();
        if (!hasRequiredContext) {
          // –ï—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ - –æ–±–Ω—É–ª—è–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
          SmartLogger.brain(`[–ê–ù–ê–õ–ò–ó] –ù–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –∞–Ω–∞–ª–∏–∑ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω`);
          data.confidence = 0;
          continue;
        } else {
          SmartLogger.brain(`[–ê–ù–ê–õ–ò–ó] –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∞–Ω–∞–ª–∏–∑—É`);
          // –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –±–æ–Ω—É—Å –∑–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –∫–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏–∑–∞
          matches += 15; // –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ï —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
          data.confidence += 95; // –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –±–æ–Ω—É—Å –∫ –±–∞–∑–æ–≤–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏–∑–∞
          if (query.includes('–ø–æ–¥—Ä–æ–±–Ω–µ–µ') || query.includes('–¥–µ—Ç–∞–ª—å–Ω–æ') || query.includes('–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π')) {
            data.confidence += 30; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –±–æ–Ω—É—Å –∑–∞ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
            SmartLogger.brain(`[–ê–ù–ê–õ–ò–ó] –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç`);
          }
        }
      }
    }

    // –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê –î–õ–Ø –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô
    if (category === 'image_editing') {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      if (data.requiresContext && data.contextCheck) {
        const hasRequiredContext = data.contextCheck();
        if (!hasRequiredContext) {
          // –ï—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ - —Å–∏–ª—å–Ω–æ —Å–Ω–∏–∂–∞–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
          SmartLogger.brain(`[–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï] –ù–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - —Å–Ω–∏–∂–∞–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å`);
          data.confidence = 0;
          continue;
        } else {
          SmartLogger.brain(`[–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï] –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –ø—Ä–∏–º–µ–Ω—è–µ–º –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ô –±–æ–Ω—É—Å`);
          // –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –±–æ–Ω—É—Å –∑–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –∫–æ–º–∞–Ω–¥—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          matches += 10; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
          data.confidence += 80; // –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ô –±–æ–Ω—É—Å –∫ –±–∞–∑–æ–≤–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–∞
          if (query.includes('–≥–ª–∞–∑–∞') && (query.includes('–∫—Ä–∞—Å–Ω') || query.includes('—Ü–≤–µ—Ç'))) {
            data.confidence += 20; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –±–æ–Ω—É—Å –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É
            SmartLogger.brain(`[–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï] –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –≥–ª–∞–∑ - –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç`);
          }
        }
      }
    }

    // –ë–∞–∑–æ–≤–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –æ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
    data.confidence = matches > 0 ? (matches / totalKeywords) * 100 : 0;

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —à—Ç—Ä–∞—Ñ—ã –∑–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
    if (negativeMatches > 0) {
      // –£–º–µ—Ä–µ–Ω–Ω—ã–π —à—Ç—Ä–∞—Ñ –≤–º–µ—Å—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ
      const basePenalty = Math.min(negativeMatches * 25, 60); // –ú–∞–∫—Å–∏–º—É–º 60% —à—Ç—Ä–∞—Ñ
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —à—Ç—Ä–∞—Ñ–∞
      let adjustedPenalty = basePenalty;
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –º–Ω–æ–≥–æ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, —É–º–µ–Ω—å—à–∞–µ–º —à—Ç—Ä–∞—Ñ
      if (matches >= 2) {
        adjustedPenalty = basePenalty * 0.6; // –°–Ω–∏–∂–∞–µ–º —à—Ç—Ä–∞—Ñ –Ω–∞ 40%
        SmartLogger.brain(`–°–Ω–∏–∂–µ–Ω —à—Ç—Ä–∞—Ñ –±–ª–∞–≥–æ–¥–∞—Ä—è ${matches} –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º`);
      }
      
      // –î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –±–æ–ª–µ–µ –º—è–≥–∫–∏–µ —à—Ç—Ä–∞—Ñ—ã
      if (category === 'image_analysis' && hasSessionImages) {
        adjustedPenalty = basePenalty * 0.4; // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        SmartLogger.brain(`–ú—è–≥–∫–∏–π —à—Ç—Ä–∞—Ñ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞`);
      }
      
      data.confidence = Math.max(0, data.confidence - adjustedPenalty);
      SmartLogger.brain(`–ü—Ä–∏–º–µ–Ω–µ–Ω —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —à—Ç—Ä–∞—Ñ ${adjustedPenalty.toFixed(1)}% –∑–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category}`);
    }

    // –ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
    if (matches > 0) {
      // –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      if (category === 'image_generation') {
        if (grammar.isQuestion && grammar.tense === 'past' && hasSessionImages) {
          // "—á—Ç–æ —Ç—ã —Å–æ–∑–¥–∞–ª?" + –µ—Å—Ç—å –Ω–µ–¥–∞–≤–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è = —Å–Ω–∏–∂–∞–µ–º, –Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏
          data.confidence = Math.max(10, data.confidence - 50); // –û—Å—Ç–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º—É–º 10%
          SmartLogger.brain('–£–º–µ—Ä–µ–Ω–Ω—ã–π —à—Ç—Ä–∞—Ñ: –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ—à–ª–æ–º + –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: -50%');
        } else if (grammar.isQuestion && grammar.tense === 'past') {
          // "—á—Ç–æ —Ç—ã —Å–æ–∑–¥–∞–ª?" –±–µ–∑ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –ª–µ–≥–∫–∏–π —à—Ç—Ä–∞—Ñ
          data.confidence = Math.max(15, data.confidence - 25);
          SmartLogger.brain('–õ–µ–≥–∫–∏–π —à—Ç—Ä–∞—Ñ –∑–∞ –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ—à–ª–æ–º –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: -25%');
        } else if (grammar.isQuestion && hasRecentImages && !query.includes('—Å–æ–∑–¥–∞–π') && !query.includes('–Ω–∞—Ä–∏—Å—É–π')) {
          // –í–æ–ø—Ä–æ—Å –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –Ω–æ –ë–ï–ó –∫–æ–º–∞–Ω–¥ —Å–æ–∑–¥–∞–Ω–∏—è
          data.confidence = Math.max(5, data.confidence - 35);
          SmartLogger.brain('–£–º–µ—Ä–µ–Ω–Ω—ã–π —à—Ç—Ä–∞—Ñ –∑–∞ —á–∏—Å—Ç—ã–π –≤–æ–ø—Ä–æ—Å –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: -35%');
        } else if (grammar.isCommand && !grammar.isQuestion) {
          // –ß–µ—Ç–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ - –≤—Å–µ–≥–¥–∞ –±–æ–Ω—É—Å
          const bonus = hasRecentImages ? 25 : 35;
          data.confidence += bonus;
          SmartLogger.brain(`–ë–æ–Ω—É—Å –∑–∞ —á–µ—Ç–∫—É—é –∫–æ–º–∞–Ω–¥—É: +${bonus}%`);
        }
      }

      // –û–±—â–∏–µ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –±–æ–Ω—É—Å—ã
      if (matches > 0) {
        // –ë–æ–Ω—É—Å –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
        data.confidence += Math.min(matches * 15, 60);

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –±–æ–Ω—É—Å –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if (category === 'web_search' && matches >= 1) {
          data.confidence += 30;
        }

        // –ë–æ–Ω—É—Å –∑–∞ –¥–ª–∏–Ω—É —Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        const totalMatchLength = data.keywords
          .filter(keyword => query.includes(keyword))
          .reduce((sum, keyword) => sum + keyword.length, 0);

        if (totalMatchLength > 10) {
          data.confidence += 20;
        }
      }
    }

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
    data.confidence = Math.min(100, Math.max(0, data.confidence));
  }

  // –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å –Ω–∞–∏–≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é
  let bestCategory = 'conversation';
  let bestScore = 0;
  let bestConfidence = 0;

  for (const [category, data] of Object.entries(intentCategories)) {
    const score = data.priority * (1 + data.confidence / 100);
    if (score > bestScore && data.confidence > 0) {
      bestScore = score;
      bestCategory = category;
      bestConfidence = data.confidence;
    }
  }

  // –°–ò–°–¢–ï–ú–ê –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø: –µ—Å–ª–∏ –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã —à—Ç—Ä–∞—Ñ–∞–º–∏
  if (bestConfidence === 0 || bestScore === 0) {
    SmartLogger.brain('–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã —à—Ç—Ä–∞—Ñ–∞–º–∏, –ø—Ä–∏–º–µ–Ω—è—é —Å–∏—Å—Ç–µ–º—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è');
    
    // –ò—â–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –¥–æ —à—Ç—Ä–∞—Ñ–æ–≤
    let recoveryCategory = 'conversation';
    let maxMatches = 0;
    
    for (const [category, data] of Object.entries(intentCategories)) {
      const matches = data.keywords.filter(keyword => query.includes(keyword)).length;
      if (matches > maxMatches) {
        maxMatches = matches;
        recoveryCategory = category;
      }
    }
    
    if (maxMatches > 0) {
      bestCategory = recoveryCategory;
      bestConfidence = Math.min(maxMatches * 15, 40); // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
      SmartLogger.brain(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è ${recoveryCategory} —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é ${bestConfidence}%`);
    }
  }

  // –í—ã—á–∏—Å–ª—è–µ–º —É–º–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const smartThreshold = calculateSmartThreshold(grammar, context, bestCategory);

  SmartLogger.brain(`–õ—É—á—à–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${bestCategory} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${bestConfidence}%, –ø–æ—Ä–æ–≥: ${smartThreshold}%)`);

  // –ï—Å–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –Ω–∏–∂–µ —É–º–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º AI –∞–Ω–∞–ª–∏–∑
  if (bestScore === 0 || bestConfidence < smartThreshold) {
    SmartLogger.brain(`–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ${bestConfidence}% –Ω–∏–∂–µ –ø–æ—Ä–æ–≥–∞ ${smartThreshold}%, –∏—Å–ø–æ–ª—å–∑—É–µ–º AI –∞–Ω–∞–ª–∏–∑`);
    bestCategory = await analyzeWithAI(userQuery);
    bestConfidence = 50; // –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è AI –∞–Ω–∞–ª–∏–∑–∞
  }

  SmartLogger.brain(`–§–∏–Ω–∞–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${bestCategory} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${bestConfidence}%)`);

  // ========== –û–ë–û–ì–ê–©–ï–ù–ò–ï –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ò–ú–ò –î–ê–ù–ù–´–ú–ò (–ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–ù–û–ï) ==========
  let enhancedResult = {
    category: bestCategory,
    confidence: bestConfidence,
    query: userQuery,
    originalQuery: userQuery,
    grammar: grammar,
    context: context,
    emotional: emotional,
    smartThreshold: smartThreshold,
    chatContext: chatContext,
    hasRecentImages: hasRecentImages,
    userName: userName
  };

  // –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
  if (semanticContext && !semanticContext.error) {
    SmartLogger.brain(`üîó –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –∞–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π`);
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤–ª–∏—è—é—Ç –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—é
    const semanticCluster = semanticContext.semantic_analysis?.semantic_cluster;
    if (semanticCluster && semanticCluster.confidence > 60) {
      const semanticCategory = this.mapSemanticClusterToCategory(semanticCluster.name);
      if (semanticCategory && semanticContext.confidence > bestConfidence + 15) {
        SmartLogger.brain(`üéØ –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–û–ï –ü–ï–†–ï–û–ü–†–ï–î–ï–õ–ï–ù–ò–ï: ${bestCategory} ‚Üí ${semanticCategory}`);
        SmartLogger.brain(`üìä –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${semanticContext.confidence}% > –æ–±—ã—á–Ω–∞—è: ${bestConfidence}%`);
        
        enhancedResult.category = semanticCategory;
        enhancedResult.confidence = semanticContext.confidence;
        enhancedResult.semanticOverride = true;
        enhancedResult.originalCategory = bestCategory;
      }
    }

    // –û–±–æ–≥–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª–Ω—ã–º —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
    enhancedResult.semanticContext = {
      project: semanticContext.current_project,
      predictions: semanticContext.predictions?.slice(0, 3) || [],
      enhanced_prompt: semanticContext.enhanced_prompt,
      confidence: semanticContext.confidence,
      recommendations: semanticContext.system_recommendations || [],
      semantic_cluster: semanticCluster,
      compatibility: semanticContext.compatibility
    };

    // –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
    if (semanticContext.enhanced_prompt && semanticContext.enhanced_prompt !== userQuery) {
      enhancedResult.enhancedQuery = semanticContext.enhanced_prompt;
      enhancedResult.query = semanticContext.enhanced_prompt; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π
      SmartLogger.brain(`‚ú® –ü—Ä–æ–º–ø—Ç –∑–∞–º–µ–Ω–µ–Ω —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º: "${semanticContext.enhanced_prompt.substring(0, 50)}..."`);
    }

    // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —É–º–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ–º–∞–Ω—Ç–∏–∫–∏
    if (semanticContext.confidence > 70) {
      enhancedResult.smartThreshold = Math.max(5, enhancedResult.smartThreshold - 10);
      SmartLogger.brain(`üéØ –£–º–Ω—ã–π –ø–æ—Ä–æ–≥ —Å–Ω–∏–∂–µ–Ω –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏: ${enhancedResult.smartThreshold}%`);
    }
  }

  return enhancedResult;

  return enhancedResult;
}

/**
 * AI-–∞–Ω–∞–ª–∏–∑ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∏–ª–∏ –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
 */
async function analyzeWithAI(userQuery) {
  try {
    const analysisPrompt = `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ –µ–≥–æ —Ç–∏–ø:

–ó–∞–ø—Ä–æ—Å: "${userQuery}"

–í–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∏–ø—ã:
- web_search: –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
- image_generation: –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å/–Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –ù–û–í–û–ï –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
- image_consultation: –µ—Å–ª–∏ –ø—Ä–æ—Å–∏—Ç —Å–æ–≤–µ—Ç, –≤–∞—Ä–∏–∞–Ω—Ç—ã, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –°–£–©–ï–°–¢–í–£–Æ–©–ï–ú–£ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
- vectorization: –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≤–µ–∫—Ç–æ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
- embroidery: –µ—Å–ª–∏ —Å–≤—è–∑–∞–Ω–æ —Å –≤—ã—à–∏–≤–∫–æ–π –∏–ª–∏ —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è –≤—ã—à–∏–≤–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω
- time_date: –µ—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –∏–ª–∏ –¥–∞—Ç—É
- conversation: –µ—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ

–û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º - —Ç–∏–ø–æ–º –∑–∞–ø—Ä–æ—Å–∞.`;

    let pythonProvider;
    try {
      pythonProvider = require('./python_provider_routes.js');
    } catch (error) {
      SmartLogger.brain(`AI –∞–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
      pythonProvider = null;
    }

    const result = pythonProvider ? await pythonProvider.callPythonAI(analysisPrompt, 'Qwen_Qwen_2_72B') : null;

    if (result && typeof result === 'string') {
      const aiCategory = result.trim().toLowerCase();
      if (['web_search', 'image_generation', 'image_consultation', 'vectorization', 'embroidery', 'time_date', 'conversation'].includes(aiCategory)) {
        SmartLogger.brain(`AI –æ–ø—Ä–µ–¥–µ–ª–∏–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ${aiCategory}`);
        return aiCategory;
      }
    }
  } catch (error) {
    SmartLogger.brain(`–û—à–∏–±–∫–∞ AI –∞–Ω–∞–ª–∏–∑–∞: ${error.message}`);
  }

  return 'conversation';
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∞ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–π
 */
async function createActionPlan(intent, options = {}) {
  SmartLogger.plan(`–°–æ–∑–¥–∞—é –ø–ª–∞–Ω –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${intent.category}`);

  const plans = {
    web_search: {
      steps: [
        'search_web',
        'analyze_results', 
        'format_response'
      ],
      description: '–ü–æ–∏—Å–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤'
    },

    image_generation: {
      steps: [
        'optimize_prompt',
        'generate_image',
        'format_response'
      ],
      description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é'
    },

    // –ü–õ–ê–ù: –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    image_analysis: {
      steps: [
        'find_last_image',
        'analyze_image_content',
        'format_detailed_response'
      ],
      description: '–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
    },

    // –ü–õ–ê–ù: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    image_editing: {
      steps: [
        'find_last_image',
        'edit_image',
        'format_response'
      ],
      description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
    },

    vectorization: {
      steps: [
        'find_last_image',
        'vectorize_image',
        'format_response'
      ],
      description: '–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤–µ–∫—Ç–æ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç'
    },

    website_analysis: {
      steps: [
        'extract_url',
        'fetch_website_content',
        'analyze_structure',
        'format_response'
      ],
      description: '–¢–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–µ–±-—Å–∞–π—Ç–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
    },

    embroidery: {
      steps: [
        'find_last_image',
        'convert_to_embroidery',
        'format_response'
      ],
      description: '–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç—ã –¥–ª—è –≤—ã—à–∏–≤–∫–∏'
    },

    time_date: {
      steps: [
        'get_current_time',
        'format_response'
      ],
      description: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–∞—Ç—ã'
    },

    conversation: {
      steps: [
        'generate_conversation_response'
      ],
      description: '–û–±—ã—á–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
    },

    memory_command: {
      steps: [
        'execute_memory_command'
      ],
      description: '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é'
    }
  };

  const plan = plans[intent.category] || plans.conversation;

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ–ª–∂–µ–Ω –ª–∏ –ø–ª–∞–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —É–º–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞
  const shouldExecute = intent.confidence >= (intent.smartThreshold || 15);

  SmartLogger.plan(`–ü–ª–∞–Ω —Å–æ–∑–¥–∞–Ω: ${plan.description}`, { 
    steps: plan.steps, 
    shouldExecute,
    confidence: intent.confidence,
    threshold: intent.smartThreshold 
  });

  return {
    category: intent.category,
    steps: plan.steps,
    description: plan.description,
    shouldExecute: shouldExecute,
    confidence: intent.confidence,
    grammar: intent.grammar,
    context: intent.context,
    emotional: intent.emotional,
    chatContext: intent.chatContext, // –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã
    hasRecentImages: intent.hasRecentImages, // –ò —Ñ–ª–∞–≥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    contextuallyEnhanced: intent.contextuallyEnhanced, // –§–ª–∞–≥ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–æ–≥–æ —É–ª—É—á—à–µ–Ω–∏—è
    originalQuery: intent.originalQuery, // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    query: intent.query, // –í–æ–∑–º–æ–∂–Ω–æ —É–ª—É—á—à–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    userName: intent.userName // –ü–µ—Ä–µ–¥–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  };
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –¥–µ–π—Å—Ç–≤–∏–π
 */
async function executePlan(plan, userQuery, options = {}) {
  SmartLogger.execute(`–í—ã–ø–æ–ª–Ω—è—é –ø–ª–∞–Ω: ${plan.description}`);

  try {
    let result = { success: false, shouldFallback: true };

    // –ü–µ—Ä–µ–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–∫–ª—é—á–∞—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
    const enhancedOptions = {
      ...options,
      emotional: plan.emotional,
      chatContext: plan.chatContext,
      hasRecentImages: plan.hasRecentImages,
      contextuallyEnhanced: plan.contextuallyEnhanced,
      originalQuery: plan.originalQuery,
      query: plan.query || userQuery,
      userName: plan.userName,
      semanticData: options.semanticData || plan.semanticContext, // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤–Ω–µ—à–Ω–∏–º –¥–∞–Ω–Ω—ã–º
      isChoiceExecution: plan.isChoiceExecution,
      userChoice: plan.userChoice
    };

    switch (plan.category) {
      case 'web_search':
        result = await executeWebSearchPlan(userQuery, enhancedOptions);
        break;

      case 'image_generation':
        result = await executeImageGenerationPlan(userQuery, enhancedOptions);
        break;

      case 'image_analysis':
        result = await executeImageAnalysisPlan(userQuery, enhancedOptions);
        break;

      case 'image_editing':
        result = await executeImageEditingPlan(userQuery, enhancedOptions);
        break;

      case 'vectorization':
        result = await executeVectorizationPlan(userQuery, enhancedOptions);
        break;

      case 'website_analysis':
        result = await executeWebsiteAnalysisPlan(userQuery, enhancedOptions);
        break;

      case 'embroidery':
        result = await executeEmbroideryPlan(userQuery, enhancedOptions);
        break;

      case 'time_date':
        result = await executeTimeDatePlan(userQuery, enhancedOptions);
        break;

      case 'conversation':
        result = await executeConversationPlan(userQuery, enhancedOptions);
        break;

      case 'memory_command':
        result = await executeMemoryCommandPlan(plan, userQuery, enhancedOptions);
        break;

      default:
        result = { success: false, shouldFallback: true };
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É—Å–ø–µ—à–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –ø–∞–º—è—Ç—å
    if (result.success) {
      const actionToSave = {
        category: plan.category,
        query: userQuery,
        response: result.response?.substring(0, 200) + '...' || 'Success',
        imageUrl: result.imageUrl || null,
        confidence: plan.confidence,
        grammar: plan.grammar
      };

      actionMemory.saveAction(actionToSave);
    }

    // –û–ë–û–ì–ê–©–ï–ù–ò–ï –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ò–ú–ò –î–ê–ù–ù–´–ú–ò
    if (result.success && semanticAnalysisResult?.semanticResult) {
      SmartLogger.brain(`üîó –û–±–æ–≥–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏`);
      
      const enrichedResult = semanticIntegrationLayer.enrichStandardResponse(
        result, 
        semanticAnalysisResult.semanticResult
      );
      
      if (enrichedResult && enrichedResult !== result) {
        SmartLogger.brain(`‚ú® –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–æ–≥–∞—â–µ–Ω —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏`);
        return enrichedResult;
      }
    }

    return result;
  } catch (error) {
    SmartLogger.execute(`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–ª–∞–Ω–∞: ${error.message}`);
    return { success: false, shouldFallback: true, error: error.message };
  }
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞
 */
async function executeWebSearchPlan(userQuery, options) {
  SmartLogger.execute(`–í—ã–ø–æ–ª–Ω—è—é –≤–µ–±-–ø–æ–∏—Å–∫ –¥–ª—è: "${userQuery}"`);

  const reasons = [];
  reasons.push(`–û–ø—Ä–µ–¥–µ–ª–∏–ª –∑–∞–ø—Ä–æ—Å "${userQuery}" –∫–∞–∫ –ø–æ–∏—Å–∫–æ–≤—ã–π`);

  try {
    let webSearchProvider;
    try {
      const webSearchProviderModule = await import('./web-search-provider.js');
      webSearchProvider = webSearchProviderModule.default || webSearchProviderModule;
    } catch (error) {
      SmartLogger.execute(`–í–µ–±-–ø–æ–∏—Å–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
      return { success: false, shouldFallback: true, reason: `–ü–æ–∏—Å–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}` };
    }

    reasons.push('–ò—Å–ø–æ–ª—å–∑—É—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –≤–µ–±-–ø–æ–∏—Å–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');

    const searchResult = await webSearchProvider.performAdvancedSearch(userQuery, {
      language: 'ru',
      maxResults: 8,
      includeAIProcessing: true
    });

    if (searchResult.success && searchResult.aiProcessedAnswer) {
      let response = searchResult.aiProcessedAnswer;

      reasons.push('AI –æ–±—Ä–∞–±–æ—Ç–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç');

      // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
      if (options.emotional) {
        response = emotionalAnalyzer.generateEmotionalResponse(
          options.emotional, 
          response, 
          'web_search'
        );
        reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${options.emotional.dominantEmotion}`);
      }

      const finalReason = reasons.join(' ‚Üí ');
      SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

      return {
        success: true,
        response: response,
        provider: 'IntelligentWebSearchEmotional',
        category: 'web_search',
        searchUsed: true,
        sources: searchResult.sources?.slice(0, 3) || [],
        emotionalTone: options.emotional?.overallTone || 'neutral',
        reason: finalReason
      };
    }

    reasons.push('–ü–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –ø–µ—Ä–µ—Ö–æ–∂—É –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ª–æ–≥–∏–∫–µ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${reasons.join(' ‚Üí ')}`);
    return { success: false, shouldFallback: true, reason: reasons.join(' ‚Üí ') };
  } catch (error) {
    reasons.push(`–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: ${error.message}`);
    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
    return { success: false, shouldFallback: true, reason: finalReason };
  }
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
async function executeImageGenerationPlan(userQuery, options) {
  SmartLogger.execute(`–í—ã–ø–æ–ª–Ω—è—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è: "${userQuery}"`);

  const reasons = [];
  const sessionId = options.sessionId || 'default';

  // ========== –ì–õ–£–ë–û–ö–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–• ==========
  let enhancedPrompt = userQuery;
  let semanticContext = '';
  let semanticStyle = null;
  
  if (options.semanticData) {
    SmartLogger.execute(`üîó –ì–ª—É–±–æ–∫–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
    
    // –ü–†–ò–û–†–ò–¢–ï–¢ 1: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏ —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    if (options.semanticData.enhanced_prompt && options.semanticData.enhanced_prompt !== userQuery) {
      enhancedPrompt = options.semanticData.enhanced_prompt;
      SmartLogger.execute(`‚ú® –ü—Ä–∏–º–µ–Ω–µ–Ω —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏ —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç: "${enhancedPrompt.substring(0, 50)}..."`);
      reasons.push('–ü—Ä–∏–º–µ–Ω–µ–Ω —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏ –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç');
    }
    
    // –ü–†–ò–û–†–ò–¢–ï–¢ 2: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å –∏–∑ –∫–ª–∞—Å—Ç–µ—Ä–∞
    const semanticCluster = options.semanticData.semantic_cluster;
    if (semanticCluster) {
      switch (semanticCluster.name) {
        case 'branding':
        case 'signage_design':
          semanticStyle = 'print';
          reasons.push('–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å: print (–Ω–∞ –æ—Å–Ω–æ–≤–µ –±—Ä–µ–Ω–¥–∏–Ω–≥–∞)');
          break;
        case 'apparel_design':
          semanticStyle = 'print';
          reasons.push('–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å: print (–Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–¥–µ–∂–¥—ã)');
          break;
        case 'character_design':
          semanticStyle = 'cartoon';
          reasons.push('–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å: cartoon (–Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞)');
          break;
        case 'image_creation':
          semanticStyle = 'realistic';
          reasons.push('–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å: realistic (–Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)');
          break;
      }
    }
    
    // –ü–†–ò–û–†–ò–¢–ï–¢ 3: –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞ —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π
    if (options.semanticData.current_project) {
      const project = options.semanticData.current_project;
      semanticContext = `\n\nüìã **–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞**: ${project.title}`;
      
      if (project.concept) {
        semanticContext += `\nüí° **–ö–æ–Ω—Ü–µ–ø—Ü–∏—è**: ${project.concept}`;
      }
      
      if (project.progress?.goals && project.progress.goals.length > 0) {
        const goals = project.progress.goals.slice(0, 2).join(', ');
        semanticContext += `\nüéØ **–¶–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞**: ${goals}`;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –ø—Ä–æ–µ–∫—Ç–∞ –∫ –ø—Ä–æ–º–ø—Ç—É
      if (project.concept && !enhancedPrompt.includes(project.concept)) {
        enhancedPrompt = `${enhancedPrompt} in the style of ${project.concept}`;
        reasons.push(`–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–∏–ª—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—Ä–æ–º–ø—Ç: ${project.concept}`);
      }
      
      reasons.push(`–î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞: ${project.title}`);
    }
    
    // –ü–†–ò–û–†–ò–¢–ï–¢ 4: –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤
    if (options.semanticData.predictions && options.semanticData.predictions.length > 0) {
      const topPrediction = options.semanticData.predictions[0];
      if (topPrediction.probability > 0.6) {
        semanticContext += `\n\nüîÆ **–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥**: ${topPrediction.description}`;
        reasons.push(`–î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞`);
      }
    }

    // –ü–†–ò–û–†–ò–¢–ï–¢ 5: –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (options.semanticData.recommendations && options.semanticData.recommendations.length > 0) {
      const highPriorityRec = options.semanticData.recommendations.find(r => r.priority === 'high');
      if (highPriorityRec) {
        semanticContext += `\n\n‚ö° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è**: ${highPriorityRec.message}`;
        reasons.push(`–î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞`);
      }
    }
  }

  // ========== –û–ë–†–ê–ë–û–¢–ö–ê –í–´–ë–û–†–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ==========
  if (options.isChoiceExecution && options.originalRequest) {
    SmartLogger.execute(`üéØ [–î–ò–ê–õ–û–ì] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "${options.userChoice}"`);
    SmartLogger.execute(`üìã [–î–ò–ê–õ–û–ì] –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å: "${options.originalRequest}"`);

    reasons.push(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–¥–µ–ª–∞–ª –≤—ã–±–æ—Ä: "${options.userChoice}" –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: "${options.originalRequest}"`);

    // –ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å –≤—ã–±–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let enhancedPrompt = options.originalRequest;

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∏–ª—è
    const userChoice = options.userChoice.toLowerCase();
    let chosenStyle = 'realistic'; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    if (userChoice.includes('–ø—Ä–∏–Ω—Ç') || userChoice.includes('—Ñ—É—Ç–±–æ–ª–∫–∞') || userChoice.includes('–ø–µ—á–∞—Ç')) {
      chosenStyle = 'print';
      enhancedPrompt += ' –≤ —Å—Ç–∏–ª–µ –¥–ª—è –ø–µ—á–∞—Ç–∏ –Ω–∞ —Ç–∫–∞–Ω–∏';
      reasons.push('–û–ø—Ä–µ–¥–µ–ª–µ–Ω —Å—Ç–∏–ª—å "–ø—Ä–∏–Ω—Ç" –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    } else if (userChoice.includes('—Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω') || userChoice.includes('–∞—Ä—Ç–∏—Å—Ç') || userChoice.includes('–∂–∏–≤–æ–ø–∏—Å')) {
      chosenStyle = 'artistic';
      enhancedPrompt += ' –≤ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ';
      reasons.push('–û–ø—Ä–µ–¥–µ–ª–µ–Ω —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    } else if (userChoice.includes('–º—É–ª—å—Ç—è—à–Ω') || userChoice.includes('cartoon') || userChoice.includes('–∞–Ω–∏–º–µ')) {
      chosenStyle = 'cartoon';
      enhancedPrompt += ' –≤ –º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ';
      reasons.push('–û–ø—Ä–µ–¥–µ–ª–µ–Ω –º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π —Å—Ç–∏–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    } else {
      reasons.push('–ò—Å–ø–æ–ª—å–∑—É—é —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Å—Ç–∏–ª—å –∫–∞–∫ –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }

    SmartLogger.execute(`üé® [–î–ò–ê–õ–û–ì] –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç: "${enhancedPrompt}"`);
    SmartLogger.execute(`üñåÔ∏è [–î–ò–ê–õ–û–ì] –í—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å: ${chosenStyle}`);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
    const aiImageGenerator = require('./ai-image-generator.js');
    reasons.push('–ó–∞–ø—É—Å–∫–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –≤—ã–±–æ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

    const imageResult = await aiImageGenerator.generateImage(enhancedPrompt, {
      style: chosenStyle,
      quality: 'high'
    });

    if (imageResult.success && imageResult.imageUrl) {
      reasons.push('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–æ –≤—ã–±–æ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –≤ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å
      try {
        await semanticMemory.addArtifactWithContext(sessionId, {
          type: 'image',
          url: imageResult.imageUrl,
          description: enhancedPrompt,
          style: chosenStyle,
          metadata: {
            original_request: options.originalRequest,
            user_choice: options.userChoice,
            generation_type: 'choice_execution'
          }
        });
        SmartLogger.execute(`üíæ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å –ø—Ä–æ–µ–∫—Ç–∞`);
      } catch (error) {
        SmartLogger.execute(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å: ${error.message}`);
      }

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –≤ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
      sessionMemory.resetDialogueState(sessionId);

      const baseResponse = `‚ú® –°–æ–∑–¥–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –≤–∞—à–µ–º—É –≤—ã–±–æ—Ä—É!

![–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ](${imageResult.imageUrl})

üé® **–°—Ç–∏–ª—å:** ${chosenStyle === 'print' ? '–î–ª—è –ø–µ—á–∞—Ç–∏' : chosenStyle === 'artistic' ? '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π' : chosenStyle === 'cartoon' ? '–ú—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π' : '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π'}
üìê **–†–∞–∑–º–µ—Ä:** 1024x1024
üñºÔ∏è **–ö–∞—á–µ—Å—Ç–≤–æ:** –í—ã—Å–æ–∫–æ–µ

üéØ **–ò—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å:** ${options.originalRequest}
‚úÖ **–í–∞—à –≤—ã–±–æ—Ä:** ${options.userChoice}`;

      let finalResponse = baseResponse + semanticContext;
      if (options.emotional) {
        finalResponse = emotionalAnalyzer.generateEmotionalResponse(
          options.emotional,
          finalResponse,
          'image_generation'
        );
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏
      try {
        const suggestions = await semanticMemory.getProactiveSuggestions(sessionId, {
          hasRecentImages: true,
          lastAction: 'image_generation'
        });

        if (suggestions && suggestions.length > 0) {
          finalResponse += `\n\nüí° **–í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:**\n`;
          suggestions.slice(0, 2).forEach(suggestion => {
            finalResponse += `${suggestion.message}\n`;
          });
        }
      } catch (error) {
        SmartLogger.execute(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${error.message}`);
      }

      const finalReason = reasons.join(' ‚Üí ');
      SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

      return {
        success: true,
        response: finalResponse,
        provider: 'DialogueChoiceImageGeneration',
        category: 'image_generation',
        imageUrl: imageResult.imageUrl,
        style: chosenStyle,
        originalRequest: options.originalRequest,
        userChoice: options.userChoice,
        reason: finalReason
      };
    } else {
      reasons.push('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –≤—ã–±–æ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      sessionMemory.resetDialogueState(sessionId);
      return { success: false, shouldFallback: true, reason: reasons.join(' ‚Üí ') };
    }
  }

  // ========== –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï VS –°–û–ó–î–ê–ù–ò–ï ==========
  
  // –ü–†–û–í–ï–†–Ø–ï–ú –ù–ê–õ–ò–ß–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –í –ö–û–ù–¢–ï–ö–°–¢–ï –ü–ï–†–ï–î isSimpleRequest
  if (hasSessionImages) {
    SmartLogger.execute(`üîç –ù–ê–ô–î–ï–ù–´ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø –í –ö–û–ù–¢–ï–ö–°–¢–ï - –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è`);
    
    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∫–æ–º–∞–Ω–¥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const editingPatterns = [
      '–∏–∑–º–µ–Ω–∏', '–ø–æ–º–µ–Ω—è–π', '—É–±–µ—Ä–∏', '—É–¥–∞–ª–∏', '–¥–æ–±–∞–≤—å', '–≤–∫–ª—é—á–∏', '–¥–æ–±–∞–≤—å —ç—Ñ—Ñ–µ–∫—Ç',
      '–ø–µ—Ä–µ–∫—Ä–∞—Å—å', '–ø–æ–∫—Ä–∞—Å—å', '—Ä–∞—Å–∫—Ä–∞—Å—å', '—Ü–≤–µ—Ç', '—ç—Ñ—Ñ–µ–∫—Ç', '—à—É–º', '—Ü–∏—Ñ—Ä–æ–≤–æ–π —à—É–º',
      '—Ç–µ–∫—Å—Ç—É—Ä–∞', '—É–ª—É—á—à–∏', '–º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–π', '—Å–¥–µ–ª–∞–π', '–ø—Ä–∏–º–µ–Ω–∏'
    ];
    
    const isEditingCommand = editingPatterns.some(pattern => 
      userQuery.toLowerCase().includes(pattern)
    );
    
    if (isEditingCommand) {
      SmartLogger.execute(`‚úÖ –ö–û–ú–ê–ù–î–ê –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –û–ë–ù–ê–†–£–ñ–ï–ù–ê: "${userQuery}"`);
      reasons.push('–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
      
      // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ù–ê–ü–†–ê–í–õ–Ø–ï–ú –ù–ê –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï
      return await executeImageEditingPlan(userQuery, options);
    }
  }

  // ========== –û–ë–´–ß–ù–ê–Ø –õ–û–ì–ò–ö–ê –ì–ï–ù–ï–†–ê–¶–ò–ò ==========
  reasons.push(`–†–∞—Å–ø–æ–∑–Ω–∞–ª –∑–∞–ø—Ä–æ—Å "${userQuery}" –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`);

  try {
    // ========== –ü–†–û–í–ï–†–ö–ê: –ù–£–ñ–ù–´ –õ–ò –í–ê–†–ò–ê–ù–¢–´ –ò–õ–ò –°–†–ê–ó–£ –ì–ï–ù–ï–†–ò–†–û–í–ê–¢–¨ ==========

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –∑–∞–ø—Ä–æ—Å–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞ —Å—Ç–∏–ª—å
    const hasSpecificStyle = userQuery.toLowerCase().includes('–ø—Ä–∏–Ω—Ç') || 
                            userQuery.toLowerCase().includes('—Ñ—É—Ç–±–æ–ª–∫–∞') ||
                            userQuery.toLowerCase().includes('—Ä–µ–∞–ª–∏—Å—Ç–∏—á') ||
                            userQuery.toLowerCase().includes('—Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω') ||
                            userQuery.toLowerCase().includes('–º—É–ª—å—Ç—è—à–Ω') ||
                            userQuery.toLowerCase().includes('cartoon') ||
                            userQuery.toLowerCase().includes('–≤–µ–∫—Ç–æ—Ä–Ω');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—Å—Ç—ã–º –∏ –Ω—É–∂–¥–∞–µ—Ç—Å—è –ª–∏ –≤ —É—Ç–æ—á–Ω–µ–Ω–∏–∏
    const isSimpleRequest = userQuery.split(' ').length <= 5 && !hasSpecificStyle && !hasSessionImages;

    if (isSimpleRequest && !options.isChoiceExecution) {
      SmartLogger.execute(`ü§î [–î–ò–ê–õ–û–ì] –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —Å—Ç–∏–ª—è, –ø—Ä–µ–¥–ª–∞–≥–∞—é –≤–∞—Ä–∏–∞–Ω—Ç—ã`);
      reasons.push('–ó–∞–ø—Ä–æ—Å –ø—Ä–æ—Å—Ç–æ–π, –ø—Ä–µ–¥–ª–∞–≥–∞—é –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');

      // –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
      const baseResponse = `üé® –û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! –í–∏–∂—É, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å: **${userQuery}**

–î–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º —Å—Ç–∏–ª—å –¥–ª—è –Ω–∞–∏–ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:

üñåÔ∏è **–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å:**
1Ô∏è‚É£ **–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π** - —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ, –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
2Ô∏è‚É£ **–î–ª—è –ø–µ—á–∞—Ç–∏** - —è—Ä–∫–∏–π, –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–∏–Ω—Ç–æ–≤ –Ω–∞ —Ç–∫–∞–Ω–∏
3Ô∏è‚É£ **–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π** - —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π, —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π, –∫–∞–∫ –∫–∞—Ä—Ç–∏–Ω–∞
4Ô∏è‚É£ **–ú—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π** - —è—Ä–∫–∏–π, –ø—Ä–æ—Å—Ç–æ–π, –≤ —Å—Ç–∏–ª–µ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤

üí¨ **–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ**: "–ø—Ä–∏–Ω—Ç", "—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π", "—Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π" –∏–ª–∏ "–º—É–ª—å—Ç—è—à–Ω—ã–π"
üéØ **–ò–ª–∏ —Å–∫–∞–∂–∏—Ç–µ**: "—Å–æ–∑–¥–∞–π –ø—Ä–∏–Ω—Ç" / "—Å–¥–µ–ª–∞–π —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ" –∏ —è —Å—Ä–∞–∑—É –ø—Ä–∏—Å—Ç—É–ø–ª—é –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏!`;

      let finalResponse = baseResponse + semanticContext;
      if (options.emotional) {
        finalResponse = emotionalAnalyzer.generateEmotionalResponse(
          options.emotional,
          finalResponse,
          'image_generation'
        );
      }

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞
      sessionMemory.setAwaitingChoice(sessionId, 'image_generation', userQuery, {
        styles: ['realistic', 'print', 'artistic', 'cartoon'],
        responseTime: Date.now()
      });

      reasons.push('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      const finalReason = reasons.join(' ‚Üí ');
      SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

      return {
        success: true,
        response: finalResponse,
        provider: 'DialogueOptionsProvider',
        category: 'image_generation',
        awaitingChoice: true,
        pendingRequest: userQuery,
        reason: finalReason
      };
    }

    SmartLogger.execute(`üéØ [–î–ò–ê–õ–û–ì] –ó–∞–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è –∏–ª–∏ —ç—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ, –≥–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–∞–ø—Ä—è–º—É—é`);
    reasons.push('–ó–∞–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è —Å—Ç–∏–ª—è, –≥–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é');

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
    let enhancedPrompt = userQuery;

    // –ü–†–ò–û–†–ò–¢–ï–¢ 1: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if (options.userName && (userQuery.includes('–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω') || userQuery.includes('—Å –∏–º–µ–Ω–µ–º') || userQuery.includes('–¥–∏–∑–∞–π–Ω'))) {
      enhancedPrompt = userQuery.replace(/—Å –∏–º–µ–Ω–µ–º\s*$/, `—Å –∏–º–µ–Ω–µ–º "${options.userName}"`);
      if (!enhancedPrompt.includes(options.userName)) {
        enhancedPrompt += ` —Å –∏–º–µ–Ω–µ–º "${options.userName}"`;
      }
      reasons.push(`–î–æ–±–∞–≤–ª–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "${options.userName}" –≤ –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏`);
      SmartLogger.execute(`–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞ —Å –∏–º–µ–Ω–µ–º: "${options.userName}"`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–æ —É–ª—É—á—à–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    if (options.contextuallyEnhanced && options.originalQuery !== options.query) {
      enhancedPrompt = options.query; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ —É–ª—É—á—à–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
      reasons.push(`–ò—Å–ø–æ–ª—å–∑—É—é –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–æ —É–ª—É—á—à–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: "${enhancedPrompt.substring(0, 50)}..."`);
      SmartLogger.execute(`–ü—Ä–∏–º–µ–Ω—è—é –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ: "${enhancedPrompt}"`);
    } else if (options.chatContext && options.chatContext.context) {
      // –ò—â–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å
      const contextLines = options.chatContext.context.split('\n');
      let foundImageRequest = '';

      for (let i = contextLines.length - 1; i >= 0; i--) {
        const line = contextLines[i].toLowerCase();
        if (line.includes('—Å–æ–∑–¥–∞–π') || line.includes('–Ω–∞—Ä–∏—Å—É–π') || line.includes('—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π') || 
            line.includes('–ø—Ä–∏–Ω—Ç') || line.includes('–¥–∏–∑–∞–π–Ω')) {
          // –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, –∏–∑–≤–ª–µ–∫–∞–µ–º –µ—ë
          const originalLine = contextLines[i];
          if (originalLine.includes('—Ç–µ—Ö–Ω–æ') || originalLine.includes('–ø–∞–Ω–¥–∞') || 
              originalLine.includes('—Å–∞–º—É—Ä–∞–π') || originalLine.includes('–¥—Ä–∞–∫–æ–Ω') ||
              originalLine.length > userQuery.length * 2) { // –õ—é–±–æ–π –¥–ª–∏–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ
            foundImageRequest = originalLine.replace(/^.*?:\s*/, ''); // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "User:" –∏–ª–∏ "AI:"
            break;
          }
        }
      }

      if (foundImageRequest && foundImageRequest.length > userQuery.length) {
        enhancedPrompt = foundImageRequest;
        reasons.push(`–ò—Å–ø–æ–ª—å–∑—É—é —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –±–µ—Å–µ–¥—ã: "${foundImageRequest.substring(0, 50)}..."`);
        SmartLogger.execute(`–ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –±–µ—Å–µ–¥–µ: "${foundImageRequest}"`);
      }
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º –¥–∞–Ω–Ω—ã–º
    let style = semanticStyle || 'realistic';
    
    if (!semanticStyle) {
      // –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∏–ª—è
      const fullPrompt = enhancedPrompt.toLowerCase();
      if (fullPrompt.includes('–ø—Ä–∏–Ω—Ç') || fullPrompt.includes('—Ñ—É—Ç–±–æ–ª–∫–∞') || fullPrompt.includes('–ª–æ–≥–æ—Ç–∏–ø')) {
        style = 'print';
        reasons.push('–û–ø—Ä–µ–¥–µ–ª–∏–ª —Å—Ç–∏–ª—å "print" –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ (–ø—Ä–∏–Ω—Ç/—Ñ—É—Ç–±–æ–ª–∫–∞/–ª–æ–≥–æ—Ç–∏–ø)');
      } else if (fullPrompt.includes('–º—É–ª—å—Ç—è—à–Ω') || fullPrompt.includes('cartoon')) {
        style = 'cartoon';
        reasons.push('–û–ø—Ä–µ–¥–µ–ª–∏–ª —Å—Ç–∏–ª—å "cartoon" –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤');
      } else if (fullPrompt.includes('—Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω') || fullPrompt.includes('–∞—Ä—Ç–∏—Å—Ç–∏—á')) {
        style = 'artistic';
        reasons.push('–û–ø—Ä–µ–¥–µ–ª–∏–ª —Å—Ç–∏–ª—å "artistic" –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤');
      } else {
        reasons.push('–ò—Å–ø–æ–ª—å–∑—É—é —Å—Ç–∏–ª—å "realistic" –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
      }
    } else {
      SmartLogger.execute(`üé® –ò—Å–ø–æ–ª—å–∑—É—é —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å: ${semanticStyle}`);
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø—Ä–æ–º–ø—Ç–æ–≤ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
    reasons.push('–ü—Ä–∏–º–µ–Ω—è—é —Å–∏—Å—Ç–µ–º—É —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤: –æ—á–∏—Å—Ç–∫–∞ ‚Üí –ø–µ—Ä–µ–≤–æ–¥ ‚Üí –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è');
    const finalPrompt = await promptEnhancer.enhancePrompt(enhancedPrompt, style);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º require –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ CommonJS –º–æ–¥—É–ª—è  
    const aiImageGenerator = require('./ai-image-generator.js');
    reasons.push('–ò—Å–ø–æ–ª—å–∑—É—é AI –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Pollinations.ai');

    const imageResult = await aiImageGenerator.generateImage(finalPrompt, {
      style: style,
      quality: 'high'
    });

    if (imageResult.success && imageResult.imageUrl) {
      reasons.push('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ, —Ñ–æ—Ä–º–∏—Ä—É—é –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏');

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –≤ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å
      try {
        await semanticMemory.addArtifactWithContext(sessionId, {
          type: 'image',
          url: imageResult.imageUrl,
          description: finalPrompt,
          style: style,
          metadata: {
            generation_type: 'direct_generation',
            enhanced_query: options.enhancedQuery || userQuery,
            semantic_context: options.semanticContext?.project?.concept || 'general'
          }
        });
        SmartLogger.execute(`üíæ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å –ø—Ä–æ–µ–∫—Ç–∞`);
      } catch (error) {
        SmartLogger.execute(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å: ${error.message}`);
      }

      let baseResponse = `‚ú® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º! 

![–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ](${imageResult.imageUrl})

üé® **–°—Ç–∏–ª—å:** ${style === 'realistic' ? '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π' : style === 'print' ? '–î–ª—è –ø–µ—á–∞—Ç–∏' : style === 'cartoon' ? '–ú—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π' : '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π'}
üìê **–†–∞–∑–º–µ—Ä:** 1024x1024
üñºÔ∏è **–ö–∞—á–µ—Å—Ç–≤–æ:** –í—ã—Å–æ–∫–æ–µ
üîß **–ü—Ä–æ–º–ø—Ç —É–ª—É—á—à–µ–Ω:** –î–∞

üí° **–ü—Ä–∏–º–µ–Ω–µ–Ω—ã —É–ª—É—á—à–µ–Ω–∏—è:**
‚Ä¢ –û—á–∏—Å—Ç–∫–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤
‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π
‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞

–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–∞–≤–∏—Ç—å.`;

      // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
      if (options.emotional) {
        baseResponse = emotionalAnalyzer.generateEmotionalResponse(
          options.emotional, 
          baseResponse, 
          'image_generation'
        );
        reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${options.emotional.dominantEmotion}`);
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏
      try {
        const suggestions = await semanticMemory.getProactiveSuggestions(sessionId, {
          hasRecentImages: true,
          lastAction: 'image_generation'
        });

        if (suggestions && suggestions.length > 0) {
          baseResponse += `\n\nüí° **–í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:**\n`;
          suggestions.slice(0, 2).forEach(suggestion => {
            baseResponse += `${suggestion.message}\n`;
          });
          reasons.push('–î–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏');
        }
      } catch (error) {
        SmartLogger.execute(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${error.message}`);
      }

      const finalReason = reasons.join(' ‚Üí ');
      SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

      return {
        success: true,
        response: baseResponse,
        provider: 'IntelligentImageGeneratorEnhanced',
        category: 'image_generation',
        imageGenerated: true,
        imageUrl: imageResult.imageUrl,
        enhancedPrompt: finalPrompt,
        originalPrompt: enhancedPrompt,
        contextUsed: enhancedPrompt !== userQuery,
        detectedStyle: style,
        emotionalTone: options.emotional?.overallTone || 'neutral',
        reason: finalReason
      };
    }

    reasons.push('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø–µ—Ä–µ—Ö–æ–∂—É –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ª–æ–≥–∏–∫–µ');
    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
    return { success: false, shouldFallback: true, reason: finalReason };
  } catch (error) {
    reasons.push(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${error.message}`);
    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
    return { success: false, shouldFallback: true, reason: finalReason };
  }
}

/**
 * –°–∏—Å—Ç–µ–º–∞ —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
const promptEnhancer = {
  /**
   * –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤ –∏ –ø–æ–≤—Ç–æ—Ä–æ–≤
   */
  cleanPrompt(prompt) {
    SmartLogger.execute(`–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–º–ø—Ç–∞: "${prompt.substring(0, 50)}..."`);

    let cleaned = prompt.toLowerCase().trim();

    // –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    const generationCommands = [
      '—Å–æ–∑–¥–∞–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–Ω–∞—Ä–∏—Å—É–π', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π', '—Å–¥–µ–ª–∞–π –∫–∞—Ä—Ç–∏–Ω–∫—É',
      '—Å–æ–∑–¥–∞–π –∫–∞—Ä—Ç–∏–Ω–∫—É', '–ø–æ–∫–∞–∂–∏', '–∏–∑–æ–±—Ä–∞–∑–∏', '–Ω–∞—Ä–∏—Å—É–π –º–Ω–µ'
    ];

    generationCommands.forEach(command => {
      cleaned = cleaned.replace(new RegExp(`\\b${command}\\b`, 'gi'), '');
    });

    // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ —Å–ª–æ–≤–∞-–ø–∞—Ä–∞–∑–∏—Ç—ã
    const fillerWords = [
      '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞', '–º–æ–∂–µ—à—å', '—Ö–æ—á—É', '–º–Ω–µ –Ω—É–∂–Ω–æ', '–¥–∞–≤–∞–π',
      '—Å–¥–µ–ª–∞–π —Ç–∞–∫ —á—Ç–æ–±—ã', '—è —Ö–æ—á—É', '–º–Ω–µ –±—ã', '–±—ã–ª–æ –±—ã –Ω–µ–ø–ª–æ—Ö–æ'
    ];

    fillerWords.forEach(filler => {
      cleaned = cleaned.replace(new RegExp(`\\b${filler}\\b`, 'gi'), '');
    });

    // –£–±–∏—Ä–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ "–∏"
    cleaned = cleaned.replace(/\s+–∏\s+–∏\s+/g, ' –∏ ');
    cleaned = cleaned.replace(/\s+–∏\s+–∏\s+/g, ' –∏ ');

    // –£–±–∏—Ä–∞–µ–º –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–ª–æ–≤–∞
    const words = cleaned.split(/\s+/);
    const uniqueWords = [];
    const seenWords = new Set();

    for (const word of words) {
      if (word && word.length > 2 && !seenWords.has(word)) {
        uniqueWords.push(word);
        seenWords.add(word);
      } else if (word && word.length <= 2) {
        uniqueWords.push(word); // –ö–æ—Ä–æ—Ç–∫–∏–µ —Å–ª–æ–≤–∞ –Ω–µ —Ñ–∏–ª—å—Ç—Ä—É–µ–º
      }
    }

    cleaned = uniqueWords.join(' ').trim();

    // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
    cleaned = cleaned.replace(/\s+/g, ' ');
    cleaned = cleaned.replace(/[,;.!?]+/g, ',');
    cleaned = cleaned.replace(/,+/g, ',');
    cleaned = cleaned.replace(/^,|,$/, '');

    SmartLogger.execute(`–ü—Ä–æ–º–ø—Ç –æ—á–∏—â–µ–Ω: "${cleaned}"`);
    return cleaned;
  },

  /**
   * –ü—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ–≤–æ–¥ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
   */
  translateToEnglish(prompt) {
    SmartLogger.execute(`–ü–µ—Ä–µ–≤–æ–¥ –ø—Ä–æ–º–ø—Ç–∞: "${prompt.substring(0, 50)}..."`);

    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–∞
    const translations = {
      // –û–±—ä–µ–∫—Ç—ã –∏ —Å—É—â–µ—Å—Ç–≤–∞
      '–∫–æ—Ç': 'cat', '–∫–æ—Ç–∞': 'cat', '–∫–æ—Ç–∏–∫': 'cute cat', '–∫–æ—Ç–µ–Ω–æ–∫': 'kitten',
      '—Å–æ–±–∞–∫–∞': 'dog', '—Å–æ–±–∞–∫—É': 'dog', '—â–µ–Ω–æ–∫': 'puppy',
      '—á–µ–ª–æ–≤–µ–∫': 'person', '–º—É–∂—á–∏–Ω–∞': 'man', '–∂–µ–Ω—â–∏–Ω–∞': 'woman',
      '–¥–µ–≤—É—à–∫–∞': 'young woman', '–ø–∞—Ä–µ–Ω—å': 'young man',
      '–¥—Ä–∞–∫–æ–Ω': 'dragon', '–¥—Ä–∞–∫–æ–Ω–∞': 'dragon',
      '—Ä–æ–±–æ—Ç': 'robot', '—Ä–æ–±–æ—Ç–∞': 'robot',
      '–º–∞—à–∏–Ω–∞': 'car', '–∞–≤—Ç–æ–º–æ–±–∏–ª—å': 'automobile',
      '–¥–æ–º': 'house', '–∑–¥–∞–Ω–∏–µ': 'building',
      '—Ü–≤–µ—Ç–æ–∫': 'flower', '—Ü–≤–µ—Ç—ã': 'flowers',
      '–¥–µ—Ä–µ–≤–æ': 'tree', '–¥–µ—Ä–µ–≤—å—è': 'trees',
      '—Ä–æ–∑–∞': 'rose', '—Ä–æ–∑—ã': 'roses',

      // –¶–≤–µ—Ç–∞
      '–∫—Ä–∞—Å–Ω—ã–π': 'red', '–∫—Ä–∞—Å–Ω–∞—è': 'red', '–∫—Ä–∞—Å–Ω–æ–µ': 'red',
      '—Å–∏–Ω–∏–π': 'blue', '—Å–∏–Ω—è—è': 'blue', '—Å–∏–Ω–µ–µ': 'blue',
      '–∑–µ–ª–µ–Ω—ã–π': 'green', '–∑–µ–ª–µ–Ω–∞—è': 'green', '–∑–µ–ª–µ–Ω–æ–µ':'green',

      '–∂–µ–ª—Ç—ã–π': 'yellow', '–∂–µ–ª—Ç–∞—è': 'yellow', '–∂–µ–ª—Ç–æ–µ': 'yellow',
      '—á–µ—Ä–Ω—ã–π': 'black', '—á–µ—Ä–Ω–∞—è': 'black', '—á–µ—Ä–Ω–æ–µ': 'black',
      '–±–µ–ª—ã–π': 'white', '–±–µ–ª–∞—è': 'white', '–±–µ–ª–æ–µ': 'white',
      '—Ä–æ–∑–æ–≤—ã–π': 'pink', '—Ä–æ–∑–æ–≤–∞—è': 'pink', '—Ä–æ–∑–æ–≤–æ–µ': 'pink',
      '—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π': 'purple', '—Ñ–∏–æ–ª–µ—Ç–æ–≤–∞—è': 'purple',

      // –°—Ç–∏–ª–∏ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
      '–∫—Ä–∞—Å–∏–≤—ã–π': 'beautiful', '–∫—Ä–∞—Å–∏–≤–∞—è': 'beautiful', '–∫—Ä–∞—Å–∏–≤–æ–µ': 'beautiful',
      '–±–æ–ª—å—à–æ–π': 'large', '–±–æ–ª—å—à–∞—è': 'large', '–±–æ–ª—å—à–æ–µ': 'large',
      '–º–∞–ª–µ–Ω—å–∫–∏–π': 'small', '–º–∞–ª–µ–Ω—å–∫–∞—è': 'small', '–º–∞–ª–µ–Ω—å–∫–æ–µ': 'small',
      '—è—Ä–∫–∏–π': 'bright', '—è—Ä–∫–∞—è': 'bright', '—è—Ä–∫–æ–µ': 'bright',
      '—Ç–µ–º–Ω—ã–π': 'dark', '—Ç–µ–º–Ω–∞—è': 'dark', '—Ç–µ–º–Ω–æ–µ': 'dark',
      '—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π': 'realistic', '—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è': 'realistic',
      '–º—É–ª—å—Ç—è—à–Ω—ã–π': 'cartoon style', '–º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π': 'animated style',

      // –ú–µ—Å—Ç–∞ –∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
      '–ª–µ—Å': 'forest', '–≤ –ª–µ—Å—É': 'in forest',
      '–º–æ—Ä–µ': 'ocean', '—É –º–æ—Ä—è': 'by the ocean',
      '–≥–æ—Ä—ã': 'mountains', '–≤ –≥–æ—Ä–∞—Ö': 'in mountains',
      '–≥–æ—Ä–æ–¥': 'city', '–≤ –≥–æ—Ä–æ–¥–µ': 'in city',
      '–∫–æ—Å–º–æ—Å': 'space', '–≤ –∫–æ—Å–º–æ—Å–µ': 'in space',
      '–Ω–µ–±–æ': 'sky', '–æ–±–ª–∞–∫–∞': 'clouds',

      // –¢–µ—Ö–Ω–∏–∫–∞ –∏ –ø—Ä–µ–¥–º–µ—Ç—ã
      '–ø—Ä–∏–Ω—Ç': 'print design', '–¥–∏–∑–∞–π–Ω': 'design',
      '—Ñ—É—Ç–±–æ–ª–∫–∞': 't-shirt', '–æ–¥–µ–∂–¥–∞': 'clothing',
      '–ª–æ–≥–æ—Ç–∏–ø': 'logo', '—ç–º–±–ª–µ–º–∞': 'emblem',
      '—Å–∞–ø–æ–≥–∏': 'boots', '–≤ —Å–∞–ø–æ–≥–∞—Ö': 'wearing boots',

      // –î–µ–π—Å—Ç–≤–∏—è –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      '—Å—Ç–æ–∏—Ç': 'standing', '—Å–∏–¥–∏—Ç': 'sitting',
      '–ª–µ—Ç–∏—Ç': 'flying', '–±–µ–∂–∏—Ç': 'running',
      '—É–ª—ã–±–∞–µ—Ç—Å—è': 'smiling', '–≥—Ä—É—Å—Ç–Ω—ã–π': 'sad',

      // –ö–∞—á–µ—Å—Ç–≤–æ –∏ –¥–µ—Ç–∞–ª–∏
      '–¥–µ—Ç–∞–ª—å–Ω–æ': 'detailed', '–¥–µ—Ç–∞–ª—å–Ω—ã–π': 'highly detailed',
      '–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ': 'high quality', '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ': 'professional',
      '—á–µ—Ç–∫–æ': 'sharp', '—á–µ—Ç–∫–∏–π': 'sharp and clear'
    };

    let translated = prompt;

    // –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ —Å–ª–æ–≤–∞—Ä—é (—Å–Ω–∞—á–∞–ª–∞ –¥–ª–∏–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã, –ø–æ—Ç–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ)
    const sortedTranslations = Object.entries(translations)
      .sort(([a], [b]) => b.length - a.length);

    for (const [russian, english] of sortedTranslations) {
      const regex = new RegExp(`\\b${russian}\\b`, 'gi');
      translated = translated.replace(regex, english);
    }

    SmartLogger.execute(`–ü—Ä–æ–º–ø—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω: "${translated}"`);
    return translated;
  },

  /**
   * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π –∏ —É–ª—É—á—à–µ–Ω–∏–π
   */
  addEnhancements(prompt, style = 'realistic') {
    SmartLogger.execute(`–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π –∫ –ø—Ä–æ–º–ø—Ç—É, —Å—Ç–∏–ª—å: ${style}`);

    let enhanced = prompt;

    // –ë–∞–∑–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞
    const qualityEnhancements = [
      'high quality', 'detailed', 'sharp focus', 'well-lit'
    ];

    // –°—Ç–∏–ª–µ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    const styleEnhancements = {
      realistic: [
        'photorealistic', 'hyperrealistic', 'professional photography',
        'studio lighting', 'natural colors', 'lifelike details'
      ],
      cartoon: [
        'cartoon style', 'animated', 'colorful', 'clean lines',
        'vibrant colors', 'stylized'
      ],
      artistic: [
        'artistic', 'creative', 'expressive', 'aesthetic',
        'beautiful composition', 'artistic lighting'
      ],
      print: [
        'vector style', 'clean lines', 'bold colors', 
        'print-ready', 'high contrast', 'simple shapes'
      ]
    };

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    let detectedStyle = style;
    if (prompt.includes('print') || prompt.includes('t-shirt') || prompt.includes('logo')) {
      detectedStyle = 'print';
    } else if (prompt.includes('cartoon') || prompt.includes('animated')) {
      detectedStyle = 'cartoon';
    } else if (prompt.includes('art') || prompt.includes('creative')) {
      detectedStyle = 'artistic';
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —É–ª—É—á—à–µ–Ω–∏—è
    const selectedEnhancements = [
      ...qualityEnhancements,
      ...(styleEnhancements[detectedStyle] || styleEnhancements.realistic)
    ];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–ª—É—á—à–µ–Ω–∏—è –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã
    const missingEnhancements = selectedEnhancements.filter(enhancement => 
      !enhanced.toLowerCase().includes(enhancement.toLowerCase())
    );

    if (missingEnhancements.length > 0) {
      enhanced = `${enhanced}, ${missingEnhancements.slice(0, 4).join(', ')}`;
    }

    SmartLogger.execute(`–ü—Ä–æ–º–ø—Ç —É–ª—É—á—à–µ–Ω: "${enhanced.substring(0, 100)}..."`);
    return enhanced;
  },

  /**
   * –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–º–ø—Ç–∞
   */
  async enhancePrompt(userQuery, style = 'realistic') {
    SmartLogger.execute(`=== –ù–ê–ß–ê–õ–û –£–õ–£–ß–®–ï–ù–ò–Ø –ü–†–û–ú–ü–¢–ê ===`);
    SmartLogger.execute(`–ò—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å: "${userQuery}"`);

    try {
      // –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞
      let processed = this.cleanPrompt(userQuery);

      // –®–∞–≥ 2: –ü–µ—Ä–µ–≤–æ–¥
      processed = this.translateToEnglish(processed);

      // –®–∞–≥ 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π
      processed = this.addEnhancements(processed, style);

      // –®–∞–≥ 4: AI-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
      try {
        const aiOptimized = await this.getAIOptimization(processed, style);
        if (aiOptimized && aiOptimized.length > processed.length) {
          processed = aiOptimized;
          SmartLogger.execute(`AI –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞`);
        }
      } catch (aiError) {
        SmartLogger.execute(`AI –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: ${aiError.message}`);
      }

      // –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
      processed = processed.replace(/\s+/g, ' ').trim();
      processed = processed.replace(/,+/g, ',');
      processed = processed.replace(/^,|,$/, '');

      SmartLogger.execute(`=== –ü–†–û–ú–ü–¢ –£–õ–£–ß–®–ï–ù ===`);
      SmartLogger.execute(`–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: "${processed}"`);

      return processed;
    } catch (error) {
      SmartLogger.execute(`–û—à–∏–±–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞: ${error.message}`);
      return userQuery; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }
  },

  /**
   * AI-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è)
   */
  async getAIOptimization(prompt, style) {
    const optimizationPrompt = `Improve this image generation prompt for ${style} style:

"${prompt}"

Make it more detailed and specific for AI image generation. Focus on:
- Visual composition and framing
- Lighting and atmosphere  
- Colors and mood
- Technical quality

Return only the improved prompt, no explanations.`;

    let pythonProvider;
    try {
      const pythonProviderModule = await import('./python_provider_routes.js');
      pythonProvider = pythonProviderModule.default || pythonProviderModule;
    } catch (error) {
      SmartLogger.execute(`AI –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: ${error.message}`);
      return prompt; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–º–ø—Ç –µ—Å–ª–∏ AI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    }

    const result = pythonProvider ? await pythonProvider.callPythonAI(optimizationPrompt, 'Qwen_Qwen_2_72B') : null;

    if (result && typeof result === 'string') {
      return result.trim();
    }

    throw new Error('AI optimization failed');
  }
};

/**
 * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
async function optimizeImagePrompt(userQuery) {
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤
    const enhanced = await promptEnhancer.enhancePrompt(userQuery, 'realistic');
    SmartLogger.execute(`–ü—Ä–æ–º–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω: ${enhanced.substring(0, 100)}...`);
    return enhanced;
  } catch (error) {
    SmartLogger.execute(`–û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–º–ø—Ç–∞: ${error.message}`);
    return userQuery;
  }
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
async function executeImageAnalysisPlan(userQuery, options) {
  SmartLogger.execute(`–í—ã–ø–æ–ª–Ω—è—é –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è: "${userQuery}"`);

  const reasons = [];
  const sessionId = options.sessionId || 'default';

  reasons.push(`–†–∞—Å–ø–æ–∑–Ω–∞–ª –∑–∞–ø—Ä–æ—Å "${userQuery}" –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`);

  try {
    // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —á–∞—Ç–∞
    const lastImageInfo = findLastImageInContext(options.chatContext);
    
    let lastImageUrl = null;
    let lastImageDescription = '';

    if (lastImageInfo) {
      lastImageUrl = lastImageInfo.url;
      lastImageDescription = lastImageInfo.description;
      reasons.push(`–ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ${lastImageDescription}`);
    }

    if (!lastImageUrl) {
      reasons.push('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      let response = '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤ —Ç–µ–∫—É—â–µ–π –±–µ—Å–µ–¥–µ. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∑–∞—Ç–µ–º —è —Å–º–æ–≥—É –µ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å.';

      // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
      if (options.emotional) {
        response = emotionalAnalyzer.generateEmotionalResponse(
          options.emotional, 
          response, 
          'image_analysis'
        );
        reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é: ${options.emotional.dominantEmotion}`);
      }

      const finalReason = reasons.join(' ‚Üí ');
      return { 
        success: true, 
        response: response,
        provider: 'IntelligentImageAnalyzer',
        category: 'image_analysis',
        reason: finalReason
      };
    }

    reasons.push('–ó–∞–ø—É—Å–∫–∞—é –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ AI Vision');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    let imageAnalyzer;
    try {
      imageAnalyzer = require('./advanced-image-analyzer.js');
    } catch (error) {
      SmartLogger.execute(`–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
      reasons.push('–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç');
      
      let response = `üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${lastImageDescription}

üì∑ **–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ**: –î–∞
üîó **URL**: ${lastImageUrl}
üìã **–û–ø–∏—Å–∞–Ω–∏–µ**: ${lastImageDescription}

‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤ –±–µ—Å–µ–¥–µ.

üí° **–ß—Ç–æ —è –≤–∏–∂—É**: –≠—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ —Ä–∞–Ω–µ–µ –≤ –Ω–∞—à–µ–π –±–µ—Å–µ–¥–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º "${lastImageDescription}".`;

      if (options.emotional) {
        response = emotionalAnalyzer.generateEmotionalResponse(
          options.emotional, 
          response, 
          'image_analysis'
        );
      }

      const finalReason = reasons.join(' ‚Üí ');
      return {
        success: true,
        response: response,
        provider: 'IntelligentImageAnalyzerBasic',
        category: 'image_analysis',
        imageUrl: lastImageUrl,
        reason: finalReason
      };
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    const analysisResult = await imageAnalyzer.analyzeImageAdvanced(lastImageUrl, {
      includeObjects: true,
      includeColors: true,
      includeComposition: true,
      language: 'ru'
    });

    if (analysisResult.success) {
      reasons.push('–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');

      let response = `üîç **–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è**

![–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ](${lastImageUrl})

${analysisResult.response}

üìã **–ò—Å—Ö–æ–¥–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ**: ${lastImageDescription}
üîó **–ò—Å—Ç–æ—á–Ω–∏–∫**: –°–æ–∑–¥–∞–Ω–æ –≤ —Ç–µ–∫—É—â–µ–π –±–µ—Å–µ–¥–µ
ü§ñ **–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä**: ${analysisResult.provider}

üí° **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏**: –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏—Ç–µ —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–∏–∑–º–µ–Ω–∏ —Ü–≤–µ—Ç –≥–ª–∞–∑ –Ω–∞ –≥–æ–ª—É–±–æ–π").`;

      // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
      if (options.emotional) {
        response = emotionalAnalyzer.generateEmotionalResponse(
          options.emotional, 
          response, 
          'image_analysis'
        );
        reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é: ${options.emotional.dominantEmotion}`);
      }

      const finalReason = reasons.join(' ‚Üí ');
      SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

      return {
        success: true,
        response: response,
        provider: 'IntelligentImageAnalyzerAdvanced',
        category: 'image_analysis',
        imageUrl: lastImageUrl,
        analysisData: analysisResult.analysisData,
        emotionalTone: options.emotional?.overallTone || 'neutral',
        reason: finalReason
      };
    }

    reasons.push('–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ —É–¥–∞–ª—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç');
    let response = `üîç **–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è**

![–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ](${lastImageUrl})

üì∑ **–ù–∞–π–¥–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ**: ${lastImageDescription}
üîó **URL**: ${lastImageUrl}

üìã **–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑**: –≠—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ –≤ –Ω–∞—à–µ–π –±–µ—Å–µ–¥–µ. –î–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å–∏—Å—Ç–µ–º—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.

üí° –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è.`;

    if (options.emotional) {
      response = emotionalAnalyzer.generateEmotionalResponse(
        options.emotional, 
        response, 
        'image_analysis'
      );
    }

    const finalReason = reasons.join(' ‚Üí ');
    return {
      success: true,
      response: response,
      provider: 'IntelligentImageAnalyzerFallback',
      category: 'image_analysis',
      imageUrl: lastImageUrl,
      reason: finalReason
    };

  } catch (error) {
    reasons.push(`–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: ${error.message}`);
    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
    return { success: false, shouldFallback: true, reason: finalReason };
  }
}

/**
 * –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —á–∞—Ç–∞
 */
function findLastImageInContext(chatContext) {
  if (!chatContext || !chatContext.context) {
    SmartLogger.execute(`‚ùå –ö–æ–Ω—Ç–µ–∫—Å—Ç —á–∞—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
    return null;
  }

  const context = chatContext.context;
  SmartLogger.execute(`üîç –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ (${context.length} —Å–∏–º–≤–æ–ª–æ–≤)`);

  // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ Pollinations.ai
  const pollinationsMatches = context.match(/https:\/\/image\.pollinations\.ai\/prompt\/[^\s\)]+/g);
  if (pollinationsMatches && pollinationsMatches.length > 0) {
    const lastUrl = pollinationsMatches[pollinationsMatches.length - 1];
    SmartLogger.execute(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ Pollinations: ${lastUrl.substring(0, 80)}...`);
    
    // –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ URL
    try {
      const promptMatch = lastUrl.match(/prompt\/([^?]+)/);
      const description = promptMatch ? decodeURIComponent(promptMatch[1]) : '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ';
      
      return {
        url: lastUrl,
        description: description,
        source: 'pollinations'
      };
    } catch (error) {
      return {
        url: lastUrl,
        description: '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        source: 'pollinations'
      };
    }
  }

  // –ò—â–µ–º markdown –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const markdownMatches = context.match(/!\[([^\]]*)\]\(([^\)]+)\)/g);
  if (markdownMatches && markdownMatches.length > 0) {
    const lastMatch = markdownMatches[markdownMatches.length - 1];
    const urlMatch = lastMatch.match(/!\[([^\]]*)\]\(([^\)]+)\)/);
    if (urlMatch) {
      SmartLogger.execute(`‚úÖ –ù–∞–π–¥–µ–Ω–æ markdown –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${urlMatch[2]}`);
      return {
        url: urlMatch[2],
        description: urlMatch[1] || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        source: 'markdown'
      };
    }
  }

  SmartLogger.execute(`‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
  return null;
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
async function executeImageEditingPlan(userQuery, options) {
  SmartLogger.execute(`–í—ã–ø–æ–ª–Ω—è—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è: "${userQuery}"`);

  const reasons = [];
  const sessionId = options.sessionId || 'default';

  reasons.push(`–†–∞—Å–ø–æ–∑–Ω–∞–ª –∑–∞–ø—Ä–æ—Å "${userQuery}" –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`);

  try {
    // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —á–∞—Ç–∞
    const lastImageInfo = findLastImageInContext(options.chatContext);
    
    let lastImageUrl = null;
    let lastImageDescription = '';

    if (lastImageInfo) {
      lastImageUrl = lastImageInfo.url;
      lastImageDescription = lastImageInfo.description;
      reasons.push(`–ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${lastImageDescription}`);
    }

    if (!lastImageUrl) {
      reasons.push('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      const finalReason = reasons.join(' ‚Üí ');
      return { 
        success: true, 
        response: '‚ùå –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞–∑–∞—Ç—å "—Å–æ–∑–¥–∞–π [–æ–ø–∏—Å–∞–Ω–∏–µ]" –∏ –ø–æ—Ç–æ–º —è —Å–º–æ–≥—É –µ–≥–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.',
        provider: 'IntelligentImageEditor',
        reason: finalReason
      };
    }

    reasons.push('–ó–∞–ø—É—Å–∫–∞—é —Å–∏—Å—Ç–µ–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');

    // –ü–†–ò–û–†–ò–¢–ï–¢ 1: –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    try {
      const advancedImageEditor = require('./advanced-image-editor.js');
      SmartLogger.execute(`üîß –ü—Ä–æ–±—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–ª—è: "${userQuery}"`);
      
      const editResult = await advancedImageEditor.processAdvancedEdit(lastImageUrl, userQuery);
      
      if (editResult.success) {
        reasons.push('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
        
        let response = `üé® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞!

![–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ](${editResult.imageUrl})

üîß **–û–ø–µ—Ä–∞—Ü–∏—è:** ${editResult.type}
üìù **–û–ø–∏—Å–∞–Ω–∏–µ:** ${editResult.message || editResult.description}
üì∏ **–û—Å–Ω–æ–≤–∞:** ${lastImageDescription}
üõ†Ô∏è **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è:** ${editResult.provider || 'Advanced Image Editor'}

üí° **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞:**
‚Ä¢ –¢–æ—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –∏ —Ç–µ–∫—Å—Ç—É—Ä  
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
‚Ä¢ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤

–ï—Å–ª–∏ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏, –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å!`;

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
        if (options.emotional) {
          response = emotionalAnalyzer.generateEmotionalResponse(
            options.emotional, 
            response, 
            'image_editing'
          );
          reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é: ${options.emotional.dominantEmotion}`);
        }

        const finalReason = reasons.join(' ‚Üí ');
        SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

        return {
          success: true,
          response: response,
          provider: 'AdvancedImageEditor',
          category: 'image_editing',
          editedImageUrl: editResult.imageUrl,
          originalImageUrl: lastImageUrl,
          editCommand: userQuery,
          editType: editResult.type,
          emotionalTone: options.emotional?.overallTone || 'neutral',
          reason: finalReason
        };
      }
    } catch (error) {
      SmartLogger.execute(`‚ö†Ô∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
      reasons.push('–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã');
    }

    // –ü–†–ò–û–†–ò–¢–ï–¢ 2: –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    try {
      const realImageEditor = require('./real-image-editor.cjs');
      SmartLogger.execute(`üîß –ü—Ä–æ–±—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–ª—è: "${userQuery}"`);
      
      const editResult = await realImageEditor.editImageReally(lastImageUrl, userQuery, null);
      
      if (editResult.success) {
        reasons.push('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
        
        let response = `üé® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞!

![–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ](${editResult.imageUrl})

üîß **–û–ø–µ—Ä–∞—Ü–∏—è:** ${editResult.editType}
üìù **–û–ø–∏—Å–∞–Ω–∏–µ:** ${editResult.description}
üì∏ **–û—Å–Ω–æ–≤–∞:** ${lastImageDescription}
üõ†Ô∏è **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è:** Real Image Editor (Sharp.js)

üí° **–†–µ–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∏–∫—Å–µ–ª–µ–π:**
‚Ä¢ –ü—Ä—è–º–∞—è —Ä–∞–±–æ—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
‚Ä¢ –¢–æ—á–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

–ï—Å–ª–∏ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏, –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å!`;

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
        if (options.emotional) {
          response = emotionalAnalyzer.generateEmotionalResponse(
            options.emotional, 
            response, 
            'image_editing'
          );
          reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é: ${options.emotional.dominantEmotion}`);
        }

        const finalReason = reasons.join(' ‚Üí ');
        SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

        return {
          success: true,
          response: response,
          provider: 'RealImageEditor',
          category: 'image_editing',
          editedImageUrl: editResult.imageUrl,
          originalImageUrl: lastImageUrl,
          editCommand: userQuery,
          editType: editResult.editType,
          emotionalTone: options.emotional?.overallTone || 'neutral',
          reason: finalReason
        };
      }
    } catch (error) {
      SmartLogger.execute(`‚ö†Ô∏è –†–µ–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
      reasons.push('–†–µ–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ AI –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—É');
    }

    // FALLBACK: –ò—Å–ø–æ–ª—å–∑—É–µ–º AI –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    reasons.push('–ò—Å–ø–æ–ª—å–∑—É–µ–º AI –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–∫ fallback');
    const aiImageGenerator = require('./ai-image-generator.js');

    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const previousImage = {
      url: lastImageUrl,
      description: lastImageDescription
    };

    const imageResult = await aiImageGenerator.generateImage(userQuery, 'realistic', previousImage, sessionId);

    if (imageResult.success && imageResult.imageUrl) {
      reasons.push('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ');

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –≤ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å
      try {
        await semanticMemory.addArtifactWithContext(sessionId, {
          type: 'image_edit',
          url: imageResult.imageUrl,
          original_url: lastImageUrl,
          description: userQuery,
          original_description: lastImageDescription,
          metadata: {
            edit_type: 'intelligent_edit',
            edit_command: userQuery
          }
        });
        SmartLogger.execute(`üíæ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å`);
      } catch (error) {
        SmartLogger.execute(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å: ${error.message}`);
      }

      let response = `‚ú® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞!

![–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ](${imageResult.imageUrl})

üîß **–ò–∑–º–µ–Ω–µ–Ω–∏—è:** ${userQuery}
üì∏ **–û—Å–Ω–æ–≤–∞:** ${lastImageDescription}
üé® **–°—Ç–∏–ª—å:** –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π
üìê **–†–∞–∑–º–µ—Ä:** 1024x1024
üñºÔ∏è **–ö–∞—á–µ—Å—Ç–≤–æ:** –í—ã—Å–æ–∫–æ–µ

üí° **–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞:**
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
‚Ä¢ –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

–ï—Å–ª–∏ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏, –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å!`;

      // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
      if (options.emotional) {
        response = emotionalAnalyzer.generateEmotionalResponse(
          options.emotional, 
          response, 
          'image_editing'
        );
        reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é: ${options.emotional.dominantEmotion}`);
      }

      const finalReason = reasons.join(' ‚Üí ');
      SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

      return {
        success: true,
        response: response,
        provider: 'IntelligentImageEditorIntegrated',
        category: 'image_editing',
        editedImageUrl: imageResult.imageUrl,
        originalImageUrl: lastImageUrl,
        editCommand: userQuery,
        emotionalTone: options.emotional?.overallTone || 'neutral',
        reason: finalReason
      };
    }

    reasons.push('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–æ—Å—å, –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ª–æ–≥–∏–∫–µ');
    const finalReason = reasons.join(' ‚Üí ');
    return { success: false, shouldFallback: true, reason: finalReason };

  } catch (error) {
    reasons.push(`–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`);
    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
    return { success: false, shouldFallback: true, reason: finalReason };
  }
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
async function executeVectorizationPlan(userQuery, options) {
  SmartLogger.execute(`–í—ã–ø–æ–ª–Ω—è—é –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`);

  const reasons = [];
  const sessionId = options.sessionId || 'default';

  reasons.push(`–†–∞—Å–ø–æ–∑–Ω–∞–ª –∑–∞–ø—Ä–æ—Å "${userQuery}" –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏`);

  try {
    // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —á–∞—Ç–∞
    const lastImageInfo = findLastImageInContext(options.chatContext);
    
    let lastImageUrl = null;
    if (lastImageInfo) {
      lastImageUrl = lastImageInfo.url;
      reasons.push(`–ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–ª—è –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${lastImageUrl.substring(0, 50)}...`);
    }

    if (!lastImageUrl) {
      reasons.push('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      const finalReason = reasons.join(' ‚Üí ');
      return { 
        success: true, 
        response: '‚ùå –î–ª—è –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.',
        provider: 'IntelligentVectorizer',
        reason: finalReason
      };
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 5006
    const fetch = require('node-fetch');

    try {
      const healthCheck = await fetch('http://localhost:5006/health', { timeout: 5000 });
      if (!healthCheck.ok) {
        throw new Error('–í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
      reasons.push('–í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 5006 –¥–æ—Å—Ç—É–ø–µ–Ω');
    } catch (error) {
      reasons.push('–í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
      return { success: false, shouldFallback: true, reason: reasons.join(' ‚Üí ') };
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const vectorizeRequest = {
      imageUrl: lastImageUrl,
      quality: 'simple',
      outputFormat: 'svg'
    };

    reasons.push('–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ ImageTracerJS');

    const vectorizeResponse = await fetch('http://localhost:5006/vectorize-url', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(vectorizeRequest),
      timeout: 30000
    });

    if (vectorizeResponse.ok) {
      const result = await vectorizeResponse.json();

      if (result.success) {
        const filename = result.data?.filename || result.result?.filename;
        const fileUrl = result.data?.url || `/output/${filename}`;

        reasons.push('–í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

        let response = `‚úÖ –í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä!

üìÑ –§–æ—Ä–º–∞—Ç: SVG (ImageTracerJS v1.2.6)  
üé® –ö–∞—á–µ—Å—Ç–≤–æ: –í—ã—Å–æ–∫–æ–µ
üìÅ –§–∞–π–ª: ${filename}
üîó [–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å SVG](${fileUrl})
üì• [–°–∫–∞—á–∞—Ç—å SVG](${fileUrl}?download=true)

üß† **–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:** –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –±–µ—Å–µ–¥–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.`;

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
        if (options.emotional) {
          response = emotionalAnalyzer.generateEmotionalResponse(
            options.emotional, 
            response, 
            'vectorization'
          );
          reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é: ${options.emotional.dominantEmotion}`);
        }

        const finalReason = reasons.join(' ‚Üí ');
        SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

        return {
          success: true,
          response: response,
          provider: 'IntelligentVectorizerIntegrated',
          category: 'vectorization',
          vectorUrl: fileUrl,
          emotionalTone: options.emotional?.overallTone || 'neutral',
          reason: finalReason
        };
      }
    }

    reasons.push('–í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ª–æ–≥–∏–∫–µ');
    const finalReason = reasons.join(' ‚Üí ');
    return { success: false, shouldFallback: true, reason: finalReason };

  } catch (error) {
    reasons.push(`–û—à–∏–±–∫–∞ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error.message}`);
    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
    return { success: false, shouldFallback: true, reason: finalReason };
  }
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–æ–≤
 */
async function executeWebsiteAnalysisPlan(userQuery, options) {
  SmartLogger.execute(`–í—ã–ø–æ–ª–Ω—è—é –∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞ –¥–ª—è: "${userQuery}"`);

  const reasons = [];
  reasons.push(`–†–∞—Å–ø–æ–∑–Ω–∞–ª –∑–∞–ø—Ä–æ—Å "${userQuery}" –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞`);

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –Ω–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    const websiteAnalyzer = require('./accurate-website-analyzer.cjs');

    reasons.push('–ò—Å–ø–æ–ª—å–∑—É—é —Ç–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å–∞–π—Ç–æ–≤ —Å —Ä–µ–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞
    const detection = websiteAnalyzer.detectWebsiteAnalysisIntent(userQuery);
    if (!detection.isWebsiteAnalysis) {
      reasons.push('–ó–∞–ø—Ä–æ—Å –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç URL –∏–ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞');
      return { success: false, shouldFallback: true, reason: reasons.join(' ‚Üí ') };
    }

    reasons.push(`–î–µ—Ç–µ–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞: —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ${detection.confidence}%`);

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞
    const analysisResult = await websiteAnalyzer.analyzeWebsite(userQuery, options);

    if (analysisResult.success) {
      reasons.push('–ê–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');

      let response = analysisResult.response;

      // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
      if (options.emotional) {
        response = emotionalAnalyzer.generateEmotionalResponse(
          options.emotional, 
          response, 
          'website_analysis'
        );
        reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é: ${options.emotional.dominantEmotion}`);
      }

      const finalReason = reasons.join(' ‚Üí ');
      SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

      return {
        success: true,
        response: response,
        provider: 'IntelligentWebsiteAnalyzer',
        category: 'website_analysis',
        url: analysisResult.url,
        websiteData: {
          businessType: analysisResult.businessAnalysis?.businessType,
          features: analysisResult.businessAnalysis?.features
        },
        emotionalTone: options.emotional?.overallTone || 'neutral',
        reason: finalReason
      };
    } else {
      reasons.push(`–ê–Ω–∞–ª–∏–∑ –Ω–µ —É–¥–∞–ª—Å—è: ${analysisResult.error}`);
      const finalReason = reasons.join(' ‚Üí ');
      SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
      return { success: false, shouldFallback: true, reason: finalReason };
    }

  } catch (error) {
    reasons.push(`–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞: ${error.message}`);
    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
    return { success: false, shouldFallback: true, reason: finalReason };
  }
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ –≤—ã—à–∏–≤–∫—É
 */
async function executeEmbroideryPlan(userQuery, options) {
  SmartLogger.execute(`–í—ã–ø–æ–ª–Ω—è—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –≤ –≤—ã—à–∏–≤–∫—É`);

  // –≠—Ç–æ—Ç –ø–ª–∞–Ω –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —á–µ—Ä–µ–∑ fallback –∫ smart-router
  return { success: false, shouldFallback: true };
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
 */
async function executeTimeDatePlan(userQuery, options) {
  SmartLogger.execute(`–ü–æ–ª—É—á–∞—é —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É`);

  const reasons = [];
  reasons.push(`–†–∞—Å–ø–æ–∑–Ω–∞–ª –∑–∞–ø—Ä–æ—Å "${userQuery}" –∫–∞–∫ –≤–æ–ø—Ä–æ—Å –æ –≤—Ä–µ–º–µ–Ω–∏/–¥–∞—Ç–µ`);
  reasons.push('–ü–æ–ª—É—á–∞—é —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ');

  const now = new Date();
  const timeStr = now.toLocaleString('ru-RU', { 
    timeZone: 'Europe/Moscow',
    year: 'numeric',
    month: 'long', 
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit',
    weekday: 'long'
  });

  reasons.push('–§–æ—Ä–º–∞—Ç–∏—Ä—É—é –≤—Ä–µ–º—è –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è —á—Ç–µ–Ω–∏—è –≤–∏–¥–µ');

  let response = `–°–µ–π—á–∞—Å: ${timeStr} (–º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è)`;

  // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
  if (options.emotional) {
    response = emotionalAnalyzer.generateEmotionalResponse(
      options.emotional, 
      response, 
      'time_date'
    );
    reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é: ${options.emotional.dominantEmotion}`);
  }

  const finalReason = reasons.join(' ‚Üí ');
  SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

  return {
    success: true,
    response: response,
    provider: 'IntelligentTimeProviderEmotional',
    category: 'time_date',
    emotionalTone: options.emotional?.overallTone || 'neutral',
    reason: finalReason
  };
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –∫–æ–º–∞–Ω–¥ –ø–∞–º—è—Ç–∏
 */
async function executeMemoryCommandPlan(plan, userQuery, options) {
  SmartLogger.execute(`–í—ã–ø–æ–ª–Ω—è—é –∫–æ–º–∞–Ω–¥—É –ø–∞–º—è—Ç–∏: ${plan.command}`);

  const reasons = [];
  const sessionId = options.sessionId || 'default';

  reasons.push(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–∞–º—è—Ç–∏: ${plan.command}`);

  try {
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–∞–º—è—Ç–∏
    const commandResult = sessionMemory.processMemoryCommand(sessionId, plan.command, plan.params);
    reasons.push(`–ö–æ–º–∞–Ω–¥–∞ "${plan.command}" –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    let response = commandResult;
    if (options.emotional) {
      response = emotionalAnalyzer.generateEmotionalResponse(
        options.emotional, 
        commandResult, 
        'memory_command'
      );
      reasons.push(`–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–¥ —ç–º–æ—Ü–∏—é: ${options.emotional.dominantEmotion}`);
    }

    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

    return {
      success: true,
      response: response,
      provider: 'IntelligentMemoryManager',
      category: 'memory_command',
      command: plan.command,
      emotionalTone: options.emotional?.overallTone || 'neutral',
      reason: finalReason
    };
  } catch (error) {
    reasons.push(`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: ${error.message}`);
    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
    return { success: false, shouldFallback: true, reason: finalReason };
  }
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –æ–±—ã—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è
 */
async function executeConversationPlan(userQuery, options) {
  SmartLogger.execute(`–ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è`);

  const reasons = [];
  const sessionId = options.sessionId || 'default';

  reasons.push(`–ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª "${userQuery}" –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ`);

  try {
    // –ü–æ–ª—É—á–∞–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ –æ–ø—Ü–∏–π
    const emotional = options.emotional || { dominantEmotion: 'neutral', overallTone: 'neutral' };

    reasons.push(`–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${emotional.dominantEmotion}`);

    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–æ–ª–µ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    const userContext = sessionMemory.getUserContext(sessionId);
    reasons.push('–ó–∞–≥—Ä—É–∑–∏–ª –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–∞–º—è—Ç–∏ —Å–µ—Å—Å–∏–∏');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º chatContext –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏–π
    let conversationContext = userContext;
    if (options.chatContext && options.chatContext.context) {
      conversationContext += `\n\n–ü–û–°–õ–ï–î–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–Ø:\n${options.chatContext.context.substring(0, 500)}`;
      reasons.push('–î–æ–±–∞–≤–∏–ª –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –±–µ—Å–µ–¥—ã');
    }

    // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –ø–æ–¥ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    let conversationPrompt = `–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π AI-–ø–æ–º–æ—â–Ω–∏–∫ —Å –ø–∞–º—è—Ç—å—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ. `;

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–µ—Å–µ–¥—ã –≤ –ø—Ä–æ–º–ø—Ç
    if (conversationContext && conversationContext.length > 50) {
      conversationPrompt += `

${conversationContext}

–£—á–∏—Ç—ã–≤–∞–π —ç—Ç–æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ —Å–≤–æ—ë–º –æ—Ç–≤–µ—Ç–µ. `;
      reasons.push('–î–æ–±–∞–≤–∏–ª –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–µ—Å–µ–¥—ã –≤ –ø—Ä–æ–º–ø—Ç');
    }

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞ –ø–æ–¥ —ç–º–æ—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    switch (emotional.dominantEmotion) {
      case 'joy':
        conversationPrompt += `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ö–æ—Ä–æ—à–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏! –û—Ç–≤–µ—á–∞–π –ø–æ–∑–∏—Ç–∏–≤–Ω–æ –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω–æ. `;
        reasons.push('–ù–∞—Å—Ç—Ä–æ–∏–ª –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞');
        break;
      case 'anger':
        conversationPrompt += `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ —Ä–∞–∑–¥—Ä–∞–∂—ë–Ω. –û—Ç–≤–µ—á–∞–π —Å–ø–æ–∫–æ–π–Ω–æ, –ø–æ–Ω–∏–º–∞—é—â–µ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ. `;
        reasons.push('–ù–∞—Å—Ç—Ä–æ–∏–ª —Å–ø–æ–∫–æ–π–Ω—ã–π –∏ –ø–æ–Ω–∏–º–∞—é—â–∏–π —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞');
        break;
      case 'sadness':
        conversationPrompt += `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥—Ä—É—Å—Ç–∏—Ç –∏–ª–∏ —É—Å—Ç–∞–ª. –û—Ç–≤–µ—á–∞–π –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–µ –∏ –æ–±–æ–¥—Ä—è—é—â–µ. `;
        reasons.push('–ù–∞—Å—Ç—Ä–æ–∏–ª –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π –∏ –æ–±–æ–¥—Ä—è—é—â–∏–π —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞');
        break;
      case 'surprise':
        conversationPrompt += `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∏–≤–ª—ë–Ω –∏–ª–∏ –ª—é–±–æ–ø—ã—Ç–µ–Ω. –û—Ç–≤–µ—á–∞–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∏ –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–æ. `;
        reasons.push('–ù–∞—Å—Ç—Ä–æ–∏–ª –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∏ –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞');
        break;
      case 'polite':
        conversationPrompt += `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—á–µ–Ω—å –≤–µ–∂–ª–∏–≤. –û—Ç–≤–µ—á–∞–π —Ç–∞–∫–∂–µ –≤–µ–∂–ª–∏–≤–æ –∏ —É—á—Ç–∏–≤–æ. `;
        reasons.push('–ù–∞—Å—Ç—Ä–æ–∏–ª –≤–µ–∂–ª–∏–≤—ã–π –∏ —É—á—Ç–∏–≤—ã–π —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞');
        break;
      default:
        conversationPrompt += `–û—Ç–≤–µ—á–∞–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ. `;
        reasons.push('–ò—Å–ø–æ–ª—å–∑—É—é –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞');
    }

    conversationPrompt += `

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "${userQuery}"

–û—Ç–≤–µ—Ç—å –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å —á–µ–º-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º, –ø—Ä–µ–¥–ª–æ–∂–∏ —ç—Ç–æ.`;

    reasons.push('–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ AI –º–æ–¥–µ–ª–∏ Qwen_Qwen_2_72B –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞');

    let pythonProvider;
    try {
      const pythonProviderModule = await import('./python_provider_routes.js');
      pythonProvider = pythonProviderModule.default || pythonProviderModule;
    } catch (error) {
      SmartLogger.execute(`AI —á–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
      return { success: false, shouldFallback: true, reason: `AI —á–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}` };
    }

    const result = pythonProvider ? await pythonProvider.callPythonAI(conversationPrompt, 'Qwen_Qwen_2_72B') : null;

    if (result && typeof result === 'string') {
      reasons.push('AI —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç, –ø—Ä–∏–º–µ–Ω—è—é —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é');

      // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é –∫ –æ—Ç–≤–µ—Ç—É
      const adaptedResponse = emotionalAnalyzer.generateEmotionalResponse(
        emotional, 
        result.trim(), 
        'conversation'
      );

      reasons.push('–§–∏–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç —Å —É—á–µ—Ç–æ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞');

      const finalReason = reasons.join(' ‚Üí ');
      SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);

      return {
        success: true,
        response: adaptedResponse,
        provider: 'IntelligentConversationEmotionalMemory',
        category: 'conversation',
        emotionalTone: emotional.overallTone,
        hasUserContext: userContext.length > 50,
        reason: finalReason
      };
    }

    reasons.push('AI –Ω–µ —Å–º–æ–≥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç, –ø–µ—Ä–µ—Ö–æ–∂—É –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ª–æ–≥–∏–∫–µ');
    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
    return { success: false, shouldFallback: true, reason: finalReason };
  } catch (error) {
    reasons.push(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${error.message}`);
    const finalReason = reasons.join(' ‚Üí ');
    SmartLogger.execute(`–ü–†–ò–ß–ò–ù–´ –î–ï–ô–°–¢–í–ò–ô: ${finalReason}`);
    return { success: false, shouldFallback: true, reason: finalReason };
  }
}

async function generateContextualResponse(message, options, reasons) {
  SmartLogger.brain(`–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Å —É—á–µ—Ç–æ–º —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);

  const sessionId = options.sessionId;
  const emotional = options.emotional || { dominantEmotion: 'neutral' };

  // –ò—â–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏–∏
  let imagesList = [];
  try {
    const { db } = require('./db.ts');
    const { aiMessages } = require('../shared/schema.ts');
    const { eq } = require('drizzle-orm');

    const messages = await db
      .select()
      .from(aiMessages)
      .where(eq(aiMessages.sessionId, sessionId))
      .orderBy(aiMessages.createdAt);

    imagesList = messages
      .filter(msg => msg.content && msg.sender === 'ai' && 
              (msg.content.includes('![') || msg.content.includes('https://image.pollinations.ai')))
      .map(msg => {
        const imageMatch = msg.content.match(/!\[([^\]]*)\]\(([^)]+)\)/);
        if (imageMatch) {
          return {
            description: imageMatch[1] || '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
            url: imageMatch[2],
            timestamp: msg.timestamp
          };
        }
        return null;
      })
      .filter(Boolean);
  } catch (error) {
    SmartLogger.brain(`–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${error.message}`);
  }

  const imagesCount = imagesList.length;
  const lastImage = imagesList[imagesList.length - 1];

  // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å —É—á–µ—Ç–æ–º —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  let contextualResponse = '';

  if (imagesCount === 0) {
    contextualResponse = "–ü–æ–∫–∞ —á—Ç–æ —è –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –Ω–∞—à–µ–π –±–µ—Å–µ–¥–µ. –•–æ—á–µ—à—å, —á—Ç–æ–±—ã —è —á—Ç–æ-—Ç–æ –Ω–∞—Ä–∏—Å–æ–≤–∞–ª? üé®";
  } else if (imagesCount === 1) {
    contextualResponse = `–Ø —Å–æ–∑–¥–∞–ª –¥–ª—è —Ç–µ–±—è –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ! –≠—Ç–æ –±—ã–ª–∞ ${lastImage.description.toLowerCase()}. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏! üé®‚ú®`;
  } else {
    contextualResponse = `–Ø —Å–æ–∑–¥–∞–ª –¥–ª—è —Ç–µ–±—è —É–∂–µ ${imagesCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –Ω–∞—à–µ–π –±–µ—Å–µ–¥–µ! –ü–æ—Å–ª–µ–¥–Ω–µ–µ –±—ã–ª–æ ${lastImage.description.toLowerCase()}. –ú–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ! üé®‚ú®`;
  }

  reasons.push(`–ù–∞–π–¥–µ–Ω–æ ${imagesCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–∏`);
  reasons.push('–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Å —É—á–µ—Ç–æ–º —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');

  // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
  const adaptedResponse = emotionalAnalyzer.generateEmotionalResponse(
    emotional, 
    contextualResponse, 
    'conversation_with_context'
  );

  return {
    success: true,
    response: adaptedResponse,
    provider: 'IntelligentContextualMemory',
    category: 'conversation_with_context',
    emotionalTone: emotional.dominantEmotion,
    imagesFound: imagesCount,
    reason: reasons.join(' ‚Üí ')
  };
}

/**
 * –ü–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —á–∞—Ç–∞
 */
function findLastImageInContext(chatContext) {
  if (!chatContext || !chatContext.context) {
    SmartLogger.brain('–ö–æ–Ω—Ç–µ–∫—Å—Ç —á–∞—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    return null;
  }

  const contextLines = chatContext.context.split('\n');
  SmartLogger.brain(`–ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ ${contextLines.length} —Å—Ç—Ä–æ–∫–∞—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞`);

  // –ò—â–µ–º —Å –∫–æ–Ω—Ü–∞ –∫ –Ω–∞—á–∞–ª—É (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
  for (let i = contextLines.length - 1; i >= 0; i--) {
    const line = contextLines[i];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ markdown –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const imageMatch1 = line.match(/!\[([^\]]*)\]\((https:\/\/image\.pollinations\.ai[^)]+)\)/);
    const imageMatch2 = line.match(/(https:\/\/image\.pollinations\.ai[^\s\)]+)/);
    
    const imageMatch = imageMatch1 || imageMatch2;
    
    if (imageMatch) {
      const imageInfo = {
        description: imageMatch1 ? (imageMatch1[1] || '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ') : '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        url: imageMatch1 ? imageMatch1[2] : imageMatch[1],
        foundInLine: i,
        sourceText: line
      };
      
      SmartLogger.brain(`–ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: ${imageInfo.description}`);
      SmartLogger.brain(`URL: ${imageInfo.url.substring(0, 80)}...`);
      
      return imageInfo;
    }
  }

  SmartLogger.brain('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —á–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  return null;
}

/**
 * –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–û–ì–û –ü–†–û–¶–ï–°–°–û–†–ê
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º 50+ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π
 * –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π —Å –º–µ—Ç–∞-—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
 */
async function analyzeAndExecute(userQuery, options = {}) {
  SmartLogger.brain(`=== –ó–ê–ü–£–°–ö –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê ===`);
  SmartLogger.brain(`–ó–∞–ø—Ä–æ—Å: "${userQuery}"`);
  SmartLogger.brain(`SessionId: ${options.sessionId || 'default'}`);

  const globalReasons = [];
  globalReasons.push('–ó–∞–ø—É—Å—Ç–∏–ª –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

  // ===== –ü–†–û–í–ï–†–ö–ê –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–• =====
  // –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –≤—ã–∑–≤–∞–Ω –∫–∞–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π
  const semanticData = options.semanticData;
  if (semanticData) {
    SmartLogger.brain(`üîó –ü–æ–ª—É—á–µ–Ω—ã —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–æ–≥–∞—â–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞`);
    SmartLogger.brain(`üìä –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${semanticData.confidence}%`);
    
    if (semanticData.current_project) {
      SmartLogger.brain(`üìã –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞: ${semanticData.current_project.title}`);
    }
    
    globalReasons.push('–ò–Ω—Ç–µ–≥—Ä–∏—Ä—É—é —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –∞–Ω–∞–ª–∏–∑');
  }

  try {
    // –®–∞–≥ 1: –ê–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π (–≤–∫–ª—é—á–∞—è –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–º–∞–Ω–¥ –ø–∞–º—è—Ç–∏)
    globalReasons.push('–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –Ω–∞–º–µ—Ä–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≥—Ä–∞–º–º–∞—Ç–∏–∫–∞ + —ç–º–æ—Ü–∏–∏ + –∫–æ–Ω—Ç–µ–∫—Å—Ç + –ø–∞–º—è—Ç—å)');
    const intent = await analyzeUserIntent(userQuery, options);

    globalReasons.push(`–û–ø—Ä–µ–¥–µ–ª–∏–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ${intent.category} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${intent.confidence}%)`);

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥ –ø–∞–º—è—Ç–∏ - –æ–Ω–∏ –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è
    if (intent.category === 'memory_command') {
      globalReasons.push('–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–∞–º—è—Ç–∏ - –≤—ã–ø–æ–ª–Ω—è—é –Ω–∞–ø—Ä—è–º—É—é');
      const plan = { 
        category: 'memory_command', 
        description: '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é',
        command: intent.command,
        params: intent.params,
        shouldExecute: true,
        confidence: intent.confidence,
        grammar: intent.grammar,
        context: intent.context,
        emotional: intent.emotional
      };

      const result = await executeMemoryCommandPlan(plan, userQuery, options);

      if (result.success) {
        globalReasons.push('–ö–æ–º–∞–Ω–¥–∞ –ø–∞–º—è—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        const finalGlobalReason = globalReasons.join(' ‚Üí ');
        SmartLogger.brain(`=== –§–ò–ù–ê–õ–¨–ù–´–ï –ü–†–ò–ß–ò–ù–´: ${finalGlobalReason} ===`);

        result.globalReason = finalGlobalReason;
        if (result.reason) {
          result.fullReason = `${finalGlobalReason} | –î–ï–¢–ê–õ–ò: ${result.reason}`;
        }

        SmartLogger.brain(`=== –ö–û–ú–ê–ù–î–ê –ü–ê–ú–Ø–¢–ò –í–´–ü–û–õ–ù–ï–ù–ê ===`);
        return result;
      }
    }

    // –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∞
    globalReasons.push('–°–æ–∑–¥–∞—é –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–π');
    const plan = await createActionPlan(intent, options);

    globalReasons.push(`–ü–ª–∞–Ω: ${plan.description} (–ø–æ—Ä–æ–≥: ${intent.smartThreshold}%)`);

    // –®–∞–≥ 3: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —É–º–Ω—ã–µ –ø–æ—Ä–æ–≥–∏)
    if (plan.shouldExecute) {
      globalReasons.push(`–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ${plan.confidence}% –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ø–æ—Ä–æ–≥ ${intent.smartThreshold}%, –≤—ã–ø–æ–ª–Ω—è—é –ø–ª–∞–Ω`);
      SmartLogger.brain(`–í—ã–ø–æ–ª–Ω—è–µ–º –ø–ª–∞–Ω —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é ${plan.confidence}% (–ø–æ—Ä–æ–≥ –ø—Ä–æ–π–¥–µ–Ω)`);

      const result = await executePlan(plan, userQuery, options);

      if (result.success) {
        globalReasons.push('–ü–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
        const finalGlobalReason = globalReasons.join(' ‚Üí ');
        SmartLogger.brain(`=== –§–ò–ù–ê–õ–¨–ù–´–ï –ü–†–ò–ß–ò–ù–´: ${finalGlobalReason} ===`);

        // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø—Ä–∏—á–∏–Ω—É –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
        result.globalReason = finalGlobalReason;
        if (result.reason) {
          result.fullReason = `${finalGlobalReason} | –î–ï–¢–ê–õ–ò: ${result.reason}`;
        }

        SmartLogger.brain(`=== –£–°–ü–ï–®–ù–û–ï –í–´–ü–û–õ–ù–ï–ù–ò–ï –ü–õ–ê–ù–ê ===`);
        return result;
      } else if (result.shouldFallback) {
        globalReasons.push('–ü–ª–∞–Ω –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø–µ—Ä–µ—Ö–æ–∂—É –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ª–æ–≥–∏–∫–µ');
        const finalGlobalReason = globalReasons.join(' ‚Üí ');
        SmartLogger.brain(`=== –§–ò–ù–ê–õ–¨–ù–´–ï –ü–†–ò–ß–ò–ù–´: ${finalGlobalReason} ===`);
        SmartLogger.brain(`=== –ü–ï–†–ï–•–û–î –ö –°–¢–ê–ù–î–ê–†–¢–ù–û–ô –õ–û–ì–ò–ö–ï ===`);
        return { success: false, shouldFallback: true, globalReason: finalGlobalReason };
      }
    }

    // –ï—Å–ª–∏ –ø–ª–∞–Ω –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ª–æ–≥–∏–∫—É
    globalReasons.push(`–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ${plan.confidence}% –Ω–∏–∂–µ –ø–æ—Ä–æ–≥–∞ ${intent.smartThreshold}%, –∏—Å–ø–æ–ª—å–∑—É—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ª–æ–≥–∏–∫—É`);
    const finalGlobalReason = globalReasons.join(' ‚Üí ');
    SmartLogger.brain(`=== –§–ò–ù–ê–õ–¨–ù–´–ï –ü–†–ò–ß–ò–ù–´: ${finalGlobalReason} ===`);
    SmartLogger.brain(`=== –ü–õ–ê–ù –ù–ï –ü–†–û–®–ï–õ –£–ú–ù–´–ô –ü–û–†–û–ì, –ü–ï–†–ï–•–û–î –ö –°–¢–ê–ù–î–ê–†–¢–ù–û–ô –õ–û–ì–ò–ö–ï ===`);
    SmartLogger.brain(`–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${plan.confidence}%, —Ç—Ä–µ–±—É–µ–º—ã–π –ø–æ—Ä–æ–≥: ${intent.smartThreshold}%`);
    return { success: false, shouldFallback: true, globalReason: finalGlobalReason };

  } catch (error) {
    globalReasons.push(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    const finalGlobalReason = globalReasons.join(' ‚Üí ');
    SmartLogger.brain(`=== –§–ò–ù–ê–õ–¨–ù–´–ï –ü–†–ò–ß–ò–ù–´: ${finalGlobalReason} ===`);
    SmartLogger.brain(`=== –û–®–ò–ë–ö–ê –ê–ù–ê–õ–ò–ó–ê: ${error.message} ===`);
    return { success: false, shouldFallback: true, error: error.message, globalReason: finalGlobalReason };
  }
}

/**
 * –ú–∞–ø–ø–∏–Ω–≥ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –∫–ª–∞—Å—Ç–µ—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
 */
function mapSemanticClusterToCategory(clusterName) {
  const clusterMapping = {
    'branding': 'image_generation',
    'image_creation': 'image_generation',
    'apparel_design': 'image_generation',
    'character_design': 'image_generation',
    'embroidery_design': 'embroidery',
    'signage_design': 'image_generation',
    'vectorization': 'vectorization',
    'research': 'web_search',
    'analysis': 'image_analysis'
  };
  
  return clusterMapping[clusterName] || null;
}

/**
 * –≠–¢–ê–ü 2: –§–£–ù–ö–¶–ò–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ò–ú–ò –ú–û–î–£–õ–Ø–ú–ò
 * –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ 50+ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π
 */
async function processRequest(userMessage, semanticResult) {
  try {
    console.log('üß† –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–ü–†–û–°–ê –° –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ò–ú–ò –î–ê–ù–ù–´–ú–ò...');
    console.log(`   –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π: ${semanticResult.modulesActivated || 0}`);
    console.log(`   –û–±—â–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${(semanticResult.confidence * 100).toFixed(1)}%`);

    // –≠–¢–ê–ü 3: –ú–ï–¢–ê-–°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –û–¢–í–ï–¢–ê
    let metaOptimization = null;
    if (semanticResult.metaAnalysis) {
      try {
        const metaSemanticEngine = require('./semantic-memory/meta-semantic-engine.cjs');
        metaOptimization = await metaSemanticEngine.optimizeResponse({
          baseQuery: userMessage,
          semanticAnalysis: semanticResult,
          timestamp: new Date().toISOString()
        });
        console.log('üîÆ –ú–µ—Ç–∞-—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      } catch (metaError) {
        console.log('‚ö†Ô∏è –ú–µ—Ç–∞-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', metaError.message);
      }
    }

    // –û–±–æ–≥–∞—â–µ–Ω–∏–µ –æ–ø—Ü–∏–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    const enrichedOptions = {
      semanticData: semanticResult,
      advancedSemantics: semanticResult.advancedSemantics,
      metaAnalysis: semanticResult.metaAnalysis,
      confidence: semanticResult.confidence,
      processingTime: semanticResult.processingTime,
      systemVersion: semanticResult.systemVersion
    };

    // –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const intelligentResponse = await analyzeAndExecute(userMessage, enrichedOptions);

    // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–µ—Ç–∞-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤ –æ—Ç–≤–µ—Ç
    if (metaOptimization && intelligentResponse.success) {
      intelligentResponse.response = metaOptimization.optimizedResponse || intelligentResponse.response;
      intelligentResponse.metaOptimization = metaOptimization;
      intelligentResponse.metaConfidence = metaOptimization.confidence || semanticResult.confidence;
    }

    // –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º –∞–Ω–∞–ª–∏–∑–µ
    return {
      ...intelligentResponse,
      semanticEnrichment: {
        modulesUsed: semanticResult.modulesActivated || 0,
        semanticConfidence: semanticResult.confidence,
        advancedInsights: semanticResult.advancedSemantics,
        processingTime: semanticResult.processingTime,
        revolutionaryUpgrade: semanticResult.revolutionaryUpgrade
      },
      confidence: Math.max(
        intelligentResponse.confidence || 0,
        semanticResult.confidence || 0,
        metaOptimization?.confidence || 0
      ),
      type: intelligentResponse.type || 'semantic_enhanced',
      metaOptimization: metaOptimization
    };

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å —Å–µ–º–∞–Ω—Ç–∏–∫–æ–π:', error.message);
    
    // Fallback: –æ–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–µ–∑ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    const fallbackResponse = await analyzeAndExecute(userMessage, {});
    
    return {
      ...fallbackResponse,
      semanticEnrichment: {
        error: error.message,
        fallbackMode: true,
        modulesUsed: 0
      },
      type: 'semantic_fallback'
    };
  }
}

module.exports = {
  analyzeAndExecute,
  analyzeUserIntent,
  createActionPlan,
  executePlan,
  processRequest, // –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–û–ô –ò–ù–¢–ï–ì–†–ê–¶–ò–ò
  mapSemanticClusterToCategory
};