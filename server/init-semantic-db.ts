
import { db } from './db';
import { userProfiles, learningPatterns, projectMemory, emotionalHistory, semanticCache } from '../shared/schema';

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–∞–±–ª–∏—Ü —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 */
export async function initializeSemanticDatabase() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await db.execute('SELECT 1');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
    const tableCheck = await db.execute(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_name IN ('user_profiles', 'learning_patterns', 'project_memory', 'emotional_history', 'semantic_cache')
    `);
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–∞–±–ª–∏—Ü: ${tableCheck.length}/5`);
    
    if (tableCheck.length < 5) {
      console.log('‚ö†Ô∏è –ù–µ –≤—Å–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏:');
      console.log('npx drizzle-kit migrate');
      return false;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü—ã –ø—É—Å—Ç—ã–µ)
    const userProfilesCount = await db.select().from(userProfiles).limit(1);
    
    if (userProfilesCount.length === 0) {
      console.log('üìù –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');
      
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1
      await db.insert(userProfiles).values({
        userId: 1,
        favoriteColors: ['—Å–∏–Ω–∏–π', '–∑–µ–ª–µ–Ω—ã–π', '–±–µ–ª—ã–π'],
        preferredStyles: ['–º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π', '—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π'],
        designComplexity: 'medium',
        totalInteractions: 0
      }).onConflictDoNothing();
      
      // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –æ–±—É—á–µ–Ω–∏—è
      await db.insert(learningPatterns).values([
        {
          userId: 1,
          pattern: '–ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ —Ñ–æ—Ä–º—ã',
          category: 'design_preference',
          confidence: 70,
          successRate: 80,
          timesUsed: 0
        },
        {
          userId: 1,
          pattern: '—á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏–Ω–∏–π —Ü–≤–µ—Ç',
          category: 'color_preference',
          confidence: 60,
          successRate: 75,
          timesUsed: 0
        }
      ]).onConflictDoNothing();
      
      console.log('‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    }
    
    // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞
    await db.delete(semanticCache).where(
      db.sql`expires_at < NOW()`
    );
    
    console.log('üßπ –°—Ç–∞—Ä—ã–π –∫—ç—à –æ—á–∏—â–µ–Ω');
    console.log('‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ');
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ë–î:', error);
    return false;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export { userProfiles, learningPatterns, projectMemory, emotionalHistory, semanticCache };
