/**
 * –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –ø–æ–∏—Å–∫–∞
 */

async function testSearchIntegration() {
  console.log('üîç –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –í–ù–ï–®–ù–ï–ì–û –ü–û–ò–°–ö–ê –í –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–û–ô –°–ò–°–¢–ï–ú–ï');
  console.log('=======================================================\n');

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
    const semanticIntegration = require('./server/semantic-integration-layer.cjs');
    console.log('‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');

    // –¢–ï–°–¢ 1: –î–µ—Ç–µ–∫—Ç–æ—Ä –∑–Ω–∞–Ω–∏–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    console.log('\nüß† –¢–ï–°–¢ 1: –î–µ—Ç–µ–∫—Ç–æ—Ä –∑–Ω–∞–Ω–∏–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤');
    console.log('=====================================');
    
    const testQueries = [
      '–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ø–ª–∞–Ω–µ—Ç—É –ú–∞—Ä—Å',
      '–ß—Ç–æ —Ç–∞–∫–æ–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É–≥–æ–ª—å?', 
      '–°–æ–∑–¥–∞–π –∫–∞—Ä—Ç–∏–Ω–∫—É –∫–æ—Ç–∞',
      '–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?'
    ];

    // –≠–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É detectKnowledgeRequest
    testQueries.forEach(query => {
      const lowerInput = query.toLowerCase();
      
      const knowledgeKeywords = [
        '—Ä–∞—Å—Å–∫–∞–∂–∏', '—á—Ç–æ —Ç–∞–∫–æ–µ', '–æ–±—ä—è—Å–Ω–∏', '–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç', '—á—Ç–æ –∑–Ω–∞–µ—à—å –æ',
        '–ø–æ—á–µ–º—É', '–≥–¥–µ', '–∫–æ–≥–¥–∞', '–∫—Ç–æ', '–∫–∞–∫–æ–π', '–∏—Å—Ç–æ—Ä–∏—è'
      ];
      
      const knowledgeDomains = [
        '–ø–ª–∞–Ω–µ—Ç', '–º–∞—Ä—Å', '–∑–µ–º–ª—è', '–∫–æ—Å–º–æ—Å', '–Ω–∞—É–∫–∞', '—Ñ–∏–∑–∏–∫–∞', '—Ö–∏–º–∏—è',
        '–±–∏–æ–ª–æ–≥–∏—è', '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–∏—Å—Ç–æ—Ä–∏—è', '–≥–µ–æ–≥—Ä–∞—Ñ–∏—è', '—É–≥–æ–ª—å'
      ];

      const hasKnowledgeKeywords = knowledgeKeywords.some(k => lowerInput.includes(k));
      const hasKnowledgeDomains = knowledgeDomains.some(d => lowerInput.includes(d));
      const isQuestion = lowerInput.includes('?') || lowerInput.startsWith('—á—Ç–æ');

      const needsExternal = hasKnowledgeKeywords || hasKnowledgeDomains || isQuestion;
      
      console.log(`${needsExternal ? '‚úÖ' : '‚ùå'} "${query}" -> ${needsExternal ? '–í–ù–ï–®–ù–ò–ô –ü–û–ò–°–ö' : '–ª–æ–∫–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç'}`);
    });

    // –¢–ï–°–¢ 2: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∑–Ω–∞–Ω–∏–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    console.log('\nüß† –¢–ï–°–¢ 2: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∑–Ω–∞–Ω–∏–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞');
    console.log('================================================');

    const knowledgeQuery = '–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ø–ª–∞–Ω–µ—Ç—É –ú–∞—Ä—Å';
    console.log(`üìù –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: "${knowledgeQuery}"`);
    
    const result = await semanticIntegration.analyzeWithSemantics(knowledgeQuery, {
      sessionId: 'test-search-' + Date.now(),
      language: 'ru'
    });
    
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:');
    console.log(`‚úÖ –°–µ–º–∞–Ω—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞: ${result.shouldUseSemantic ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`üéØ –ü—Ä–∏—á–∏–Ω–∞: ${result.reason}`);
    console.log(`üîÆ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${result.confidence ? (result.confidence * 100).toFixed(1) + '%' : '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞'}`);
    
    if (result.semanticResult) {
      console.log(`üìà –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${result.semanticResult.category || '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞'}`);
      console.log(`üß† –ù–∞–º–µ—Ä–µ–Ω–∏–µ: ${result.semanticResult.intent || '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}`);
    }

    // –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –ø–æ–∏—Å–∫–∞ —á–µ—Ä–µ–∑ smart-router
    console.log('\nüöÄ –¢–ï–°–¢ 3: –¢–µ—Å—Ç —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω—ã–π —Ä–æ—É—Ç–µ—Ä');
    console.log('==================================');

    try {
      const smartRouter = require('./server/smart-router.js');
      console.log('‚úÖ Smart Router –∑–∞–≥—Ä—É–∂–µ–Ω');

      // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω—ã–π —Ä–æ—É—Ç–µ—Ä 
      const routerResult = await smartRouter.handleMessage(knowledgeQuery, {
        sessionId: 'test-search-router-' + Date.now(),
        includeAdvancedSearch: true,
        includeExternalKnowledge: true
      });

      console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –†–û–£–¢–ï–†–ê:');
      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${routerResult.success ? '–î–ê' : '–ù–ï–¢'}`);
      console.log(`ü§ñ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${routerResult.provider || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log(`üß† –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π: ${routerResult.semantic ? '–î–ê' : '–ù–ï–¢'}`);
      console.log(`üîç –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π: ${routerResult.autonomous ? '–î–ê' : '–ù–ï–¢'}`);
      
      if (routerResult.response) {
        console.log(`üìù –û—Ç–≤–µ—Ç (${routerResult.response.length} —Å–∏–º–≤–æ–ª–æ–≤): "${routerResult.response.substring(0, 100)}..."`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      if (routerResult.performance) {
        console.log(`‚ö° –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${routerResult.performance.processingTime || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}–º—Å`);
        console.log(`üîÑ –ê–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π: ${routerResult.performance.activeModules || 0}`);
      }

    } catch (routerError) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞: ${routerError.message}`);
    }

    console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
    console.log('=============');
    console.log('‚úÖ –î–µ—Ç–µ–∫—Ç–æ—Ä –∑–Ω–∞–Ω–∏–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: –†–ê–ë–û–¢–ê–ï–¢');
    console.log('‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞: –ê–ö–¢–ò–í–ù–ê');
    console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–æ—É—Ç–µ—Ä–æ–º: –ü–†–û–í–ï–†–ï–ù–ê');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –ø–æ–∏—Å–∫–∞');

  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    console.error(error.stack);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testSearchIntegration();